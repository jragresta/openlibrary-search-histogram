{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {\n    s += arguments[i].length;\n  }\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) {\n    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {\n      r[k] = a[j];\n    }\n  }\n\n  return r;\n};\n\nimport { Series } from \"./series/series\";\nimport { LegendMarker } from \"./legend\";\nimport { ChartTheme } from \"./themes/chartTheme\";\nimport { DarkTheme } from './themes/darkTheme';\nimport { MaterialLight } from \"./themes/materialLight\";\nimport { MaterialDark } from \"./themes/materialDark\";\nimport { PastelLight } from \"./themes/pastelLight\";\nimport { PastelDark } from \"./themes/pastelDark\";\nimport { SolarLight } from \"./themes/solarLight\";\nimport { SolarDark } from \"./themes/solarDark\";\nimport { VividLight } from \"./themes/vividLight\";\nimport { VividDark } from \"./themes/vividDark\";\nimport { find } from \"../util/array\";\nimport { deepMerge, getValue, isObject } from \"../util/object\";\nimport mappings from './agChartMappings';\nvar lightTheme = new ChartTheme();\nvar darkTheme = new DarkTheme();\nexport var lightThemes = {\n  'undefined': lightTheme,\n  'null': lightTheme,\n  'ag-default': lightTheme,\n  'ag-material': new MaterialLight(),\n  'ag-pastel': new PastelLight(),\n  'ag-solar': new SolarLight(),\n  'ag-vivid': new VividLight()\n};\nexport var darkThemes = {\n  'undefined': darkTheme,\n  'null': darkTheme,\n  'ag-default-dark': darkTheme,\n  'ag-material-dark': new MaterialDark(),\n  'ag-pastel-dark': new PastelDark(),\n  'ag-solar-dark': new SolarDark(),\n  'ag-vivid-dark': new VividDark()\n};\nexport var themes = __assign(__assign({}, darkThemes), lightThemes);\nexport function getChartTheme(value) {\n  if (value instanceof ChartTheme) {\n    return value;\n  }\n\n  var stockTheme = themes[value];\n\n  if (stockTheme) {\n    return stockTheme;\n  }\n\n  value = value;\n\n  if (value.baseTheme || value.overrides || value.palette) {\n    var baseTheme = getChartTheme(value.baseTheme);\n    return new baseTheme.constructor(value);\n  }\n\n  return lightTheme;\n}\nvar firstColorIndex = 0;\n\nvar AgChart = function () {\n  function AgChart() {}\n\n  AgChart.create = function (options, container, data) {\n    options = Object.create(options); // avoid mutating user provided options\n\n    if (container) {\n      options.container = container;\n    }\n\n    if (data) {\n      options.data = data;\n    } // special handling when both `autoSize` and `width` / `height` are present in the options\n\n\n    var autoSize = options && options.autoSize !== false;\n    var theme = getChartTheme(options.theme);\n    firstColorIndex = 0;\n    var chart = create(options, undefined, undefined, theme);\n\n    if (chart) {\n      if (autoSize) {\n        // `autoSize` takes precedence over `width` / `height`\n        chart.autoSize = true;\n      }\n    }\n\n    return chart;\n  };\n\n  AgChart.update = function (chart, options, container, data) {\n    if (!(chart && options)) {\n      return;\n    }\n\n    options = Object.create(options);\n\n    if (container) {\n      options.container = container;\n    }\n\n    if (data) {\n      options.data = data;\n    }\n\n    var autoSize = options && options.autoSize !== false;\n    var theme = getChartTheme(options.theme);\n    firstColorIndex = 0;\n    update(chart, options, undefined, theme);\n\n    if (autoSize) {\n      chart.autoSize = true;\n    }\n  };\n\n  AgChart.save = function (component) {\n    var target = {};\n    save(component, target);\n    return target;\n  };\n\n  AgChart.createComponent = create;\n  return AgChart;\n}();\n\nexport { AgChart };\nvar pathToSeriesTypeMap = {\n  'cartesian.series': 'line',\n  'line.series': 'line',\n  'area.series': 'area',\n  'bar.series': 'bar',\n  'column.series': 'column',\n  'histogram.series': 'histogram',\n  'scatter.series': 'scatter',\n  'polar.series': 'pie',\n  'pie.series': 'pie'\n};\n\nvar actualSeriesTypeMap = function () {\n  var map = {};\n  var actualSeries = ['area', 'bar', 'histogram', 'line', 'pie', 'scatter'];\n  actualSeries.forEach(function (series) {\n    return map[series] = series;\n  }); // Aliases:\n\n  map['column'] = 'bar';\n  return map;\n}();\n\nfunction save(component, target, mapping) {\n  if (target === void 0) {\n    target = {};\n  }\n\n  if (mapping === void 0) {\n    mapping = mappings;\n  }\n\n  if (component.constructor && component.constructor.type && !mapping.meta) {\n    mapping = mapping[component.constructor.type];\n  }\n\n  var defaults = mapping && mapping.meta && mapping.meta.defaults;\n  var keys = Object.keys(defaults);\n  keys.forEach(function (key) {\n    var value = component[key];\n\n    if (isObject(value) && (!mapping.meta.nonSerializable || mapping.meta.nonSerializable.indexOf(key) < 0)) {\n      target[key] = {}; // save(value, target[key], mapping[key]);\n    } else if (Array.isArray(value)) {// target[key] = [];\n      // save(value, target[key], map[key]);\n    } else {\n      target[key] = component[key];\n    }\n  });\n}\n\nfunction create(options, path, component, theme) {\n  var _a; // Deprecate `chart.legend.item.marker.type` in integrated chart options.\n\n\n  options = Object.create(options);\n\n  if (component instanceof LegendMarker) {\n    if (options.type) {\n      options.shape = options.type;\n    }\n  } else {\n    options = provideDefaultType(options, path);\n\n    if (path) {\n      if (options.type) {\n        path = path + '.' + options.type;\n      }\n    } else {\n      path = options.type;\n    }\n  }\n\n  if (!path) {\n    return;\n  }\n\n  var mapping = getValue(mappings, path);\n\n  if (mapping) {\n    options = provideDefaultOptions(path, options, mapping, theme);\n    var meta = mapping.meta || {};\n    var constructorParams = meta.constructorParams || [];\n    var skipKeys = ['type', 'listeners'].concat(constructorParams); // TODO: Constructor params processing could be improved, but it's good enough for current params.\n\n    var constructorParamValues = constructorParams.map(function (param) {\n      return options[param];\n    }).filter(function (value) {\n      return value !== undefined;\n    });\n\n    if (!component) {\n      component = new ((_a = meta.constructor).bind.apply(_a, __spreadArrays([void 0], constructorParamValues)))();\n\n      if (theme && component instanceof Series) {\n        firstColorIndex = theme.setSeriesColors(component, options, firstColorIndex);\n      }\n    }\n\n    var _loop_1 = function _loop_1(key) {\n      // Process every non-special key in the config object.\n      if (skipKeys.indexOf(key) < 0) {\n        var value = options[key];\n\n        if (value && key in mapping && !(meta.setAsIs && meta.setAsIs.indexOf(key) >= 0)) {\n          if (Array.isArray(value)) {\n            var subComponents = value.map(function (config) {\n              var axis = create(config, path + '.' + key, undefined, theme);\n\n              if (theme && key === 'axes') {\n                var fakeTheme = {\n                  getConfig: function getConfig(path) {\n                    var parts = path.split('.');\n                    var modifiedPath = parts.slice(0, 3).join('.') + '.' + axis.position;\n                    var after = parts.slice(3);\n\n                    if (after.length) {\n                      modifiedPath += '.' + after.join('.');\n                    }\n\n                    var config = theme.getConfig(path);\n                    var modifiedConfig = theme.getConfig(modifiedPath);\n                    isObject(theme.getConfig(modifiedPath));\n\n                    if (isObject(config) && isObject(modifiedConfig)) {\n                      return deepMerge(config, modifiedConfig);\n                    }\n\n                    return modifiedConfig;\n                  }\n                };\n                update(axis, config, path + '.' + key, fakeTheme);\n              }\n\n              return axis;\n            }).filter(function (instance) {\n              return !!instance;\n            });\n            component[key] = subComponents;\n          } else {\n            if (mapping[key] && component[key]) {\n              // The instance property already exists on the component (e.g. chart.legend).\n              // Simply configure the existing instance, without creating a new one.\n              create(value, path + '.' + key, component[key], theme);\n            } else {\n              var subComponent = create(value, value.type ? path : path + '.' + key, undefined, theme);\n\n              if (subComponent) {\n                component[key] = subComponent;\n              }\n            }\n          }\n        } else {\n          // if (key in meta.constructor.defaults) { // prevent users from creating custom properties\n          component[key] = value;\n        }\n      }\n    };\n\n    for (var key in options) {\n      _loop_1(key);\n    }\n\n    var listeners = options.listeners;\n\n    if (component && component.addEventListener && listeners) {\n      for (var key in listeners) {\n        if (listeners.hasOwnProperty(key)) {\n          var listener = listeners[key];\n\n          if (typeof listener === 'function') {\n            component.addEventListener(key, listener);\n          }\n        }\n      }\n    }\n\n    return component;\n  }\n}\n\nfunction update(component, options, path, theme) {\n  if (!(options && isObject(options))) {\n    return;\n  } // Deprecate `chart.legend.item.marker.type` in integrated chart options.\n\n\n  if (component instanceof LegendMarker) {\n    if (options.type) {\n      options.shape = options.type;\n    }\n  } else {\n    options = provideDefaultType(options, path);\n\n    if (path) {\n      if (options.type) {\n        path = path + '.' + options.type;\n      }\n    } else {\n      path = options.type;\n    }\n  }\n\n  if (!path) {\n    return;\n  }\n\n  var chart = path in mappings ? component : undefined;\n  var mapping = getValue(mappings, path);\n\n  if (mapping) {\n    options = provideDefaultOptions(path, options, mapping, theme);\n    var meta = mapping.meta || {};\n    var constructorParams = meta && meta.constructorParams || [];\n    var skipKeys = ['type'].concat(constructorParams);\n\n    for (var key in options) {\n      if (skipKeys.indexOf(key) < 0) {\n        var value = options[key];\n        var keyPath = path + '.' + key;\n\n        if (meta.setAsIs && meta.setAsIs.indexOf(key) >= 0) {\n          component[key] = value;\n        } else {\n          var oldValue = component[key];\n\n          if (Array.isArray(oldValue) && Array.isArray(value)) {\n            if (chart) {\n              if (key === 'series') {\n                updateSeries(component, value, keyPath, theme);\n              } else if (key === 'axes') {\n                updateAxes(component, value, keyPath, theme);\n              }\n            } else {\n              component[key] = value;\n            }\n          } else if (isObject(oldValue)) {\n            if (value) {\n              update(oldValue, value, value.type ? path : keyPath, theme);\n            } else if (key in options) {\n              component[key] = value;\n            }\n          } else {\n            var subComponent = isObject(value) && create(value, value.type ? path : keyPath, undefined, theme);\n\n            if (subComponent) {\n              component[key] = subComponent;\n            } else {\n              if (chart && options.autoSize && (key === 'width' || key === 'height')) {\n                continue;\n              }\n\n              component[key] = value;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  if (chart) {\n    chart.layoutPending = true;\n  }\n}\n\nfunction updateSeries(chart, configs, keyPath, theme) {\n  var allSeries = chart.series.slice();\n  var prevSeries;\n  var i = 0;\n\n  for (; i < configs.length; i++) {\n    var config = configs[i];\n    var series = allSeries[i];\n\n    if (series) {\n      config = provideDefaultType(config, keyPath);\n      var type = actualSeriesTypeMap[config.type];\n\n      if (series.type === type) {\n        if (theme) {\n          firstColorIndex = theme.setSeriesColors(series, config, firstColorIndex);\n        }\n\n        update(series, config, keyPath, theme);\n      } else {\n        var newSeries = create(config, keyPath, undefined, theme);\n        chart.removeSeries(series);\n        chart.addSeriesAfter(newSeries, prevSeries);\n        series = newSeries;\n      }\n    } else {\n      // more new configs than existing series\n      var newSeries = create(config, keyPath, undefined, theme);\n      chart.addSeries(newSeries);\n    }\n\n    prevSeries = series;\n  } // more existing series than new configs\n\n\n  for (; i < allSeries.length; i++) {\n    var series = allSeries[i];\n\n    if (series) {\n      chart.removeSeries(series);\n    }\n  }\n}\n\nfunction updateAxes(chart, configs, keyPath, theme) {\n  var axes = chart.axes;\n  var axesToAdd = [];\n  var axesToUpdate = [];\n\n  var _loop_2 = function _loop_2(config) {\n    var axisToUpdate = find(axes, function (axis) {\n      return axis.type === config.type && axis.position === config.position;\n    });\n\n    if (axisToUpdate) {\n      axesToUpdate.push(axisToUpdate);\n      update(axisToUpdate, config, keyPath, theme);\n    } else {\n      var axisToAdd = create(config, keyPath, undefined, theme);\n\n      if (axisToAdd) {\n        axesToAdd.push(axisToAdd);\n      }\n    }\n  };\n\n  for (var _i = 0, configs_1 = configs; _i < configs_1.length; _i++) {\n    var config = configs_1[_i];\n\n    _loop_2(config);\n  }\n\n  chart.axes = axesToUpdate.concat(axesToAdd);\n}\n\nfunction provideDefaultChartType(options) {\n  if (options.type) {\n    return options;\n  } // If chart type is not specified, try to infer it from the type of first series.\n\n\n  var series = options.series && options.series[0];\n\n  if (series && series.type) {\n    outerLoop: for (var chartType in mappings) {\n      for (var seriesType in mappings[chartType].series) {\n        if (series.type === seriesType) {\n          options = Object.create(options);\n          options.type = chartType;\n          break outerLoop;\n        }\n      }\n    }\n  }\n\n  if (!options.type) {\n    options = Object.create(options);\n    options.type = 'cartesian';\n  }\n\n  return options;\n}\n\nfunction provideDefaultType(options, path) {\n  if (!path) {\n    // if `path` is undefined, `options` is a top-level (chart) config\n    path = '';\n    options = provideDefaultChartType(options);\n  }\n\n  if (!options.type) {\n    var seriesType = pathToSeriesTypeMap[path];\n\n    if (seriesType) {\n      options = Object.create(options);\n      options.type = seriesType;\n    }\n  }\n\n  return options;\n}\n\nfunction skipThemeKey(key) {\n  return ['axes', 'series'].indexOf(key) >= 0;\n}\n\nvar enabledKey = 'enabled';\n/**\n * If certain options were not provided by the user, use the defaults from the theme and the mapping.\n * All three objects are provided for the current path in the config tree, not necessarily top-level.\n */\n\nfunction provideDefaultOptions(path, options, mapping, theme) {\n  var isChartConfig = path.indexOf('.') < 0;\n  var themeDefaults = theme && theme.getConfig(path);\n  var defaults = mapping && mapping.meta && mapping.meta.defaults;\n  var isExplicitlyDisabled = options.enabled === false; // by the user\n\n  if (defaults || themeDefaults) {\n    options = Object.create(options);\n  } // Fill in the gaps for properties not configured by the user using theme provided values.\n\n\n  for (var key in themeDefaults) {\n    // The default values for these special chart configs always come from the mappings, not theme.\n    if (isChartConfig && skipThemeKey(key)) {\n      continue;\n    }\n\n    if (!(key in options)) {\n      options[key] = themeDefaults[key];\n    }\n  } // Fill in the gaps for properties not configured by the user, nor theme using chart mappings.\n\n\n  for (var key in defaults) {\n    if ((!themeDefaults || !(key in themeDefaults) || skipThemeKey(key)) && !(key in options)) {\n      options[key] = defaults[key];\n    }\n  } // Special handling for the 'enabled' property. For example:\n  // title: { text: 'Quarterly Revenue' } // means title is enabled\n  // legend: {} // means legend is enabled\n\n\n  var hasEnabledKey = themeDefaults && enabledKey in themeDefaults || defaults && enabledKey in defaults;\n\n  if (hasEnabledKey && !isExplicitlyDisabled) {\n    options[enabledKey] = true;\n  }\n\n  return options;\n}","map":{"version":3,"sources":["/Users/julianneagresta/Projects/openlibrary-search-histogram/node_modules/ag-charts-community/dist/es6/chart/agChart.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__spreadArrays","il","r","Array","k","a","j","jl","Series","LegendMarker","ChartTheme","DarkTheme","MaterialLight","MaterialDark","PastelLight","PastelDark","SolarLight","SolarDark","VividLight","VividDark","find","deepMerge","getValue","isObject","mappings","lightTheme","darkTheme","lightThemes","darkThemes","themes","getChartTheme","value","stockTheme","baseTheme","overrides","palette","constructor","firstColorIndex","AgChart","create","options","container","data","autoSize","theme","chart","undefined","update","save","component","target","createComponent","pathToSeriesTypeMap","actualSeriesTypeMap","map","actualSeries","forEach","series","mapping","type","meta","defaults","keys","key","nonSerializable","indexOf","isArray","path","_a","shape","provideDefaultType","provideDefaultOptions","constructorParams","skipKeys","concat","constructorParamValues","param","filter","bind","setSeriesColors","_loop_1","setAsIs","subComponents","config","axis","fakeTheme","getConfig","parts","split","modifiedPath","slice","join","position","after","modifiedConfig","instance","subComponent","listeners","addEventListener","listener","keyPath","oldValue","updateSeries","updateAxes","layoutPending","configs","allSeries","prevSeries","newSeries","removeSeries","addSeriesAfter","addSeries","axes","axesToAdd","axesToUpdate","_loop_2","axisToUpdate","push","axisToAdd","_i","configs_1","provideDefaultChartType","outerLoop","chartType","seriesType","skipThemeKey","enabledKey","isChartConfig","themeDefaults","isExplicitlyDisabled","enabled","hasEnabledKey"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;AAClDA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAASC,CAAT,EAAY;AACpC,SAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;AACjDD,MAAAA,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;AACA,WAAK,IAAII,CAAT,IAAcL,CAAd;AAAiB,YAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AADJ;AAEH;;AACD,WAAON,CAAP;AACH,GAPD;;AAQA,SAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,CAVD;;AAWA,IAAIO,cAAc,GAAI,QAAQ,KAAKA,cAAd,IAAiC,YAAY;AAC9D,OAAK,IAAIV,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG,CAAf,EAAkBU,EAAE,GAAGR,SAAS,CAACC,MAAtC,EAA8CH,CAAC,GAAGU,EAAlD,EAAsDV,CAAC,EAAvD;AAA2DD,IAAAA,CAAC,IAAIG,SAAS,CAACF,CAAD,CAAT,CAAaG,MAAlB;AAA3D;;AACA,OAAK,IAAIQ,CAAC,GAAGC,KAAK,CAACb,CAAD,CAAb,EAAkBc,CAAC,GAAG,CAAtB,EAAyBb,CAAC,GAAG,CAAlC,EAAqCA,CAAC,GAAGU,EAAzC,EAA6CV,CAAC,EAA9C;AACI,SAAK,IAAIc,CAAC,GAAGZ,SAAS,CAACF,CAAD,CAAjB,EAAsBe,CAAC,GAAG,CAA1B,EAA6BC,EAAE,GAAGF,CAAC,CAACX,MAAzC,EAAiDY,CAAC,GAAGC,EAArD,EAAyDD,CAAC,IAAIF,CAAC,EAA/D;AACIF,MAAAA,CAAC,CAACE,CAAD,CAAD,GAAOC,CAAC,CAACC,CAAD,CAAR;AADJ;AADJ;;AAGA,SAAOJ,CAAP;AACH,CAND;;AAOA,SAASM,MAAT,QAAuB,iBAAvB;AACA,SAASC,YAAT,QAA6B,UAA7B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,IAAT,QAAqB,eAArB;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,QAA9B,QAA8C,gBAA9C;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,IAAIC,UAAU,GAAG,IAAIf,UAAJ,EAAjB;AACA,IAAIgB,SAAS,GAAG,IAAIf,SAAJ,EAAhB;AACA,OAAO,IAAIgB,WAAW,GAAG;AACrB,eAAaF,UADQ;AAErB,UAAQA,UAFa;AAGrB,gBAAcA,UAHO;AAIrB,iBAAe,IAAIb,aAAJ,EAJM;AAKrB,eAAa,IAAIE,WAAJ,EALQ;AAMrB,cAAY,IAAIE,UAAJ,EANS;AAOrB,cAAY,IAAIE,UAAJ;AAPS,CAAlB;AASP,OAAO,IAAIU,UAAU,GAAG;AACpB,eAAaF,SADO;AAEpB,UAAQA,SAFY;AAGpB,qBAAmBA,SAHC;AAIpB,sBAAoB,IAAIb,YAAJ,EAJA;AAKpB,oBAAkB,IAAIE,UAAJ,EALE;AAMpB,mBAAiB,IAAIE,SAAJ,EANG;AAOpB,mBAAiB,IAAIE,SAAJ;AAPG,CAAjB;AASP,OAAO,IAAIU,MAAM,GAAG3C,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAK0C,UAAL,CAAT,EAA2BD,WAA3B,CAArB;AACP,OAAO,SAASG,aAAT,CAAuBC,KAAvB,EAA8B;AACjC,MAAIA,KAAK,YAAYrB,UAArB,EAAiC;AAC7B,WAAOqB,KAAP;AACH;;AACD,MAAIC,UAAU,GAAGH,MAAM,CAACE,KAAD,CAAvB;;AACA,MAAIC,UAAJ,EAAgB;AACZ,WAAOA,UAAP;AACH;;AACDD,EAAAA,KAAK,GAAGA,KAAR;;AACA,MAAIA,KAAK,CAACE,SAAN,IAAmBF,KAAK,CAACG,SAAzB,IAAsCH,KAAK,CAACI,OAAhD,EAAyD;AACrD,QAAIF,SAAS,GAAGH,aAAa,CAACC,KAAK,CAACE,SAAP,CAA7B;AACA,WAAO,IAAIA,SAAS,CAACG,WAAd,CAA0BL,KAA1B,CAAP;AACH;;AACD,SAAON,UAAP;AACH;AACD,IAAIY,eAAe,GAAG,CAAtB;;AACA,IAAIC,OAAO,GAAkB,YAAY;AACrC,WAASA,OAAT,GAAmB,CAClB;;AACDA,EAAAA,OAAO,CAACC,MAAR,GAAiB,UAAUC,OAAV,EAAmBC,SAAnB,EAA8BC,IAA9B,EAAoC;AACjDF,IAAAA,OAAO,GAAGrD,MAAM,CAACoD,MAAP,CAAcC,OAAd,CAAV,CADiD,CACf;;AAClC,QAAIC,SAAJ,EAAe;AACXD,MAAAA,OAAO,CAACC,SAAR,GAAoBA,SAApB;AACH;;AACD,QAAIC,IAAJ,EAAU;AACNF,MAAAA,OAAO,CAACE,IAAR,GAAeA,IAAf;AACH,KAPgD,CAQjD;;;AACA,QAAIC,QAAQ,GAAGH,OAAO,IAAIA,OAAO,CAACG,QAAR,KAAqB,KAA/C;AACA,QAAIC,KAAK,GAAGd,aAAa,CAACU,OAAO,CAACI,KAAT,CAAzB;AACAP,IAAAA,eAAe,GAAG,CAAlB;AACA,QAAIQ,KAAK,GAAGN,MAAM,CAACC,OAAD,EAAUM,SAAV,EAAqBA,SAArB,EAAgCF,KAAhC,CAAlB;;AACA,QAAIC,KAAJ,EAAW;AACP,UAAIF,QAAJ,EAAc;AAAE;AACZE,QAAAA,KAAK,CAACF,QAAN,GAAiB,IAAjB;AACH;AACJ;;AACD,WAAOE,KAAP;AACH,GAnBD;;AAoBAP,EAAAA,OAAO,CAACS,MAAR,GAAiB,UAAUF,KAAV,EAAiBL,OAAjB,EAA0BC,SAA1B,EAAqCC,IAArC,EAA2C;AACxD,QAAI,EAAEG,KAAK,IAAIL,OAAX,CAAJ,EAAyB;AACrB;AACH;;AACDA,IAAAA,OAAO,GAAGrD,MAAM,CAACoD,MAAP,CAAcC,OAAd,CAAV;;AACA,QAAIC,SAAJ,EAAe;AACXD,MAAAA,OAAO,CAACC,SAAR,GAAoBA,SAApB;AACH;;AACD,QAAIC,IAAJ,EAAU;AACNF,MAAAA,OAAO,CAACE,IAAR,GAAeA,IAAf;AACH;;AACD,QAAIC,QAAQ,GAAGH,OAAO,IAAIA,OAAO,CAACG,QAAR,KAAqB,KAA/C;AACA,QAAIC,KAAK,GAAGd,aAAa,CAACU,OAAO,CAACI,KAAT,CAAzB;AACAP,IAAAA,eAAe,GAAG,CAAlB;AACAU,IAAAA,MAAM,CAACF,KAAD,EAAQL,OAAR,EAAiBM,SAAjB,EAA4BF,KAA5B,CAAN;;AACA,QAAID,QAAJ,EAAc;AACVE,MAAAA,KAAK,CAACF,QAAN,GAAiB,IAAjB;AACH;AACJ,GAlBD;;AAmBAL,EAAAA,OAAO,CAACU,IAAR,GAAe,UAAUC,SAAV,EAAqB;AAChC,QAAIC,MAAM,GAAG,EAAb;AACAF,IAAAA,IAAI,CAACC,SAAD,EAAYC,MAAZ,CAAJ;AACA,WAAOA,MAAP;AACH,GAJD;;AAKAZ,EAAAA,OAAO,CAACa,eAAR,GAA0BZ,MAA1B;AACA,SAAOD,OAAP;AACH,CAjD4B,EAA7B;;AAkDA,SAASA,OAAT;AACA,IAAIc,mBAAmB,GAAG;AACtB,sBAAoB,MADE;AAEtB,iBAAe,MAFO;AAGtB,iBAAe,MAHO;AAItB,gBAAc,KAJQ;AAKtB,mBAAiB,QALK;AAMtB,sBAAoB,WANE;AAOtB,oBAAkB,SAPI;AAQtB,kBAAgB,KARM;AAStB,gBAAc;AATQ,CAA1B;;AAWA,IAAIC,mBAAmB,GAAI,YAAY;AACnC,MAAIC,GAAG,GAAG,EAAV;AACA,MAAIC,YAAY,GAAG,CAAC,MAAD,EAAS,KAAT,EAAgB,WAAhB,EAA6B,MAA7B,EAAqC,KAArC,EAA4C,SAA5C,CAAnB;AACAA,EAAAA,YAAY,CAACC,OAAb,CAAqB,UAAUC,MAAV,EAAkB;AAAE,WAAOH,GAAG,CAACG,MAAD,CAAH,GAAcA,MAArB;AAA8B,GAAvE,EAHmC,CAInC;;AACAH,EAAAA,GAAG,CAAC,QAAD,CAAH,GAAgB,KAAhB;AACA,SAAOA,GAAP;AACH,CAPyB,EAA1B;;AAQA,SAASN,IAAT,CAAcC,SAAd,EAAyBC,MAAzB,EAAiCQ,OAAjC,EAA0C;AACtC,MAAIR,MAAM,KAAK,KAAK,CAApB,EAAuB;AAAEA,IAAAA,MAAM,GAAG,EAAT;AAAc;;AACvC,MAAIQ,OAAO,KAAK,KAAK,CAArB,EAAwB;AAAEA,IAAAA,OAAO,GAAGlC,QAAV;AAAqB;;AAC/C,MAAIyB,SAAS,CAACb,WAAV,IAAyBa,SAAS,CAACb,WAAV,CAAsBuB,IAA/C,IAAuD,CAACD,OAAO,CAACE,IAApE,EAA0E;AACtEF,IAAAA,OAAO,GAAGA,OAAO,CAACT,SAAS,CAACb,WAAV,CAAsBuB,IAAvB,CAAjB;AACH;;AACD,MAAIE,QAAQ,GAAGH,OAAO,IAAIA,OAAO,CAACE,IAAnB,IAA2BF,OAAO,CAACE,IAAR,CAAaC,QAAvD;AACA,MAAIC,IAAI,GAAG3E,MAAM,CAAC2E,IAAP,CAAYD,QAAZ,CAAX;AACAC,EAAAA,IAAI,CAACN,OAAL,CAAa,UAAUO,GAAV,EAAe;AACxB,QAAIhC,KAAK,GAAGkB,SAAS,CAACc,GAAD,CAArB;;AACA,QAAIxC,QAAQ,CAACQ,KAAD,CAAR,KAAoB,CAAC2B,OAAO,CAACE,IAAR,CAAaI,eAAd,IAAiCN,OAAO,CAACE,IAAR,CAAaI,eAAb,CAA6BC,OAA7B,CAAqCF,GAArC,IAA4C,CAAjG,CAAJ,EAAyG;AACrGb,MAAAA,MAAM,CAACa,GAAD,CAAN,GAAc,EAAd,CADqG,CAErG;AACH,KAHD,MAIK,IAAI5D,KAAK,CAAC+D,OAAN,CAAcnC,KAAd,CAAJ,EAA0B,CAC3B;AACA;AACH,KAHI,MAIA;AACDmB,MAAAA,MAAM,CAACa,GAAD,CAAN,GAAcd,SAAS,CAACc,GAAD,CAAvB;AACH;AACJ,GAbD;AAcH;;AACD,SAASxB,MAAT,CAAgBC,OAAhB,EAAyB2B,IAAzB,EAA+BlB,SAA/B,EAA0CL,KAA1C,EAAiD;AAC7C,MAAIwB,EAAJ,CAD6C,CAE7C;;;AACA5B,EAAAA,OAAO,GAAGrD,MAAM,CAACoD,MAAP,CAAcC,OAAd,CAAV;;AACA,MAAIS,SAAS,YAAYxC,YAAzB,EAAuC;AACnC,QAAI+B,OAAO,CAACmB,IAAZ,EAAkB;AACdnB,MAAAA,OAAO,CAAC6B,KAAR,GAAgB7B,OAAO,CAACmB,IAAxB;AACH;AACJ,GAJD,MAKK;AACDnB,IAAAA,OAAO,GAAG8B,kBAAkB,CAAC9B,OAAD,EAAU2B,IAAV,CAA5B;;AACA,QAAIA,IAAJ,EAAU;AACN,UAAI3B,OAAO,CAACmB,IAAZ,EAAkB;AACdQ,QAAAA,IAAI,GAAGA,IAAI,GAAG,GAAP,GAAa3B,OAAO,CAACmB,IAA5B;AACH;AACJ,KAJD,MAKK;AACDQ,MAAAA,IAAI,GAAG3B,OAAO,CAACmB,IAAf;AACH;AACJ;;AACD,MAAI,CAACQ,IAAL,EAAW;AACP;AACH;;AACD,MAAIT,OAAO,GAAGpC,QAAQ,CAACE,QAAD,EAAW2C,IAAX,CAAtB;;AACA,MAAIT,OAAJ,EAAa;AACTlB,IAAAA,OAAO,GAAG+B,qBAAqB,CAACJ,IAAD,EAAO3B,OAAP,EAAgBkB,OAAhB,EAAyBd,KAAzB,CAA/B;AACA,QAAIgB,IAAI,GAAGF,OAAO,CAACE,IAAR,IAAgB,EAA3B;AACA,QAAIY,iBAAiB,GAAGZ,IAAI,CAACY,iBAAL,IAA0B,EAAlD;AACA,QAAIC,QAAQ,GAAG,CAAC,MAAD,EAAS,WAAT,EAAsBC,MAAtB,CAA6BF,iBAA7B,CAAf,CAJS,CAKT;;AACA,QAAIG,sBAAsB,GAAGH,iBAAiB,CACzClB,GADwB,CACpB,UAAUsB,KAAV,EAAiB;AAAE,aAAOpC,OAAO,CAACoC,KAAD,CAAd;AAAwB,KADvB,EAExBC,MAFwB,CAEjB,UAAU9C,KAAV,EAAiB;AAAE,aAAOA,KAAK,KAAKe,SAAjB;AAA6B,KAF/B,CAA7B;;AAGA,QAAI,CAACG,SAAL,EAAgB;AACZA,MAAAA,SAAS,GAAG,KAAK,CAACmB,EAAE,GAAGR,IAAI,CAACxB,WAAX,EAAwB0C,IAAxB,CAA6B/E,KAA7B,CAAmCqE,EAAnC,EAAuCpE,cAAc,CAAC,CAAC,KAAK,CAAN,CAAD,EAAW2E,sBAAX,CAArD,CAAL,GAAZ;;AACA,UAAI/B,KAAK,IAAIK,SAAS,YAAYzC,MAAlC,EAA0C;AACtC6B,QAAAA,eAAe,GAAGO,KAAK,CAACmC,eAAN,CAAsB9B,SAAtB,EAAiCT,OAAjC,EAA0CH,eAA1C,CAAlB;AACH;AACJ;;AACD,QAAI2C,OAAO,GAAG,SAAVA,OAAU,CAAUjB,GAAV,EAAe;AACzB;AACA,UAAIU,QAAQ,CAACR,OAAT,CAAiBF,GAAjB,IAAwB,CAA5B,EAA+B;AAC3B,YAAIhC,KAAK,GAAGS,OAAO,CAACuB,GAAD,CAAnB;;AACA,YAAIhC,KAAK,IAAIgC,GAAG,IAAIL,OAAhB,IAA2B,EAAEE,IAAI,CAACqB,OAAL,IAAgBrB,IAAI,CAACqB,OAAL,CAAahB,OAAb,CAAqBF,GAArB,KAA6B,CAA/C,CAA/B,EAAkF;AAC9E,cAAI5D,KAAK,CAAC+D,OAAN,CAAcnC,KAAd,CAAJ,EAA0B;AACtB,gBAAImD,aAAa,GAAGnD,KAAK,CACpBuB,GADe,CACX,UAAU6B,MAAV,EAAkB;AACvB,kBAAIC,IAAI,GAAG7C,MAAM,CAAC4C,MAAD,EAAShB,IAAI,GAAG,GAAP,GAAaJ,GAAtB,EAA2BjB,SAA3B,EAAsCF,KAAtC,CAAjB;;AACA,kBAAIA,KAAK,IAAImB,GAAG,KAAK,MAArB,EAA6B;AACzB,oBAAIsB,SAAS,GAAG;AACZC,kBAAAA,SAAS,EAAE,mBAAUnB,IAAV,EAAgB;AACvB,wBAAIoB,KAAK,GAAGpB,IAAI,CAACqB,KAAL,CAAW,GAAX,CAAZ;AACA,wBAAIC,YAAY,GAAGF,KAAK,CAACG,KAAN,CAAY,CAAZ,EAAe,CAAf,EAAkBC,IAAlB,CAAuB,GAAvB,IAA8B,GAA9B,GAAoCP,IAAI,CAACQ,QAA5D;AACA,wBAAIC,KAAK,GAAGN,KAAK,CAACG,KAAN,CAAY,CAAZ,CAAZ;;AACA,wBAAIG,KAAK,CAACnG,MAAV,EAAkB;AACd+F,sBAAAA,YAAY,IAAI,MAAMI,KAAK,CAACF,IAAN,CAAW,GAAX,CAAtB;AACH;;AACD,wBAAIR,MAAM,GAAGvC,KAAK,CAAC0C,SAAN,CAAgBnB,IAAhB,CAAb;AACA,wBAAI2B,cAAc,GAAGlD,KAAK,CAAC0C,SAAN,CAAgBG,YAAhB,CAArB;AACAlE,oBAAAA,QAAQ,CAACqB,KAAK,CAAC0C,SAAN,CAAgBG,YAAhB,CAAD,CAAR;;AACA,wBAAIlE,QAAQ,CAAC4D,MAAD,CAAR,IAAoB5D,QAAQ,CAACuE,cAAD,CAAhC,EAAkD;AAC9C,6BAAOzE,SAAS,CAAC8D,MAAD,EAASW,cAAT,CAAhB;AACH;;AACD,2BAAOA,cAAP;AACH;AAfW,iBAAhB;AAiBA/C,gBAAAA,MAAM,CAACqC,IAAD,EAAOD,MAAP,EAAehB,IAAI,GAAG,GAAP,GAAaJ,GAA5B,EAAiCsB,SAAjC,CAAN;AACH;;AACD,qBAAOD,IAAP;AACH,aAxBmB,EAyBfP,MAzBe,CAyBR,UAAUkB,QAAV,EAAoB;AAAE,qBAAO,CAAC,CAACA,QAAT;AAAoB,aAzBlC,CAApB;AA0BA9C,YAAAA,SAAS,CAACc,GAAD,CAAT,GAAiBmB,aAAjB;AACH,WA5BD,MA6BK;AACD,gBAAIxB,OAAO,CAACK,GAAD,CAAP,IAAgBd,SAAS,CAACc,GAAD,CAA7B,EAAoC;AAChC;AACA;AACAxB,cAAAA,MAAM,CAACR,KAAD,EAAQoC,IAAI,GAAG,GAAP,GAAaJ,GAArB,EAA0Bd,SAAS,CAACc,GAAD,CAAnC,EAA0CnB,KAA1C,CAAN;AACH,aAJD,MAKK;AACD,kBAAIoD,YAAY,GAAGzD,MAAM,CAACR,KAAD,EAAQA,KAAK,CAAC4B,IAAN,GAAaQ,IAAb,GAAoBA,IAAI,GAAG,GAAP,GAAaJ,GAAzC,EAA8CjB,SAA9C,EAAyDF,KAAzD,CAAzB;;AACA,kBAAIoD,YAAJ,EAAkB;AACd/C,gBAAAA,SAAS,CAACc,GAAD,CAAT,GAAiBiC,YAAjB;AACH;AACJ;AACJ;AACJ,SA3CD,MA4CK;AAAE;AACH/C,UAAAA,SAAS,CAACc,GAAD,CAAT,GAAiBhC,KAAjB;AACH;AACJ;AACJ,KApDD;;AAqDA,SAAK,IAAIgC,GAAT,IAAgBvB,OAAhB,EAAyB;AACrBwC,MAAAA,OAAO,CAACjB,GAAD,CAAP;AACH;;AACD,QAAIkC,SAAS,GAAGzD,OAAO,CAACyD,SAAxB;;AACA,QAAIhD,SAAS,IAAIA,SAAS,CAACiD,gBAAvB,IAA2CD,SAA/C,EAA0D;AACtD,WAAK,IAAIlC,GAAT,IAAgBkC,SAAhB,EAA2B;AACvB,YAAIA,SAAS,CAACpG,cAAV,CAAyBkE,GAAzB,CAAJ,EAAmC;AAC/B,cAAIoC,QAAQ,GAAGF,SAAS,CAAClC,GAAD,CAAxB;;AACA,cAAI,OAAOoC,QAAP,KAAoB,UAAxB,EAAoC;AAChClD,YAAAA,SAAS,CAACiD,gBAAV,CAA2BnC,GAA3B,EAAgCoC,QAAhC;AACH;AACJ;AACJ;AACJ;;AACD,WAAOlD,SAAP;AACH;AACJ;;AACD,SAASF,MAAT,CAAgBE,SAAhB,EAA2BT,OAA3B,EAAoC2B,IAApC,EAA0CvB,KAA1C,EAAiD;AAC7C,MAAI,EAAEJ,OAAO,IAAIjB,QAAQ,CAACiB,OAAD,CAArB,CAAJ,EAAqC;AACjC;AACH,GAH4C,CAI7C;;;AACA,MAAIS,SAAS,YAAYxC,YAAzB,EAAuC;AACnC,QAAI+B,OAAO,CAACmB,IAAZ,EAAkB;AACdnB,MAAAA,OAAO,CAAC6B,KAAR,GAAgB7B,OAAO,CAACmB,IAAxB;AACH;AACJ,GAJD,MAKK;AACDnB,IAAAA,OAAO,GAAG8B,kBAAkB,CAAC9B,OAAD,EAAU2B,IAAV,CAA5B;;AACA,QAAIA,IAAJ,EAAU;AACN,UAAI3B,OAAO,CAACmB,IAAZ,EAAkB;AACdQ,QAAAA,IAAI,GAAGA,IAAI,GAAG,GAAP,GAAa3B,OAAO,CAACmB,IAA5B;AACH;AACJ,KAJD,MAKK;AACDQ,MAAAA,IAAI,GAAG3B,OAAO,CAACmB,IAAf;AACH;AACJ;;AACD,MAAI,CAACQ,IAAL,EAAW;AACP;AACH;;AACD,MAAItB,KAAK,GAAGsB,IAAI,IAAI3C,QAAR,GAAmByB,SAAnB,GAA+BH,SAA3C;AACA,MAAIY,OAAO,GAAGpC,QAAQ,CAACE,QAAD,EAAW2C,IAAX,CAAtB;;AACA,MAAIT,OAAJ,EAAa;AACTlB,IAAAA,OAAO,GAAG+B,qBAAqB,CAACJ,IAAD,EAAO3B,OAAP,EAAgBkB,OAAhB,EAAyBd,KAAzB,CAA/B;AACA,QAAIgB,IAAI,GAAGF,OAAO,CAACE,IAAR,IAAgB,EAA3B;AACA,QAAIY,iBAAiB,GAAGZ,IAAI,IAAIA,IAAI,CAACY,iBAAb,IAAkC,EAA1D;AACA,QAAIC,QAAQ,GAAG,CAAC,MAAD,EAASC,MAAT,CAAgBF,iBAAhB,CAAf;;AACA,SAAK,IAAIT,GAAT,IAAgBvB,OAAhB,EAAyB;AACrB,UAAIiC,QAAQ,CAACR,OAAT,CAAiBF,GAAjB,IAAwB,CAA5B,EAA+B;AAC3B,YAAIhC,KAAK,GAAGS,OAAO,CAACuB,GAAD,CAAnB;AACA,YAAIqC,OAAO,GAAGjC,IAAI,GAAG,GAAP,GAAaJ,GAA3B;;AACA,YAAIH,IAAI,CAACqB,OAAL,IAAgBrB,IAAI,CAACqB,OAAL,CAAahB,OAAb,CAAqBF,GAArB,KAA6B,CAAjD,EAAoD;AAChDd,UAAAA,SAAS,CAACc,GAAD,CAAT,GAAiBhC,KAAjB;AACH,SAFD,MAGK;AACD,cAAIsE,QAAQ,GAAGpD,SAAS,CAACc,GAAD,CAAxB;;AACA,cAAI5D,KAAK,CAAC+D,OAAN,CAAcmC,QAAd,KAA2BlG,KAAK,CAAC+D,OAAN,CAAcnC,KAAd,CAA/B,EAAqD;AACjD,gBAAIc,KAAJ,EAAW;AACP,kBAAIkB,GAAG,KAAK,QAAZ,EAAsB;AAClBuC,gBAAAA,YAAY,CAACrD,SAAD,EAAYlB,KAAZ,EAAmBqE,OAAnB,EAA4BxD,KAA5B,CAAZ;AACH,eAFD,MAGK,IAAImB,GAAG,KAAK,MAAZ,EAAoB;AACrBwC,gBAAAA,UAAU,CAACtD,SAAD,EAAYlB,KAAZ,EAAmBqE,OAAnB,EAA4BxD,KAA5B,CAAV;AACH;AACJ,aAPD,MAQK;AACDK,cAAAA,SAAS,CAACc,GAAD,CAAT,GAAiBhC,KAAjB;AACH;AACJ,WAZD,MAaK,IAAIR,QAAQ,CAAC8E,QAAD,CAAZ,EAAwB;AACzB,gBAAItE,KAAJ,EAAW;AACPgB,cAAAA,MAAM,CAACsD,QAAD,EAAWtE,KAAX,EAAkBA,KAAK,CAAC4B,IAAN,GAAaQ,IAAb,GAAoBiC,OAAtC,EAA+CxD,KAA/C,CAAN;AACH,aAFD,MAGK,IAAImB,GAAG,IAAIvB,OAAX,EAAoB;AACrBS,cAAAA,SAAS,CAACc,GAAD,CAAT,GAAiBhC,KAAjB;AACH;AACJ,WAPI,MAQA;AACD,gBAAIiE,YAAY,GAAGzE,QAAQ,CAACQ,KAAD,CAAR,IAAmBQ,MAAM,CAACR,KAAD,EAAQA,KAAK,CAAC4B,IAAN,GAAaQ,IAAb,GAAoBiC,OAA5B,EAAqCtD,SAArC,EAAgDF,KAAhD,CAA5C;;AACA,gBAAIoD,YAAJ,EAAkB;AACd/C,cAAAA,SAAS,CAACc,GAAD,CAAT,GAAiBiC,YAAjB;AACH,aAFD,MAGK;AACD,kBAAInD,KAAK,IAAIL,OAAO,CAACG,QAAjB,KAA8BoB,GAAG,KAAK,OAAR,IAAmBA,GAAG,KAAK,QAAzD,CAAJ,EAAwE;AACpE;AACH;;AACDd,cAAAA,SAAS,CAACc,GAAD,CAAT,GAAiBhC,KAAjB;AACH;AACJ;AACJ;AACJ;AACJ;AACJ;;AACD,MAAIc,KAAJ,EAAW;AACPA,IAAAA,KAAK,CAAC2D,aAAN,GAAsB,IAAtB;AACH;AACJ;;AACD,SAASF,YAAT,CAAsBzD,KAAtB,EAA6B4D,OAA7B,EAAsCL,OAAtC,EAA+CxD,KAA/C,EAAsD;AAClD,MAAI8D,SAAS,GAAG7D,KAAK,CAACY,MAAN,CAAaiC,KAAb,EAAhB;AACA,MAAIiB,UAAJ;AACA,MAAIpH,CAAC,GAAG,CAAR;;AACA,SAAOA,CAAC,GAAGkH,OAAO,CAAC/G,MAAnB,EAA2BH,CAAC,EAA5B,EAAgC;AAC5B,QAAI4F,MAAM,GAAGsB,OAAO,CAAClH,CAAD,CAApB;AACA,QAAIkE,MAAM,GAAGiD,SAAS,CAACnH,CAAD,CAAtB;;AACA,QAAIkE,MAAJ,EAAY;AACR0B,MAAAA,MAAM,GAAGb,kBAAkB,CAACa,MAAD,EAASiB,OAAT,CAA3B;AACA,UAAIzC,IAAI,GAAGN,mBAAmB,CAAC8B,MAAM,CAACxB,IAAR,CAA9B;;AACA,UAAIF,MAAM,CAACE,IAAP,KAAgBA,IAApB,EAA0B;AACtB,YAAIf,KAAJ,EAAW;AACPP,UAAAA,eAAe,GAAGO,KAAK,CAACmC,eAAN,CAAsBtB,MAAtB,EAA8B0B,MAA9B,EAAsC9C,eAAtC,CAAlB;AACH;;AACDU,QAAAA,MAAM,CAACU,MAAD,EAAS0B,MAAT,EAAiBiB,OAAjB,EAA0BxD,KAA1B,CAAN;AACH,OALD,MAMK;AACD,YAAIgE,SAAS,GAAGrE,MAAM,CAAC4C,MAAD,EAASiB,OAAT,EAAkBtD,SAAlB,EAA6BF,KAA7B,CAAtB;AACAC,QAAAA,KAAK,CAACgE,YAAN,CAAmBpD,MAAnB;AACAZ,QAAAA,KAAK,CAACiE,cAAN,CAAqBF,SAArB,EAAgCD,UAAhC;AACAlD,QAAAA,MAAM,GAAGmD,SAAT;AACH;AACJ,KAfD,MAgBK;AAAE;AACH,UAAIA,SAAS,GAAGrE,MAAM,CAAC4C,MAAD,EAASiB,OAAT,EAAkBtD,SAAlB,EAA6BF,KAA7B,CAAtB;AACAC,MAAAA,KAAK,CAACkE,SAAN,CAAgBH,SAAhB;AACH;;AACDD,IAAAA,UAAU,GAAGlD,MAAb;AACH,GA5BiD,CA6BlD;;;AACA,SAAOlE,CAAC,GAAGmH,SAAS,CAAChH,MAArB,EAA6BH,CAAC,EAA9B,EAAkC;AAC9B,QAAIkE,MAAM,GAAGiD,SAAS,CAACnH,CAAD,CAAtB;;AACA,QAAIkE,MAAJ,EAAY;AACRZ,MAAAA,KAAK,CAACgE,YAAN,CAAmBpD,MAAnB;AACH;AACJ;AACJ;;AACD,SAAS8C,UAAT,CAAoB1D,KAApB,EAA2B4D,OAA3B,EAAoCL,OAApC,EAA6CxD,KAA7C,EAAoD;AAChD,MAAIoE,IAAI,GAAGnE,KAAK,CAACmE,IAAjB;AACA,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAIC,YAAY,GAAG,EAAnB;;AACA,MAAIC,OAAO,GAAG,SAAVA,OAAU,CAAUhC,MAAV,EAAkB;AAC5B,QAAIiC,YAAY,GAAGhG,IAAI,CAAC4F,IAAD,EAAO,UAAU5B,IAAV,EAAgB;AAC1C,aAAOA,IAAI,CAACzB,IAAL,KAAcwB,MAAM,CAACxB,IAArB,IAA6ByB,IAAI,CAACQ,QAAL,KAAkBT,MAAM,CAACS,QAA7D;AACH,KAFsB,CAAvB;;AAGA,QAAIwB,YAAJ,EAAkB;AACdF,MAAAA,YAAY,CAACG,IAAb,CAAkBD,YAAlB;AACArE,MAAAA,MAAM,CAACqE,YAAD,EAAejC,MAAf,EAAuBiB,OAAvB,EAAgCxD,KAAhC,CAAN;AACH,KAHD,MAIK;AACD,UAAI0E,SAAS,GAAG/E,MAAM,CAAC4C,MAAD,EAASiB,OAAT,EAAkBtD,SAAlB,EAA6BF,KAA7B,CAAtB;;AACA,UAAI0E,SAAJ,EAAe;AACXL,QAAAA,SAAS,CAACI,IAAV,CAAeC,SAAf;AACH;AACJ;AACJ,GAdD;;AAeA,OAAK,IAAIC,EAAE,GAAG,CAAT,EAAYC,SAAS,GAAGf,OAA7B,EAAsCc,EAAE,GAAGC,SAAS,CAAC9H,MAArD,EAA6D6H,EAAE,EAA/D,EAAmE;AAC/D,QAAIpC,MAAM,GAAGqC,SAAS,CAACD,EAAD,CAAtB;;AACAJ,IAAAA,OAAO,CAAChC,MAAD,CAAP;AACH;;AACDtC,EAAAA,KAAK,CAACmE,IAAN,GAAaE,YAAY,CAACxC,MAAb,CAAoBuC,SAApB,CAAb;AACH;;AACD,SAASQ,uBAAT,CAAiCjF,OAAjC,EAA0C;AACtC,MAAIA,OAAO,CAACmB,IAAZ,EAAkB;AACd,WAAOnB,OAAP;AACH,GAHqC,CAItC;;;AACA,MAAIiB,MAAM,GAAGjB,OAAO,CAACiB,MAAR,IAAkBjB,OAAO,CAACiB,MAAR,CAAe,CAAf,CAA/B;;AACA,MAAIA,MAAM,IAAIA,MAAM,CAACE,IAArB,EAA2B;AACvB+D,IAAAA,SAAS,EAAE,KAAK,IAAIC,SAAT,IAAsBnG,QAAtB,EAAgC;AACvC,WAAK,IAAIoG,UAAT,IAAuBpG,QAAQ,CAACmG,SAAD,CAAR,CAAoBlE,MAA3C,EAAmD;AAC/C,YAAIA,MAAM,CAACE,IAAP,KAAgBiE,UAApB,EAAgC;AAC5BpF,UAAAA,OAAO,GAAGrD,MAAM,CAACoD,MAAP,CAAcC,OAAd,CAAV;AACAA,UAAAA,OAAO,CAACmB,IAAR,GAAegE,SAAf;AACA,gBAAMD,SAAN;AACH;AACJ;AACJ;AACJ;;AACD,MAAI,CAAClF,OAAO,CAACmB,IAAb,EAAmB;AACfnB,IAAAA,OAAO,GAAGrD,MAAM,CAACoD,MAAP,CAAcC,OAAd,CAAV;AACAA,IAAAA,OAAO,CAACmB,IAAR,GAAe,WAAf;AACH;;AACD,SAAOnB,OAAP;AACH;;AACD,SAAS8B,kBAAT,CAA4B9B,OAA5B,EAAqC2B,IAArC,EAA2C;AACvC,MAAI,CAACA,IAAL,EAAW;AAAE;AACTA,IAAAA,IAAI,GAAG,EAAP;AACA3B,IAAAA,OAAO,GAAGiF,uBAAuB,CAACjF,OAAD,CAAjC;AACH;;AACD,MAAI,CAACA,OAAO,CAACmB,IAAb,EAAmB;AACf,QAAIiE,UAAU,GAAGxE,mBAAmB,CAACe,IAAD,CAApC;;AACA,QAAIyD,UAAJ,EAAgB;AACZpF,MAAAA,OAAO,GAAGrD,MAAM,CAACoD,MAAP,CAAcC,OAAd,CAAV;AACAA,MAAAA,OAAO,CAACmB,IAAR,GAAeiE,UAAf;AACH;AACJ;;AACD,SAAOpF,OAAP;AACH;;AACD,SAASqF,YAAT,CAAsB9D,GAAtB,EAA2B;AACvB,SAAO,CAAC,MAAD,EAAS,QAAT,EAAmBE,OAAnB,CAA2BF,GAA3B,KAAmC,CAA1C;AACH;;AACD,IAAI+D,UAAU,GAAG,SAAjB;AACA;AACA;AACA;AACA;;AACA,SAASvD,qBAAT,CAA+BJ,IAA/B,EAAqC3B,OAArC,EAA8CkB,OAA9C,EAAuDd,KAAvD,EAA8D;AAC1D,MAAImF,aAAa,GAAG5D,IAAI,CAACF,OAAL,CAAa,GAAb,IAAoB,CAAxC;AACA,MAAI+D,aAAa,GAAGpF,KAAK,IAAIA,KAAK,CAAC0C,SAAN,CAAgBnB,IAAhB,CAA7B;AACA,MAAIN,QAAQ,GAAGH,OAAO,IAAIA,OAAO,CAACE,IAAnB,IAA2BF,OAAO,CAACE,IAAR,CAAaC,QAAvD;AACA,MAAIoE,oBAAoB,GAAGzF,OAAO,CAAC0F,OAAR,KAAoB,KAA/C,CAJ0D,CAIJ;;AACtD,MAAIrE,QAAQ,IAAImE,aAAhB,EAA+B;AAC3BxF,IAAAA,OAAO,GAAGrD,MAAM,CAACoD,MAAP,CAAcC,OAAd,CAAV;AACH,GAPyD,CAQ1D;;;AACA,OAAK,IAAIuB,GAAT,IAAgBiE,aAAhB,EAA+B;AAC3B;AACA,QAAID,aAAa,IAAIF,YAAY,CAAC9D,GAAD,CAAjC,EAAwC;AACpC;AACH;;AACD,QAAI,EAAEA,GAAG,IAAIvB,OAAT,CAAJ,EAAuB;AACnBA,MAAAA,OAAO,CAACuB,GAAD,CAAP,GAAeiE,aAAa,CAACjE,GAAD,CAA5B;AACH;AACJ,GAjByD,CAkB1D;;;AACA,OAAK,IAAIA,GAAT,IAAgBF,QAAhB,EAA0B;AACtB,QAAI,CAAC,CAACmE,aAAD,IAAkB,EAAEjE,GAAG,IAAIiE,aAAT,CAAlB,IAA6CH,YAAY,CAAC9D,GAAD,CAA1D,KAAoE,EAAEA,GAAG,IAAIvB,OAAT,CAAxE,EAA2F;AACvFA,MAAAA,OAAO,CAACuB,GAAD,CAAP,GAAeF,QAAQ,CAACE,GAAD,CAAvB;AACH;AACJ,GAvByD,CAwB1D;AACA;AACA;;;AACA,MAAIoE,aAAa,GAAIH,aAAa,IAAIF,UAAU,IAAIE,aAAhC,IACfnE,QAAQ,IAAIiE,UAAU,IAAIjE,QAD/B;;AAEA,MAAIsE,aAAa,IAAI,CAACF,oBAAtB,EAA4C;AACxCzF,IAAAA,OAAO,CAACsF,UAAD,CAAP,GAAsB,IAAtB;AACH;;AACD,SAAOtF,OAAP;AACH","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { Series } from \"./series/series\";\nimport { LegendMarker } from \"./legend\";\nimport { ChartTheme } from \"./themes/chartTheme\";\nimport { DarkTheme } from './themes/darkTheme';\nimport { MaterialLight } from \"./themes/materialLight\";\nimport { MaterialDark } from \"./themes/materialDark\";\nimport { PastelLight } from \"./themes/pastelLight\";\nimport { PastelDark } from \"./themes/pastelDark\";\nimport { SolarLight } from \"./themes/solarLight\";\nimport { SolarDark } from \"./themes/solarDark\";\nimport { VividLight } from \"./themes/vividLight\";\nimport { VividDark } from \"./themes/vividDark\";\nimport { find } from \"../util/array\";\nimport { deepMerge, getValue, isObject } from \"../util/object\";\nimport mappings from './agChartMappings';\nvar lightTheme = new ChartTheme();\nvar darkTheme = new DarkTheme();\nexport var lightThemes = {\n    'undefined': lightTheme,\n    'null': lightTheme,\n    'ag-default': lightTheme,\n    'ag-material': new MaterialLight(),\n    'ag-pastel': new PastelLight(),\n    'ag-solar': new SolarLight(),\n    'ag-vivid': new VividLight(),\n};\nexport var darkThemes = {\n    'undefined': darkTheme,\n    'null': darkTheme,\n    'ag-default-dark': darkTheme,\n    'ag-material-dark': new MaterialDark(),\n    'ag-pastel-dark': new PastelDark(),\n    'ag-solar-dark': new SolarDark(),\n    'ag-vivid-dark': new VividDark(),\n};\nexport var themes = __assign(__assign({}, darkThemes), lightThemes);\nexport function getChartTheme(value) {\n    if (value instanceof ChartTheme) {\n        return value;\n    }\n    var stockTheme = themes[value];\n    if (stockTheme) {\n        return stockTheme;\n    }\n    value = value;\n    if (value.baseTheme || value.overrides || value.palette) {\n        var baseTheme = getChartTheme(value.baseTheme);\n        return new baseTheme.constructor(value);\n    }\n    return lightTheme;\n}\nvar firstColorIndex = 0;\nvar AgChart = /** @class */ (function () {\n    function AgChart() {\n    }\n    AgChart.create = function (options, container, data) {\n        options = Object.create(options); // avoid mutating user provided options\n        if (container) {\n            options.container = container;\n        }\n        if (data) {\n            options.data = data;\n        }\n        // special handling when both `autoSize` and `width` / `height` are present in the options\n        var autoSize = options && options.autoSize !== false;\n        var theme = getChartTheme(options.theme);\n        firstColorIndex = 0;\n        var chart = create(options, undefined, undefined, theme);\n        if (chart) {\n            if (autoSize) { // `autoSize` takes precedence over `width` / `height`\n                chart.autoSize = true;\n            }\n        }\n        return chart;\n    };\n    AgChart.update = function (chart, options, container, data) {\n        if (!(chart && options)) {\n            return;\n        }\n        options = Object.create(options);\n        if (container) {\n            options.container = container;\n        }\n        if (data) {\n            options.data = data;\n        }\n        var autoSize = options && options.autoSize !== false;\n        var theme = getChartTheme(options.theme);\n        firstColorIndex = 0;\n        update(chart, options, undefined, theme);\n        if (autoSize) {\n            chart.autoSize = true;\n        }\n    };\n    AgChart.save = function (component) {\n        var target = {};\n        save(component, target);\n        return target;\n    };\n    AgChart.createComponent = create;\n    return AgChart;\n}());\nexport { AgChart };\nvar pathToSeriesTypeMap = {\n    'cartesian.series': 'line',\n    'line.series': 'line',\n    'area.series': 'area',\n    'bar.series': 'bar',\n    'column.series': 'column',\n    'histogram.series': 'histogram',\n    'scatter.series': 'scatter',\n    'polar.series': 'pie',\n    'pie.series': 'pie'\n};\nvar actualSeriesTypeMap = (function () {\n    var map = {};\n    var actualSeries = ['area', 'bar', 'histogram', 'line', 'pie', 'scatter'];\n    actualSeries.forEach(function (series) { return map[series] = series; });\n    // Aliases:\n    map['column'] = 'bar';\n    return map;\n})();\nfunction save(component, target, mapping) {\n    if (target === void 0) { target = {}; }\n    if (mapping === void 0) { mapping = mappings; }\n    if (component.constructor && component.constructor.type && !mapping.meta) {\n        mapping = mapping[component.constructor.type];\n    }\n    var defaults = mapping && mapping.meta && mapping.meta.defaults;\n    var keys = Object.keys(defaults);\n    keys.forEach(function (key) {\n        var value = component[key];\n        if (isObject(value) && (!mapping.meta.nonSerializable || mapping.meta.nonSerializable.indexOf(key) < 0)) {\n            target[key] = {};\n            // save(value, target[key], mapping[key]);\n        }\n        else if (Array.isArray(value)) {\n            // target[key] = [];\n            // save(value, target[key], map[key]);\n        }\n        else {\n            target[key] = component[key];\n        }\n    });\n}\nfunction create(options, path, component, theme) {\n    var _a;\n    // Deprecate `chart.legend.item.marker.type` in integrated chart options.\n    options = Object.create(options);\n    if (component instanceof LegendMarker) {\n        if (options.type) {\n            options.shape = options.type;\n        }\n    }\n    else {\n        options = provideDefaultType(options, path);\n        if (path) {\n            if (options.type) {\n                path = path + '.' + options.type;\n            }\n        }\n        else {\n            path = options.type;\n        }\n    }\n    if (!path) {\n        return;\n    }\n    var mapping = getValue(mappings, path);\n    if (mapping) {\n        options = provideDefaultOptions(path, options, mapping, theme);\n        var meta = mapping.meta || {};\n        var constructorParams = meta.constructorParams || [];\n        var skipKeys = ['type', 'listeners'].concat(constructorParams);\n        // TODO: Constructor params processing could be improved, but it's good enough for current params.\n        var constructorParamValues = constructorParams\n            .map(function (param) { return options[param]; })\n            .filter(function (value) { return value !== undefined; });\n        if (!component) {\n            component = new ((_a = meta.constructor).bind.apply(_a, __spreadArrays([void 0], constructorParamValues)))();\n            if (theme && component instanceof Series) {\n                firstColorIndex = theme.setSeriesColors(component, options, firstColorIndex);\n            }\n        }\n        var _loop_1 = function (key) {\n            // Process every non-special key in the config object.\n            if (skipKeys.indexOf(key) < 0) {\n                var value = options[key];\n                if (value && key in mapping && !(meta.setAsIs && meta.setAsIs.indexOf(key) >= 0)) {\n                    if (Array.isArray(value)) {\n                        var subComponents = value\n                            .map(function (config) {\n                            var axis = create(config, path + '.' + key, undefined, theme);\n                            if (theme && key === 'axes') {\n                                var fakeTheme = {\n                                    getConfig: function (path) {\n                                        var parts = path.split('.');\n                                        var modifiedPath = parts.slice(0, 3).join('.') + '.' + axis.position;\n                                        var after = parts.slice(3);\n                                        if (after.length) {\n                                            modifiedPath += '.' + after.join('.');\n                                        }\n                                        var config = theme.getConfig(path);\n                                        var modifiedConfig = theme.getConfig(modifiedPath);\n                                        isObject(theme.getConfig(modifiedPath));\n                                        if (isObject(config) && isObject(modifiedConfig)) {\n                                            return deepMerge(config, modifiedConfig);\n                                        }\n                                        return modifiedConfig;\n                                    }\n                                };\n                                update(axis, config, path + '.' + key, fakeTheme);\n                            }\n                            return axis;\n                        })\n                            .filter(function (instance) { return !!instance; });\n                        component[key] = subComponents;\n                    }\n                    else {\n                        if (mapping[key] && component[key]) {\n                            // The instance property already exists on the component (e.g. chart.legend).\n                            // Simply configure the existing instance, without creating a new one.\n                            create(value, path + '.' + key, component[key], theme);\n                        }\n                        else {\n                            var subComponent = create(value, value.type ? path : path + '.' + key, undefined, theme);\n                            if (subComponent) {\n                                component[key] = subComponent;\n                            }\n                        }\n                    }\n                }\n                else { // if (key in meta.constructor.defaults) { // prevent users from creating custom properties\n                    component[key] = value;\n                }\n            }\n        };\n        for (var key in options) {\n            _loop_1(key);\n        }\n        var listeners = options.listeners;\n        if (component && component.addEventListener && listeners) {\n            for (var key in listeners) {\n                if (listeners.hasOwnProperty(key)) {\n                    var listener = listeners[key];\n                    if (typeof listener === 'function') {\n                        component.addEventListener(key, listener);\n                    }\n                }\n            }\n        }\n        return component;\n    }\n}\nfunction update(component, options, path, theme) {\n    if (!(options && isObject(options))) {\n        return;\n    }\n    // Deprecate `chart.legend.item.marker.type` in integrated chart options.\n    if (component instanceof LegendMarker) {\n        if (options.type) {\n            options.shape = options.type;\n        }\n    }\n    else {\n        options = provideDefaultType(options, path);\n        if (path) {\n            if (options.type) {\n                path = path + '.' + options.type;\n            }\n        }\n        else {\n            path = options.type;\n        }\n    }\n    if (!path) {\n        return;\n    }\n    var chart = path in mappings ? component : undefined;\n    var mapping = getValue(mappings, path);\n    if (mapping) {\n        options = provideDefaultOptions(path, options, mapping, theme);\n        var meta = mapping.meta || {};\n        var constructorParams = meta && meta.constructorParams || [];\n        var skipKeys = ['type'].concat(constructorParams);\n        for (var key in options) {\n            if (skipKeys.indexOf(key) < 0) {\n                var value = options[key];\n                var keyPath = path + '.' + key;\n                if (meta.setAsIs && meta.setAsIs.indexOf(key) >= 0) {\n                    component[key] = value;\n                }\n                else {\n                    var oldValue = component[key];\n                    if (Array.isArray(oldValue) && Array.isArray(value)) {\n                        if (chart) {\n                            if (key === 'series') {\n                                updateSeries(component, value, keyPath, theme);\n                            }\n                            else if (key === 'axes') {\n                                updateAxes(component, value, keyPath, theme);\n                            }\n                        }\n                        else {\n                            component[key] = value;\n                        }\n                    }\n                    else if (isObject(oldValue)) {\n                        if (value) {\n                            update(oldValue, value, value.type ? path : keyPath, theme);\n                        }\n                        else if (key in options) {\n                            component[key] = value;\n                        }\n                    }\n                    else {\n                        var subComponent = isObject(value) && create(value, value.type ? path : keyPath, undefined, theme);\n                        if (subComponent) {\n                            component[key] = subComponent;\n                        }\n                        else {\n                            if (chart && options.autoSize && (key === 'width' || key === 'height')) {\n                                continue;\n                            }\n                            component[key] = value;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    if (chart) {\n        chart.layoutPending = true;\n    }\n}\nfunction updateSeries(chart, configs, keyPath, theme) {\n    var allSeries = chart.series.slice();\n    var prevSeries;\n    var i = 0;\n    for (; i < configs.length; i++) {\n        var config = configs[i];\n        var series = allSeries[i];\n        if (series) {\n            config = provideDefaultType(config, keyPath);\n            var type = actualSeriesTypeMap[config.type];\n            if (series.type === type) {\n                if (theme) {\n                    firstColorIndex = theme.setSeriesColors(series, config, firstColorIndex);\n                }\n                update(series, config, keyPath, theme);\n            }\n            else {\n                var newSeries = create(config, keyPath, undefined, theme);\n                chart.removeSeries(series);\n                chart.addSeriesAfter(newSeries, prevSeries);\n                series = newSeries;\n            }\n        }\n        else { // more new configs than existing series\n            var newSeries = create(config, keyPath, undefined, theme);\n            chart.addSeries(newSeries);\n        }\n        prevSeries = series;\n    }\n    // more existing series than new configs\n    for (; i < allSeries.length; i++) {\n        var series = allSeries[i];\n        if (series) {\n            chart.removeSeries(series);\n        }\n    }\n}\nfunction updateAxes(chart, configs, keyPath, theme) {\n    var axes = chart.axes;\n    var axesToAdd = [];\n    var axesToUpdate = [];\n    var _loop_2 = function (config) {\n        var axisToUpdate = find(axes, function (axis) {\n            return axis.type === config.type && axis.position === config.position;\n        });\n        if (axisToUpdate) {\n            axesToUpdate.push(axisToUpdate);\n            update(axisToUpdate, config, keyPath, theme);\n        }\n        else {\n            var axisToAdd = create(config, keyPath, undefined, theme);\n            if (axisToAdd) {\n                axesToAdd.push(axisToAdd);\n            }\n        }\n    };\n    for (var _i = 0, configs_1 = configs; _i < configs_1.length; _i++) {\n        var config = configs_1[_i];\n        _loop_2(config);\n    }\n    chart.axes = axesToUpdate.concat(axesToAdd);\n}\nfunction provideDefaultChartType(options) {\n    if (options.type) {\n        return options;\n    }\n    // If chart type is not specified, try to infer it from the type of first series.\n    var series = options.series && options.series[0];\n    if (series && series.type) {\n        outerLoop: for (var chartType in mappings) {\n            for (var seriesType in mappings[chartType].series) {\n                if (series.type === seriesType) {\n                    options = Object.create(options);\n                    options.type = chartType;\n                    break outerLoop;\n                }\n            }\n        }\n    }\n    if (!options.type) {\n        options = Object.create(options);\n        options.type = 'cartesian';\n    }\n    return options;\n}\nfunction provideDefaultType(options, path) {\n    if (!path) { // if `path` is undefined, `options` is a top-level (chart) config\n        path = '';\n        options = provideDefaultChartType(options);\n    }\n    if (!options.type) {\n        var seriesType = pathToSeriesTypeMap[path];\n        if (seriesType) {\n            options = Object.create(options);\n            options.type = seriesType;\n        }\n    }\n    return options;\n}\nfunction skipThemeKey(key) {\n    return ['axes', 'series'].indexOf(key) >= 0;\n}\nvar enabledKey = 'enabled';\n/**\n * If certain options were not provided by the user, use the defaults from the theme and the mapping.\n * All three objects are provided for the current path in the config tree, not necessarily top-level.\n */\nfunction provideDefaultOptions(path, options, mapping, theme) {\n    var isChartConfig = path.indexOf('.') < 0;\n    var themeDefaults = theme && theme.getConfig(path);\n    var defaults = mapping && mapping.meta && mapping.meta.defaults;\n    var isExplicitlyDisabled = options.enabled === false; // by the user\n    if (defaults || themeDefaults) {\n        options = Object.create(options);\n    }\n    // Fill in the gaps for properties not configured by the user using theme provided values.\n    for (var key in themeDefaults) {\n        // The default values for these special chart configs always come from the mappings, not theme.\n        if (isChartConfig && skipThemeKey(key)) {\n            continue;\n        }\n        if (!(key in options)) {\n            options[key] = themeDefaults[key];\n        }\n    }\n    // Fill in the gaps for properties not configured by the user, nor theme using chart mappings.\n    for (var key in defaults) {\n        if ((!themeDefaults || !(key in themeDefaults) || skipThemeKey(key)) && !(key in options)) {\n            options[key] = defaults[key];\n        }\n    }\n    // Special handling for the 'enabled' property. For example:\n    // title: { text: 'Quarterly Revenue' } // means title is enabled\n    // legend: {} // means legend is enabled\n    var hasEnabledKey = (themeDefaults && enabledKey in themeDefaults) ||\n        (defaults && enabledKey in defaults);\n    if (hasEnabledKey && !isExplicitlyDisabled) {\n        options[enabledKey] = true;\n    }\n    return options;\n}\n"]},"metadata":{},"sourceType":"module"}