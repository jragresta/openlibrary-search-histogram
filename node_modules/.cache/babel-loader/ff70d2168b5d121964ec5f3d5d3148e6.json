{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Group } from \"../../../scene/group\";\nimport { Selection } from \"../../../scene/selection\";\nimport { SeriesTooltip } from \"../series\";\nimport { PointerEvents } from \"../../../scene/node\";\nimport { Path } from \"../../../scene/shape/path\";\nimport { CartesianSeries, CartesianSeriesMarker } from \"./cartesianSeries\";\nimport { ChartAxisDirection } from \"../../chartAxis\";\nimport { getMarker } from \"../../marker/util\";\nimport { toTooltipHtml } from \"../../chart\";\nimport { findMinMax } from \"../../../util/array\";\nimport { equal } from \"../../../util/equal\";\nimport { reactive } from \"../../../util/observable\";\nimport { interpolate } from \"../../../util/string\";\nimport { Text } from \"../../../scene/shape/text\";\nimport { Label } from \"../../label\";\nimport { sanitizeHtml } from \"../../../util/sanitize\";\nimport { isNumber } from \"../../../util/number\";\n\nvar AreaSeriesLabel = function (_super) {\n  __extends(AreaSeriesLabel, _super);\n\n  function AreaSeriesLabel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([reactive('change')], AreaSeriesLabel.prototype, \"formatter\", void 0);\n\n  return AreaSeriesLabel;\n}(Label);\n\nvar AreaSeriesTooltip = function (_super) {\n  __extends(AreaSeriesTooltip, _super);\n\n  function AreaSeriesTooltip() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([reactive('change')], AreaSeriesTooltip.prototype, \"renderer\", void 0);\n\n  __decorate([reactive('change')], AreaSeriesTooltip.prototype, \"format\", void 0);\n\n  return AreaSeriesTooltip;\n}(SeriesTooltip);\n\nexport { AreaSeriesTooltip };\n\nvar AreaSeries = function (_super) {\n  __extends(AreaSeries, _super);\n\n  function AreaSeries() {\n    var _this = _super.call(this) || this;\n\n    _this.tooltip = new AreaSeriesTooltip();\n    _this.areaGroup = _this.group.insertBefore(new Group(), _this.pickGroup);\n    _this.strokeGroup = _this.group.insertBefore(new Group(), _this.pickGroup);\n    _this.markerGroup = _this.pickGroup.appendChild(new Group());\n    _this.labelGroup = _this.group.appendChild(new Group());\n    _this.fillSelection = Selection.select(_this.areaGroup).selectAll();\n    _this.strokeSelection = Selection.select(_this.strokeGroup).selectAll();\n    _this.markerSelection = Selection.select(_this.markerGroup).selectAll();\n    _this.labelSelection = Selection.select(_this.labelGroup).selectAll();\n    /**\n     * The assumption is that the values will be reset (to `true`)\n     * in the {@link yKeys} setter.\n     */\n\n    _this.seriesItemEnabled = new Map();\n    _this.xData = [];\n    _this.yData = [];\n    _this.markerSelectionData = [];\n    _this.yDomain = [];\n    _this.directionKeys = {\n      x: ['xKey'],\n      y: ['yKeys']\n    };\n    _this.marker = new CartesianSeriesMarker();\n    _this.label = new AreaSeriesLabel();\n    _this.fills = ['#c16068', '#a2bf8a', '#ebcc87', '#80a0c3', '#b58dae', '#85c0d1'];\n    _this.strokes = ['#874349', '#718661', '#a48f5f', '#5a7088', '#7f637a', '#5d8692'];\n    _this.fillOpacity = 1;\n    _this.strokeOpacity = 1;\n    _this.lineDash = undefined;\n    _this.lineDashOffset = 0;\n    _this._xKey = '';\n    _this.xName = '';\n    _this._yKeys = [];\n    _this.yNames = [];\n    _this.strokeWidth = 2;\n\n    _this.addEventListener('update', _this.update);\n\n    var _a = _this,\n        marker = _a.marker,\n        label = _a.label;\n    marker.enabled = false;\n    marker.addPropertyListener('shape', _this.onMarkerShapeChange, _this);\n    marker.addEventListener('change', _this.update, _this);\n    label.enabled = false;\n    label.addEventListener('change', _this.update, _this);\n    return _this;\n  }\n\n  AreaSeries.prototype.onMarkerShapeChange = function () {\n    this.markerSelection = this.markerSelection.setData([]);\n    this.markerSelection.exit.remove();\n    this.update();\n    this.fireEvent({\n      type: 'legendChange'\n    });\n  };\n\n  Object.defineProperty(AreaSeries.prototype, \"xKey\", {\n    get: function get() {\n      return this._xKey;\n    },\n    set: function set(value) {\n      if (this._xKey !== value) {\n        this._xKey = value;\n        this.xData = [];\n        this.scheduleData();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AreaSeries.prototype, \"yKeys\", {\n    get: function get() {\n      return this._yKeys;\n    },\n    set: function set(values) {\n      if (!equal(this._yKeys, values)) {\n        this._yKeys = values;\n        this.yData = [];\n        var seriesItemEnabled_1 = this.seriesItemEnabled;\n        seriesItemEnabled_1.clear();\n        values.forEach(function (key) {\n          return seriesItemEnabled_1.set(key, true);\n        });\n        this.scheduleData();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  AreaSeries.prototype.setColors = function (fills, strokes) {\n    this.fills = fills;\n    this.strokes = strokes;\n  };\n\n  Object.defineProperty(AreaSeries.prototype, \"normalizedTo\", {\n    get: function get() {\n      return this._normalizedTo;\n    },\n    set: function set(value) {\n      var absValue = value ? Math.abs(value) : undefined;\n\n      if (this._normalizedTo !== absValue) {\n        this._normalizedTo = absValue;\n        this.scheduleData();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  AreaSeries.prototype.onHighlightChange = function () {\n    this.updateMarkerNodes();\n  };\n\n  AreaSeries.prototype.processData = function () {\n    var _a = this,\n        xKey = _a.xKey,\n        yKeys = _a.yKeys,\n        seriesItemEnabled = _a.seriesItemEnabled;\n\n    var data = xKey && yKeys.length && this.data ? this.data : []; // if (!(chart && chart.xAxis && chart.yAxis)) {\n    //     return false;\n    // }\n    // If the data is an array of rows like so:\n    //\n    // [{\n    //   xKy: 'Jan',\n    //   yKey1: 5,\n    //   yKey2: 7,\n    //   yKey3: -9,\n    // }, {\n    //   xKey: 'Feb',\n    //   yKey1: 10,\n    //   yKey2: -15,\n    //   yKey3: 20\n    // }]\n    //\n\n    var keysFound = true; // only warn once\n\n    this.xData = data.map(function (datum) {\n      if (keysFound && !(xKey in datum)) {\n        keysFound = false;\n        console.warn(\"The key '\" + xKey + \"' was not found in the data: \", datum);\n      }\n\n      return datum[xKey];\n    });\n    this.yData = data.map(function (datum) {\n      return yKeys.map(function (yKey) {\n        if (keysFound && !(yKey in datum)) {\n          keysFound = false;\n          console.warn(\"The key '\" + yKey + \"' was not found in the data: \", datum);\n        }\n\n        var value = datum[yKey];\n        return isFinite(value) && seriesItemEnabled.get(yKey) ? value : 0;\n      });\n    }); // xData: ['Jan', 'Feb']\n    //\n    // yData: [\n    //   [5, 7, -9],\n    //   [10, -15, 20]\n    // ]\n\n    var _b = this,\n        yData = _b.yData,\n        normalizedTo = _b.normalizedTo;\n\n    var yMinMax = yData.map(function (values) {\n      return findMinMax(values);\n    }); // used for normalization\n\n    var yLargestMinMax = this.findLargestMinMax(yMinMax);\n    var yMin;\n    var yMax;\n\n    if (normalizedTo && isFinite(normalizedTo)) {\n      yMin = yLargestMinMax.min < 0 ? -normalizedTo : 0;\n      yMax = normalizedTo;\n      yData.forEach(function (stack, i) {\n        return stack.forEach(function (y, j) {\n          if (y < 0) {\n            stack[j] = -y / yMinMax[i].min * normalizedTo;\n          } else {\n            stack[j] = y / yMinMax[i].max * normalizedTo;\n          }\n        });\n      });\n    } else {\n      yMin = yLargestMinMax.min;\n      yMax = yLargestMinMax.max;\n    }\n\n    if (yMin === 0 && yMax === 0) {\n      yMax = 1;\n    }\n\n    this.yDomain = this.fixNumericExtent([yMin, yMax], 'y');\n    this.fireEvent({\n      type: 'dataProcessed'\n    });\n    return true;\n  };\n\n  AreaSeries.prototype.findLargestMinMax = function (totals) {\n    var min = 0;\n    var max = 0;\n\n    for (var _i = 0, totals_1 = totals; _i < totals_1.length; _i++) {\n      var total = totals_1[_i];\n\n      if (total.min < min) {\n        min = total.min;\n      }\n\n      if (total.max > max) {\n        max = total.max;\n      }\n    }\n\n    return {\n      min: min,\n      max: max\n    };\n  };\n\n  AreaSeries.prototype.getDomain = function (direction) {\n    if (direction === ChartAxisDirection.X) {\n      return this.xData;\n    } else {\n      return this.yDomain;\n    }\n  };\n\n  AreaSeries.prototype.highlight = function (itemId) {\n    var _this = this;\n\n    _super.prototype.highlight.call(this, itemId);\n\n    var strokeWidth = this.highlightStyle.series.strokeWidth;\n    this.strokeSelection.each(function (node, datum) {\n      return node.strokeWidth = itemId === datum.itemId && strokeWidth !== undefined ? strokeWidth : _this.strokeWidth;\n    });\n  };\n\n  AreaSeries.prototype.dehighlight = function () {\n    var _this = this;\n\n    this.strokeSelection.each(function (node, datum) {\n      return node.strokeWidth = _this.strokeWidth;\n    });\n  };\n\n  AreaSeries.prototype.undim = function (itemId) {\n    if (this.yKeys.length > 1) {\n      this.updateDim(itemId);\n    } else {\n      _super.prototype.undim.call(this);\n    }\n  };\n\n  AreaSeries.prototype.updateDim = function (itemId) {\n    var dimOpacity = this.highlightStyle.series.dimOpacity;\n\n    var fn = function fn(node, datum) {\n      return node.opacity = !itemId || itemId === datum.itemId ? 1 : dimOpacity;\n    };\n\n    this.fillSelection.each(fn);\n    this.strokeSelection.each(fn);\n    this.markerSelection.each(fn);\n    this.labelSelection.each(fn);\n  };\n\n  AreaSeries.prototype.dim = function () {\n    if (this.yKeys.length > 1) {\n      this.updateDim();\n    } else {\n      _super.prototype.dim.call(this);\n    }\n  };\n\n  AreaSeries.prototype.update = function () {\n    var _a = this,\n        visible = _a.visible,\n        chart = _a.chart,\n        xAxis = _a.xAxis,\n        yAxis = _a.yAxis,\n        xData = _a.xData,\n        yData = _a.yData;\n\n    this.group.visible = visible && !!(xData.length && yData.length);\n\n    if (!chart || chart.layoutPending || chart.dataPending || !visible || !xAxis || !yAxis || !xData.length || !yData.length) {\n      return;\n    }\n\n    var selectionData = this.generateSelectionData();\n\n    if (!selectionData) {\n      return;\n    }\n\n    var areaSelectionData = selectionData.areaSelectionData,\n        markerSelectionData = selectionData.markerSelectionData,\n        labelSelectionData = selectionData.labelSelectionData;\n    this.updateFillSelection(areaSelectionData);\n    this.updateStrokeSelection(areaSelectionData);\n    this.updateMarkerSelection(markerSelectionData);\n    this.updateLabelSelection(labelSelectionData);\n    this.updateSelectionNodes();\n    this.markerSelectionData = markerSelectionData;\n  };\n\n  AreaSeries.prototype.updateSelectionNodes = function () {\n    this.updateFillNodes();\n    this.updateStrokeNodes();\n    this.updateMarkerNodes();\n    this.updateLabelNodes();\n  };\n\n  AreaSeries.prototype.generateSelectionData = function () {\n    var _this = this;\n\n    if (!this.data) {\n      return;\n    }\n\n    var _a = this,\n        yKeys = _a.yKeys,\n        data = _a.data,\n        xData = _a.xData,\n        yData = _a.yData,\n        marker = _a.marker,\n        label = _a.label,\n        fills = _a.fills,\n        strokes = _a.strokes,\n        xScale = _a.xAxis.scale,\n        yScale = _a.yAxis.scale;\n\n    var xOffset = (xScale.bandwidth || 0) / 2;\n    var yOffset = (yScale.bandwidth || 0) / 2;\n    var areaSelectionData = [];\n    var markerSelectionData = [];\n    var labelSelectionData = [];\n    var last = xData.length * 2 - 1;\n    xData.forEach(function (xDatum, i) {\n      var yDatum = yData[i];\n      var seriesDatum = data[i];\n      var x = xScale.convert(xDatum) + xOffset;\n      var prevMin = 0;\n      var prevMax = 0;\n      yDatum.forEach(function (curr, j) {\n        var prev = curr < 0 ? prevMin : prevMax;\n        var y = yScale.convert(prev + curr) + yOffset;\n        var yKey = yKeys[j];\n        var yValue = seriesDatum[yKey];\n\n        if (marker) {\n          markerSelectionData.push({\n            index: i,\n            series: _this,\n            itemId: yKey,\n            seriesDatum: seriesDatum,\n            yValue: yValue,\n            yKey: yKey,\n            point: {\n              x: x,\n              y: y\n            },\n            fill: fills[j % fills.length],\n            stroke: strokes[j % strokes.length]\n          });\n        }\n\n        var labelText;\n\n        if (label.formatter) {\n          labelText = label.formatter({\n            value: yValue\n          });\n        } else {\n          labelText = isNumber(yValue) ? yValue.toFixed(2) : String(yValue);\n        }\n\n        if (label) {\n          labelSelectionData.push({\n            index: i,\n            itemId: yKey,\n            point: {\n              x: x,\n              y: y\n            },\n            label: labelText ? {\n              text: labelText,\n              fontStyle: label.fontStyle,\n              fontWeight: label.fontWeight,\n              fontSize: label.fontSize,\n              fontFamily: label.fontFamily,\n              textAlign: 'center',\n              textBaseline: 'bottom',\n              fill: label.color\n            } : undefined\n          });\n        }\n\n        var areaDatum = areaSelectionData[j] || (areaSelectionData[j] = {\n          itemId: yKey,\n          points: []\n        });\n        var areaPoints = areaDatum.points;\n        areaPoints[i] = {\n          x: x,\n          y: y\n        };\n        areaPoints[last - i] = {\n          x: x,\n          y: yScale.convert(prev) + yOffset\n        }; // bottom y\n\n        if (curr < 0) {\n          prevMin += curr;\n        } else {\n          prevMax += curr;\n        }\n      });\n    });\n    return {\n      areaSelectionData: areaSelectionData,\n      markerSelectionData: markerSelectionData,\n      labelSelectionData: labelSelectionData\n    };\n  };\n\n  AreaSeries.prototype.updateFillSelection = function (areaSelectionData) {\n    var updateFills = this.fillSelection.setData(areaSelectionData);\n    updateFills.exit.remove();\n    var enterFills = updateFills.enter.append(Path).each(function (path) {\n      path.lineJoin = 'round';\n      path.stroke = undefined;\n      path.pointerEvents = PointerEvents.None;\n    });\n    this.fillSelection = updateFills.merge(enterFills);\n  };\n\n  AreaSeries.prototype.updateFillNodes = function () {\n    var _this = this;\n\n    var _a = this,\n        fills = _a.fills,\n        fillOpacity = _a.fillOpacity,\n        strokes = _a.strokes,\n        strokeOpacity = _a.strokeOpacity,\n        strokeWidth = _a.strokeWidth,\n        shadow = _a.shadow,\n        seriesItemEnabled = _a.seriesItemEnabled;\n\n    this.fillSelection.each(function (shape, datum, index) {\n      var path = shape.path;\n      shape.fill = fills[index % fills.length];\n      shape.fillOpacity = fillOpacity;\n      shape.stroke = strokes[index % strokes.length];\n      shape.strokeOpacity = strokeOpacity;\n      shape.strokeWidth = strokeWidth;\n      shape.lineDash = _this.lineDash;\n      shape.lineDashOffset = _this.lineDashOffset;\n      shape.fillShadow = shadow;\n      shape.visible = !!seriesItemEnabled.get(datum.itemId);\n      path.clear();\n      var points = datum.points;\n      points.forEach(function (_a, i) {\n        var x = _a.x,\n            y = _a.y;\n\n        if (i > 0) {\n          path.lineTo(x, y);\n        } else {\n          path.moveTo(x, y);\n        }\n      });\n      path.closePath();\n    });\n  };\n\n  AreaSeries.prototype.updateStrokeSelection = function (areaSelectionData) {\n    var updateStrokes = this.strokeSelection.setData(areaSelectionData);\n    updateStrokes.exit.remove();\n    var enterStrokes = updateStrokes.enter.append(Path).each(function (path) {\n      path.fill = undefined;\n      path.lineJoin = path.lineCap = 'round';\n      path.pointerEvents = PointerEvents.None;\n    });\n    this.strokeSelection = updateStrokes.merge(enterStrokes);\n  };\n\n  AreaSeries.prototype.updateStrokeNodes = function () {\n    var _this = this;\n\n    if (!this.data) {\n      return;\n    }\n\n    var _a = this,\n        data = _a.data,\n        strokes = _a.strokes,\n        strokeWidth = _a.strokeWidth,\n        strokeOpacity = _a.strokeOpacity,\n        seriesItemEnabled = _a.seriesItemEnabled;\n\n    this.strokeSelection.each(function (shape, datum, index) {\n      var path = shape.path;\n      shape.stroke = strokes[index % strokes.length];\n      shape.strokeWidth = strokeWidth;\n      shape.visible = !!seriesItemEnabled.get(datum.itemId);\n      shape.strokeOpacity = strokeOpacity;\n      shape.lineDash = _this.lineDash;\n      shape.lineDashOffset = _this.lineDashOffset;\n      path.clear();\n      var points = datum.points; // The stroke doesn't go all the way around the fill, only on top,\n      // that's why we iterate until `data.length` (rather than `points.length`) and stop.\n\n      for (var i = 0; i < data.length; i++) {\n        var _a = points[i],\n            x = _a.x,\n            y = _a.y;\n\n        if (i > 0) {\n          path.lineTo(x, y);\n        } else {\n          path.moveTo(x, y);\n        }\n      }\n    });\n  };\n\n  AreaSeries.prototype.updateMarkerSelection = function (markerSelectionData) {\n    var MarkerShape = getMarker(this.marker.shape);\n    var data = this.marker.enabled && MarkerShape ? markerSelectionData : [];\n    var updateMarkers = this.markerSelection.setData(data);\n    updateMarkers.exit.remove();\n    var enterMarkers = updateMarkers.enter.append(MarkerShape);\n    this.markerSelection = updateMarkers.merge(enterMarkers);\n  };\n\n  AreaSeries.prototype.updateMarkerNodes = function () {\n    if (!this.chart) {\n      return;\n    }\n\n    var marker = this.marker;\n    var markerFormatter = marker.formatter;\n    var markerStrokeWidth = marker.strokeWidth !== undefined ? marker.strokeWidth : this.strokeWidth;\n    var markerSize = marker.size;\n\n    var _a = this,\n        xKey = _a.xKey,\n        seriesItemEnabled = _a.seriesItemEnabled;\n\n    var highlightedDatum = this.chart.highlightedDatum;\n    var _b = this.highlightStyle,\n        highlightFill = _b.fill,\n        highlightStroke = _b.stroke;\n    this.markerSelection.each(function (node, datum) {\n      var highlighted = datum === highlightedDatum;\n      var markerFill = highlighted && highlightFill !== undefined ? highlightFill : marker.fill || datum.fill;\n      var markerStroke = highlighted && highlightStroke !== undefined ? highlightStroke : marker.stroke || datum.stroke;\n      var markerFormat = undefined;\n\n      if (markerFormatter) {\n        markerFormat = markerFormatter({\n          datum: datum.seriesDatum,\n          xKey: xKey,\n          yKey: datum.yKey,\n          fill: markerFill,\n          stroke: markerStroke,\n          strokeWidth: markerStrokeWidth,\n          size: markerSize,\n          highlighted: highlighted\n        });\n      }\n\n      node.fill = markerFormat && markerFormat.fill || markerFill;\n      node.stroke = markerFormat && markerFormat.stroke || markerStroke;\n      node.strokeWidth = markerFormat && markerFormat.strokeWidth !== undefined ? markerFormat.strokeWidth : markerStrokeWidth;\n      node.size = markerFormat && markerFormat.size !== undefined ? markerFormat.size : markerSize;\n      node.translationX = datum.point.x;\n      node.translationY = datum.point.y;\n      node.visible = marker.enabled && node.size > 0 && !!seriesItemEnabled.get(datum.yKey);\n    });\n  };\n\n  AreaSeries.prototype.updateLabelSelection = function (labelSelectionData) {\n    var label = this.label;\n    var data = label.enabled ? labelSelectionData : [];\n    var updateLabels = this.labelSelection.setData(data);\n    updateLabels.exit.remove();\n    var enterLabels = updateLabels.enter.append(Text);\n    this.labelSelection = updateLabels.merge(enterLabels);\n  };\n\n  AreaSeries.prototype.updateLabelNodes = function () {\n    if (!this.chart) {\n      return;\n    }\n\n    var labelEnabled = this.label.enabled;\n    this.labelSelection.each(function (text, datum) {\n      var point = datum.point,\n          label = datum.label;\n\n      if (label && labelEnabled) {\n        text.fontStyle = label.fontStyle;\n        text.fontWeight = label.fontWeight;\n        text.fontSize = label.fontSize;\n        text.fontFamily = label.fontFamily;\n        text.textAlign = label.textAlign;\n        text.textBaseline = label.textBaseline;\n        text.text = label.text;\n        text.x = point.x;\n        text.y = point.y - 10;\n        text.fill = label.fill;\n        text.visible = true;\n      } else {\n        text.visible = false;\n      }\n    });\n  };\n\n  AreaSeries.prototype.getNodeData = function () {\n    return this.markerSelectionData;\n  };\n\n  AreaSeries.prototype.fireNodeClickEvent = function (event, datum) {\n    this.fireEvent({\n      type: 'nodeClick',\n      event: event,\n      series: this,\n      datum: datum.seriesDatum,\n      xKey: this.xKey,\n      yKey: datum.yKey\n    });\n  };\n\n  AreaSeries.prototype.getTooltipHtml = function (nodeDatum) {\n    var _a = this,\n        xKey = _a.xKey,\n        xAxis = _a.xAxis,\n        yAxis = _a.yAxis;\n\n    var yKey = nodeDatum.yKey;\n\n    if (!xKey || !yKey) {\n      return '';\n    }\n\n    var _b = this,\n        xName = _b.xName,\n        yKeys = _b.yKeys,\n        yNames = _b.yNames,\n        yData = _b.yData,\n        fills = _b.fills,\n        tooltip = _b.tooltip;\n\n    var yGroup = yData[nodeDatum.index];\n    var tooltipRenderer = tooltip.renderer,\n        tooltipFormat = tooltip.format;\n    var datum = nodeDatum.seriesDatum;\n    var xValue = datum[xKey];\n    var yValue = datum[yKey];\n\n    if (!isNumber(yValue)) {\n      return '';\n    }\n\n    var xString = xAxis.formatDatum(xValue);\n    var yString = yAxis.formatDatum(yValue);\n    var yKeyIndex = yKeys.indexOf(yKey);\n    var processedYValue = yGroup[yKeyIndex];\n    var yName = yNames[yKeyIndex];\n    var color = fills[yKeyIndex % fills.length];\n    var title = sanitizeHtml(yName);\n    var content = sanitizeHtml(xString + ': ' + yString);\n    var defaults = {\n      title: title,\n      backgroundColor: color,\n      content: content\n    };\n\n    if (tooltipFormat || tooltipRenderer) {\n      var params = {\n        datum: datum,\n        xKey: xKey,\n        xName: xName,\n        xValue: xValue,\n        yKey: yKey,\n        yValue: yValue,\n        processedYValue: processedYValue,\n        yName: yName,\n        color: color\n      };\n\n      if (tooltipFormat) {\n        return toTooltipHtml({\n          content: interpolate(tooltipFormat, params)\n        }, defaults);\n      }\n\n      if (tooltipRenderer) {\n        return toTooltipHtml(tooltipRenderer(params), defaults);\n      }\n    }\n\n    return toTooltipHtml(defaults);\n  };\n\n  AreaSeries.prototype.listSeriesItems = function (legendData) {\n    var _a = this,\n        data = _a.data,\n        id = _a.id,\n        xKey = _a.xKey,\n        yKeys = _a.yKeys,\n        yNames = _a.yNames,\n        seriesItemEnabled = _a.seriesItemEnabled,\n        marker = _a.marker,\n        fills = _a.fills,\n        strokes = _a.strokes,\n        fillOpacity = _a.fillOpacity,\n        strokeOpacity = _a.strokeOpacity;\n\n    if (data && data.length && xKey && yKeys.length) {\n      yKeys.forEach(function (yKey, index) {\n        legendData.push({\n          id: id,\n          itemId: yKey,\n          enabled: seriesItemEnabled.get(yKey) || false,\n          label: {\n            text: yNames[index] || yKeys[index]\n          },\n          marker: {\n            shape: marker.shape,\n            fill: marker.fill || fills[index % fills.length],\n            stroke: marker.stroke || strokes[index % strokes.length],\n            fillOpacity: fillOpacity,\n            strokeOpacity: strokeOpacity\n          }\n        });\n      });\n    }\n  };\n\n  AreaSeries.prototype.toggleSeriesItem = function (itemId, enabled) {\n    this.seriesItemEnabled.set(itemId, enabled);\n    this.scheduleData();\n  };\n\n  AreaSeries.className = 'AreaSeries';\n  AreaSeries.type = 'area';\n\n  __decorate([reactive('dataChange')], AreaSeries.prototype, \"fills\", void 0);\n\n  __decorate([reactive('dataChange')], AreaSeries.prototype, \"strokes\", void 0);\n\n  __decorate([reactive('update')], AreaSeries.prototype, \"fillOpacity\", void 0);\n\n  __decorate([reactive('update')], AreaSeries.prototype, \"strokeOpacity\", void 0);\n\n  __decorate([reactive('update')], AreaSeries.prototype, \"lineDash\", void 0);\n\n  __decorate([reactive('update')], AreaSeries.prototype, \"lineDashOffset\", void 0);\n\n  __decorate([reactive('update')], AreaSeries.prototype, \"xName\", void 0);\n\n  __decorate([reactive('update')], AreaSeries.prototype, \"yNames\", void 0);\n\n  __decorate([reactive('update')], AreaSeries.prototype, \"strokeWidth\", void 0);\n\n  __decorate([reactive('update')], AreaSeries.prototype, \"shadow\", void 0);\n\n  return AreaSeries;\n}(CartesianSeries);\n\nexport { AreaSeries };","map":{"version":3,"sources":["/Users/julianneagresta/Projects/openlibrary-search-histogram/node_modules/ag-charts-community/dist/es6/chart/series/cartesian/areaSeries.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Group","Selection","SeriesTooltip","PointerEvents","Path","CartesianSeries","CartesianSeriesMarker","ChartAxisDirection","getMarker","toTooltipHtml","findMinMax","equal","reactive","interpolate","Text","Label","sanitizeHtml","isNumber","AreaSeriesLabel","_super","apply","AreaSeriesTooltip","AreaSeries","_this","call","tooltip","areaGroup","group","insertBefore","pickGroup","strokeGroup","markerGroup","appendChild","labelGroup","fillSelection","select","selectAll","strokeSelection","markerSelection","labelSelection","seriesItemEnabled","Map","xData","yData","markerSelectionData","yDomain","directionKeys","x","y","marker","label","fills","strokes","fillOpacity","strokeOpacity","lineDash","undefined","lineDashOffset","_xKey","xName","_yKeys","yNames","strokeWidth","addEventListener","update","_a","enabled","addPropertyListener","onMarkerShapeChange","setData","exit","remove","fireEvent","type","get","set","value","scheduleData","enumerable","configurable","values","seriesItemEnabled_1","clear","forEach","setColors","_normalizedTo","absValue","Math","abs","onHighlightChange","updateMarkerNodes","processData","xKey","yKeys","data","keysFound","map","datum","console","warn","yKey","isFinite","_b","normalizedTo","yMinMax","yLargestMinMax","findLargestMinMax","yMin","yMax","min","stack","j","max","fixNumericExtent","totals","_i","totals_1","total","getDomain","direction","X","highlight","itemId","highlightStyle","series","each","node","dehighlight","undim","updateDim","dimOpacity","fn","opacity","dim","visible","chart","xAxis","yAxis","layoutPending","dataPending","selectionData","generateSelectionData","areaSelectionData","labelSelectionData","updateFillSelection","updateStrokeSelection","updateMarkerSelection","updateLabelSelection","updateSelectionNodes","updateFillNodes","updateStrokeNodes","updateLabelNodes","xScale","scale","yScale","xOffset","bandwidth","yOffset","last","xDatum","yDatum","seriesDatum","convert","prevMin","prevMax","curr","prev","yValue","push","index","point","fill","stroke","labelText","formatter","toFixed","String","text","fontStyle","fontWeight","fontSize","fontFamily","textAlign","textBaseline","color","areaDatum","points","areaPoints","updateFills","enterFills","enter","append","path","lineJoin","pointerEvents","None","merge","shadow","shape","fillShadow","lineTo","moveTo","closePath","updateStrokes","enterStrokes","lineCap","MarkerShape","updateMarkers","enterMarkers","markerFormatter","markerStrokeWidth","markerSize","size","highlightedDatum","highlightFill","highlightStroke","highlighted","markerFill","markerStroke","markerFormat","translationX","translationY","updateLabels","enterLabels","labelEnabled","getNodeData","fireNodeClickEvent","event","getTooltipHtml","nodeDatum","yGroup","tooltipRenderer","renderer","tooltipFormat","format","xValue","xString","formatDatum","yString","yKeyIndex","indexOf","processedYValue","yName","title","content","defaults","backgroundColor","params","listSeriesItems","legendData","id","toggleSeriesItem","className"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Group } from \"../../../scene/group\";\nimport { Selection } from \"../../../scene/selection\";\nimport { SeriesTooltip } from \"../series\";\nimport { PointerEvents } from \"../../../scene/node\";\nimport { Path } from \"../../../scene/shape/path\";\nimport { CartesianSeries, CartesianSeriesMarker } from \"./cartesianSeries\";\nimport { ChartAxisDirection } from \"../../chartAxis\";\nimport { getMarker } from \"../../marker/util\";\nimport { toTooltipHtml } from \"../../chart\";\nimport { findMinMax } from \"../../../util/array\";\nimport { equal } from \"../../../util/equal\";\nimport { reactive } from \"../../../util/observable\";\nimport { interpolate } from \"../../../util/string\";\nimport { Text } from \"../../../scene/shape/text\";\nimport { Label } from \"../../label\";\nimport { sanitizeHtml } from \"../../../util/sanitize\";\nimport { isNumber } from \"../../../util/number\";\nvar AreaSeriesLabel = /** @class */ (function (_super) {\n    __extends(AreaSeriesLabel, _super);\n    function AreaSeriesLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        reactive('change')\n    ], AreaSeriesLabel.prototype, \"formatter\", void 0);\n    return AreaSeriesLabel;\n}(Label));\nvar AreaSeriesTooltip = /** @class */ (function (_super) {\n    __extends(AreaSeriesTooltip, _super);\n    function AreaSeriesTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        reactive('change')\n    ], AreaSeriesTooltip.prototype, \"renderer\", void 0);\n    __decorate([\n        reactive('change')\n    ], AreaSeriesTooltip.prototype, \"format\", void 0);\n    return AreaSeriesTooltip;\n}(SeriesTooltip));\nexport { AreaSeriesTooltip };\nvar AreaSeries = /** @class */ (function (_super) {\n    __extends(AreaSeries, _super);\n    function AreaSeries() {\n        var _this = _super.call(this) || this;\n        _this.tooltip = new AreaSeriesTooltip();\n        _this.areaGroup = _this.group.insertBefore(new Group, _this.pickGroup);\n        _this.strokeGroup = _this.group.insertBefore(new Group, _this.pickGroup);\n        _this.markerGroup = _this.pickGroup.appendChild(new Group);\n        _this.labelGroup = _this.group.appendChild(new Group);\n        _this.fillSelection = Selection.select(_this.areaGroup).selectAll();\n        _this.strokeSelection = Selection.select(_this.strokeGroup).selectAll();\n        _this.markerSelection = Selection.select(_this.markerGroup).selectAll();\n        _this.labelSelection = Selection.select(_this.labelGroup).selectAll();\n        /**\n         * The assumption is that the values will be reset (to `true`)\n         * in the {@link yKeys} setter.\n         */\n        _this.seriesItemEnabled = new Map();\n        _this.xData = [];\n        _this.yData = [];\n        _this.markerSelectionData = [];\n        _this.yDomain = [];\n        _this.directionKeys = {\n            x: ['xKey'],\n            y: ['yKeys']\n        };\n        _this.marker = new CartesianSeriesMarker();\n        _this.label = new AreaSeriesLabel();\n        _this.fills = [\n            '#c16068',\n            '#a2bf8a',\n            '#ebcc87',\n            '#80a0c3',\n            '#b58dae',\n            '#85c0d1'\n        ];\n        _this.strokes = [\n            '#874349',\n            '#718661',\n            '#a48f5f',\n            '#5a7088',\n            '#7f637a',\n            '#5d8692'\n        ];\n        _this.fillOpacity = 1;\n        _this.strokeOpacity = 1;\n        _this.lineDash = undefined;\n        _this.lineDashOffset = 0;\n        _this._xKey = '';\n        _this.xName = '';\n        _this._yKeys = [];\n        _this.yNames = [];\n        _this.strokeWidth = 2;\n        _this.addEventListener('update', _this.update);\n        var _a = _this, marker = _a.marker, label = _a.label;\n        marker.enabled = false;\n        marker.addPropertyListener('shape', _this.onMarkerShapeChange, _this);\n        marker.addEventListener('change', _this.update, _this);\n        label.enabled = false;\n        label.addEventListener('change', _this.update, _this);\n        return _this;\n    }\n    AreaSeries.prototype.onMarkerShapeChange = function () {\n        this.markerSelection = this.markerSelection.setData([]);\n        this.markerSelection.exit.remove();\n        this.update();\n        this.fireEvent({ type: 'legendChange' });\n    };\n    Object.defineProperty(AreaSeries.prototype, \"xKey\", {\n        get: function () {\n            return this._xKey;\n        },\n        set: function (value) {\n            if (this._xKey !== value) {\n                this._xKey = value;\n                this.xData = [];\n                this.scheduleData();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AreaSeries.prototype, \"yKeys\", {\n        get: function () {\n            return this._yKeys;\n        },\n        set: function (values) {\n            if (!equal(this._yKeys, values)) {\n                this._yKeys = values;\n                this.yData = [];\n                var seriesItemEnabled_1 = this.seriesItemEnabled;\n                seriesItemEnabled_1.clear();\n                values.forEach(function (key) { return seriesItemEnabled_1.set(key, true); });\n                this.scheduleData();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AreaSeries.prototype.setColors = function (fills, strokes) {\n        this.fills = fills;\n        this.strokes = strokes;\n    };\n    Object.defineProperty(AreaSeries.prototype, \"normalizedTo\", {\n        get: function () {\n            return this._normalizedTo;\n        },\n        set: function (value) {\n            var absValue = value ? Math.abs(value) : undefined;\n            if (this._normalizedTo !== absValue) {\n                this._normalizedTo = absValue;\n                this.scheduleData();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AreaSeries.prototype.onHighlightChange = function () {\n        this.updateMarkerNodes();\n    };\n    AreaSeries.prototype.processData = function () {\n        var _a = this, xKey = _a.xKey, yKeys = _a.yKeys, seriesItemEnabled = _a.seriesItemEnabled;\n        var data = xKey && yKeys.length && this.data ? this.data : [];\n        // if (!(chart && chart.xAxis && chart.yAxis)) {\n        //     return false;\n        // }\n        // If the data is an array of rows like so:\n        //\n        // [{\n        //   xKy: 'Jan',\n        //   yKey1: 5,\n        //   yKey2: 7,\n        //   yKey3: -9,\n        // }, {\n        //   xKey: 'Feb',\n        //   yKey1: 10,\n        //   yKey2: -15,\n        //   yKey3: 20\n        // }]\n        //\n        var keysFound = true; // only warn once\n        this.xData = data.map(function (datum) {\n            if (keysFound && !(xKey in datum)) {\n                keysFound = false;\n                console.warn(\"The key '\" + xKey + \"' was not found in the data: \", datum);\n            }\n            return datum[xKey];\n        });\n        this.yData = data.map(function (datum) { return yKeys.map(function (yKey) {\n            if (keysFound && !(yKey in datum)) {\n                keysFound = false;\n                console.warn(\"The key '\" + yKey + \"' was not found in the data: \", datum);\n            }\n            var value = datum[yKey];\n            return isFinite(value) && seriesItemEnabled.get(yKey) ? value : 0;\n        }); });\n        // xData: ['Jan', 'Feb']\n        //\n        // yData: [\n        //   [5, 7, -9],\n        //   [10, -15, 20]\n        // ]\n        var _b = this, yData = _b.yData, normalizedTo = _b.normalizedTo;\n        var yMinMax = yData.map(function (values) { return findMinMax(values); }); // used for normalization\n        var yLargestMinMax = this.findLargestMinMax(yMinMax);\n        var yMin;\n        var yMax;\n        if (normalizedTo && isFinite(normalizedTo)) {\n            yMin = yLargestMinMax.min < 0 ? -normalizedTo : 0;\n            yMax = normalizedTo;\n            yData.forEach(function (stack, i) { return stack.forEach(function (y, j) {\n                if (y < 0) {\n                    stack[j] = -y / yMinMax[i].min * normalizedTo;\n                }\n                else {\n                    stack[j] = y / yMinMax[i].max * normalizedTo;\n                }\n            }); });\n        }\n        else {\n            yMin = yLargestMinMax.min;\n            yMax = yLargestMinMax.max;\n        }\n        if (yMin === 0 && yMax === 0) {\n            yMax = 1;\n        }\n        this.yDomain = this.fixNumericExtent([yMin, yMax], 'y');\n        this.fireEvent({ type: 'dataProcessed' });\n        return true;\n    };\n    AreaSeries.prototype.findLargestMinMax = function (totals) {\n        var min = 0;\n        var max = 0;\n        for (var _i = 0, totals_1 = totals; _i < totals_1.length; _i++) {\n            var total = totals_1[_i];\n            if (total.min < min) {\n                min = total.min;\n            }\n            if (total.max > max) {\n                max = total.max;\n            }\n        }\n        return { min: min, max: max };\n    };\n    AreaSeries.prototype.getDomain = function (direction) {\n        if (direction === ChartAxisDirection.X) {\n            return this.xData;\n        }\n        else {\n            return this.yDomain;\n        }\n    };\n    AreaSeries.prototype.highlight = function (itemId) {\n        var _this = this;\n        _super.prototype.highlight.call(this, itemId);\n        var strokeWidth = this.highlightStyle.series.strokeWidth;\n        this.strokeSelection.each(function (node, datum) { return node.strokeWidth = itemId === datum.itemId && strokeWidth !== undefined ? strokeWidth : _this.strokeWidth; });\n    };\n    AreaSeries.prototype.dehighlight = function () {\n        var _this = this;\n        this.strokeSelection.each(function (node, datum) { return node.strokeWidth = _this.strokeWidth; });\n    };\n    AreaSeries.prototype.undim = function (itemId) {\n        if (this.yKeys.length > 1) {\n            this.updateDim(itemId);\n        }\n        else {\n            _super.prototype.undim.call(this);\n        }\n    };\n    AreaSeries.prototype.updateDim = function (itemId) {\n        var dimOpacity = this.highlightStyle.series.dimOpacity;\n        var fn = function (node, datum) { return node.opacity = !itemId || itemId === datum.itemId ? 1 : dimOpacity; };\n        this.fillSelection.each(fn);\n        this.strokeSelection.each(fn);\n        this.markerSelection.each(fn);\n        this.labelSelection.each(fn);\n    };\n    AreaSeries.prototype.dim = function () {\n        if (this.yKeys.length > 1) {\n            this.updateDim();\n        }\n        else {\n            _super.prototype.dim.call(this);\n        }\n    };\n    AreaSeries.prototype.update = function () {\n        var _a = this, visible = _a.visible, chart = _a.chart, xAxis = _a.xAxis, yAxis = _a.yAxis, xData = _a.xData, yData = _a.yData;\n        this.group.visible = visible && !!(xData.length && yData.length);\n        if (!chart || chart.layoutPending || chart.dataPending\n            || !visible || !xAxis || !yAxis || !xData.length || !yData.length) {\n            return;\n        }\n        var selectionData = this.generateSelectionData();\n        if (!selectionData) {\n            return;\n        }\n        var areaSelectionData = selectionData.areaSelectionData, markerSelectionData = selectionData.markerSelectionData, labelSelectionData = selectionData.labelSelectionData;\n        this.updateFillSelection(areaSelectionData);\n        this.updateStrokeSelection(areaSelectionData);\n        this.updateMarkerSelection(markerSelectionData);\n        this.updateLabelSelection(labelSelectionData);\n        this.updateSelectionNodes();\n        this.markerSelectionData = markerSelectionData;\n    };\n    AreaSeries.prototype.updateSelectionNodes = function () {\n        this.updateFillNodes();\n        this.updateStrokeNodes();\n        this.updateMarkerNodes();\n        this.updateLabelNodes();\n    };\n    AreaSeries.prototype.generateSelectionData = function () {\n        var _this = this;\n        if (!this.data) {\n            return;\n        }\n        var _a = this, yKeys = _a.yKeys, data = _a.data, xData = _a.xData, yData = _a.yData, marker = _a.marker, label = _a.label, fills = _a.fills, strokes = _a.strokes, xScale = _a.xAxis.scale, yScale = _a.yAxis.scale;\n        var xOffset = (xScale.bandwidth || 0) / 2;\n        var yOffset = (yScale.bandwidth || 0) / 2;\n        var areaSelectionData = [];\n        var markerSelectionData = [];\n        var labelSelectionData = [];\n        var last = xData.length * 2 - 1;\n        xData.forEach(function (xDatum, i) {\n            var yDatum = yData[i];\n            var seriesDatum = data[i];\n            var x = xScale.convert(xDatum) + xOffset;\n            var prevMin = 0;\n            var prevMax = 0;\n            yDatum.forEach(function (curr, j) {\n                var prev = curr < 0 ? prevMin : prevMax;\n                var y = yScale.convert(prev + curr) + yOffset;\n                var yKey = yKeys[j];\n                var yValue = seriesDatum[yKey];\n                if (marker) {\n                    markerSelectionData.push({\n                        index: i,\n                        series: _this,\n                        itemId: yKey,\n                        seriesDatum: seriesDatum,\n                        yValue: yValue,\n                        yKey: yKey,\n                        point: { x: x, y: y },\n                        fill: fills[j % fills.length],\n                        stroke: strokes[j % strokes.length]\n                    });\n                }\n                var labelText;\n                if (label.formatter) {\n                    labelText = label.formatter({ value: yValue });\n                }\n                else {\n                    labelText = isNumber(yValue) ? yValue.toFixed(2) : String(yValue);\n                }\n                if (label) {\n                    labelSelectionData.push({\n                        index: i,\n                        itemId: yKey,\n                        point: { x: x, y: y },\n                        label: labelText ? {\n                            text: labelText,\n                            fontStyle: label.fontStyle,\n                            fontWeight: label.fontWeight,\n                            fontSize: label.fontSize,\n                            fontFamily: label.fontFamily,\n                            textAlign: 'center',\n                            textBaseline: 'bottom',\n                            fill: label.color\n                        } : undefined\n                    });\n                }\n                var areaDatum = areaSelectionData[j] || (areaSelectionData[j] = { itemId: yKey, points: [] });\n                var areaPoints = areaDatum.points;\n                areaPoints[i] = { x: x, y: y };\n                areaPoints[last - i] = { x: x, y: yScale.convert(prev) + yOffset }; // bottom y\n                if (curr < 0) {\n                    prevMin += curr;\n                }\n                else {\n                    prevMax += curr;\n                }\n            });\n        });\n        return { areaSelectionData: areaSelectionData, markerSelectionData: markerSelectionData, labelSelectionData: labelSelectionData };\n    };\n    AreaSeries.prototype.updateFillSelection = function (areaSelectionData) {\n        var updateFills = this.fillSelection.setData(areaSelectionData);\n        updateFills.exit.remove();\n        var enterFills = updateFills.enter.append(Path)\n            .each(function (path) {\n            path.lineJoin = 'round';\n            path.stroke = undefined;\n            path.pointerEvents = PointerEvents.None;\n        });\n        this.fillSelection = updateFills.merge(enterFills);\n    };\n    AreaSeries.prototype.updateFillNodes = function () {\n        var _this = this;\n        var _a = this, fills = _a.fills, fillOpacity = _a.fillOpacity, strokes = _a.strokes, strokeOpacity = _a.strokeOpacity, strokeWidth = _a.strokeWidth, shadow = _a.shadow, seriesItemEnabled = _a.seriesItemEnabled;\n        this.fillSelection.each(function (shape, datum, index) {\n            var path = shape.path;\n            shape.fill = fills[index % fills.length];\n            shape.fillOpacity = fillOpacity;\n            shape.stroke = strokes[index % strokes.length];\n            shape.strokeOpacity = strokeOpacity;\n            shape.strokeWidth = strokeWidth;\n            shape.lineDash = _this.lineDash;\n            shape.lineDashOffset = _this.lineDashOffset;\n            shape.fillShadow = shadow;\n            shape.visible = !!seriesItemEnabled.get(datum.itemId);\n            path.clear();\n            var points = datum.points;\n            points.forEach(function (_a, i) {\n                var x = _a.x, y = _a.y;\n                if (i > 0) {\n                    path.lineTo(x, y);\n                }\n                else {\n                    path.moveTo(x, y);\n                }\n            });\n            path.closePath();\n        });\n    };\n    AreaSeries.prototype.updateStrokeSelection = function (areaSelectionData) {\n        var updateStrokes = this.strokeSelection.setData(areaSelectionData);\n        updateStrokes.exit.remove();\n        var enterStrokes = updateStrokes.enter.append(Path)\n            .each(function (path) {\n            path.fill = undefined;\n            path.lineJoin = path.lineCap = 'round';\n            path.pointerEvents = PointerEvents.None;\n        });\n        this.strokeSelection = updateStrokes.merge(enterStrokes);\n    };\n    AreaSeries.prototype.updateStrokeNodes = function () {\n        var _this = this;\n        if (!this.data) {\n            return;\n        }\n        var _a = this, data = _a.data, strokes = _a.strokes, strokeWidth = _a.strokeWidth, strokeOpacity = _a.strokeOpacity, seriesItemEnabled = _a.seriesItemEnabled;\n        this.strokeSelection.each(function (shape, datum, index) {\n            var path = shape.path;\n            shape.stroke = strokes[index % strokes.length];\n            shape.strokeWidth = strokeWidth;\n            shape.visible = !!seriesItemEnabled.get(datum.itemId);\n            shape.strokeOpacity = strokeOpacity;\n            shape.lineDash = _this.lineDash;\n            shape.lineDashOffset = _this.lineDashOffset;\n            path.clear();\n            var points = datum.points;\n            // The stroke doesn't go all the way around the fill, only on top,\n            // that's why we iterate until `data.length` (rather than `points.length`) and stop.\n            for (var i = 0; i < data.length; i++) {\n                var _a = points[i], x = _a.x, y = _a.y;\n                if (i > 0) {\n                    path.lineTo(x, y);\n                }\n                else {\n                    path.moveTo(x, y);\n                }\n            }\n        });\n    };\n    AreaSeries.prototype.updateMarkerSelection = function (markerSelectionData) {\n        var MarkerShape = getMarker(this.marker.shape);\n        var data = this.marker.enabled && MarkerShape ? markerSelectionData : [];\n        var updateMarkers = this.markerSelection.setData(data);\n        updateMarkers.exit.remove();\n        var enterMarkers = updateMarkers.enter.append(MarkerShape);\n        this.markerSelection = updateMarkers.merge(enterMarkers);\n    };\n    AreaSeries.prototype.updateMarkerNodes = function () {\n        if (!this.chart) {\n            return;\n        }\n        var marker = this.marker;\n        var markerFormatter = marker.formatter;\n        var markerStrokeWidth = marker.strokeWidth !== undefined ? marker.strokeWidth : this.strokeWidth;\n        var markerSize = marker.size;\n        var _a = this, xKey = _a.xKey, seriesItemEnabled = _a.seriesItemEnabled;\n        var highlightedDatum = this.chart.highlightedDatum;\n        var _b = this.highlightStyle, highlightFill = _b.fill, highlightStroke = _b.stroke;\n        this.markerSelection.each(function (node, datum) {\n            var highlighted = datum === highlightedDatum;\n            var markerFill = highlighted && highlightFill !== undefined ? highlightFill : marker.fill || datum.fill;\n            var markerStroke = highlighted && highlightStroke !== undefined ? highlightStroke : marker.stroke || datum.stroke;\n            var markerFormat = undefined;\n            if (markerFormatter) {\n                markerFormat = markerFormatter({\n                    datum: datum.seriesDatum,\n                    xKey: xKey,\n                    yKey: datum.yKey,\n                    fill: markerFill,\n                    stroke: markerStroke,\n                    strokeWidth: markerStrokeWidth,\n                    size: markerSize,\n                    highlighted: highlighted\n                });\n            }\n            node.fill = markerFormat && markerFormat.fill || markerFill;\n            node.stroke = markerFormat && markerFormat.stroke || markerStroke;\n            node.strokeWidth = markerFormat && markerFormat.strokeWidth !== undefined\n                ? markerFormat.strokeWidth\n                : markerStrokeWidth;\n            node.size = markerFormat && markerFormat.size !== undefined\n                ? markerFormat.size\n                : markerSize;\n            node.translationX = datum.point.x;\n            node.translationY = datum.point.y;\n            node.visible = marker.enabled && node.size > 0 && !!seriesItemEnabled.get(datum.yKey);\n        });\n    };\n    AreaSeries.prototype.updateLabelSelection = function (labelSelectionData) {\n        var label = this.label;\n        var data = label.enabled ? labelSelectionData : [];\n        var updateLabels = this.labelSelection.setData(data);\n        updateLabels.exit.remove();\n        var enterLabels = updateLabels.enter.append(Text);\n        this.labelSelection = updateLabels.merge(enterLabels);\n    };\n    AreaSeries.prototype.updateLabelNodes = function () {\n        if (!this.chart) {\n            return;\n        }\n        var labelEnabled = this.label.enabled;\n        this.labelSelection.each(function (text, datum) {\n            var point = datum.point, label = datum.label;\n            if (label && labelEnabled) {\n                text.fontStyle = label.fontStyle;\n                text.fontWeight = label.fontWeight;\n                text.fontSize = label.fontSize;\n                text.fontFamily = label.fontFamily;\n                text.textAlign = label.textAlign;\n                text.textBaseline = label.textBaseline;\n                text.text = label.text;\n                text.x = point.x;\n                text.y = point.y - 10;\n                text.fill = label.fill;\n                text.visible = true;\n            }\n            else {\n                text.visible = false;\n            }\n        });\n    };\n    AreaSeries.prototype.getNodeData = function () {\n        return this.markerSelectionData;\n    };\n    AreaSeries.prototype.fireNodeClickEvent = function (event, datum) {\n        this.fireEvent({\n            type: 'nodeClick',\n            event: event,\n            series: this,\n            datum: datum.seriesDatum,\n            xKey: this.xKey,\n            yKey: datum.yKey\n        });\n    };\n    AreaSeries.prototype.getTooltipHtml = function (nodeDatum) {\n        var _a = this, xKey = _a.xKey, xAxis = _a.xAxis, yAxis = _a.yAxis;\n        var yKey = nodeDatum.yKey;\n        if (!xKey || !yKey) {\n            return '';\n        }\n        var _b = this, xName = _b.xName, yKeys = _b.yKeys, yNames = _b.yNames, yData = _b.yData, fills = _b.fills, tooltip = _b.tooltip;\n        var yGroup = yData[nodeDatum.index];\n        var tooltipRenderer = tooltip.renderer, tooltipFormat = tooltip.format;\n        var datum = nodeDatum.seriesDatum;\n        var xValue = datum[xKey];\n        var yValue = datum[yKey];\n        if (!isNumber(yValue)) {\n            return '';\n        }\n        var xString = xAxis.formatDatum(xValue);\n        var yString = yAxis.formatDatum(yValue);\n        var yKeyIndex = yKeys.indexOf(yKey);\n        var processedYValue = yGroup[yKeyIndex];\n        var yName = yNames[yKeyIndex];\n        var color = fills[yKeyIndex % fills.length];\n        var title = sanitizeHtml(yName);\n        var content = sanitizeHtml(xString + ': ' + yString);\n        var defaults = {\n            title: title,\n            backgroundColor: color,\n            content: content\n        };\n        if (tooltipFormat || tooltipRenderer) {\n            var params = {\n                datum: datum,\n                xKey: xKey,\n                xName: xName,\n                xValue: xValue,\n                yKey: yKey,\n                yValue: yValue,\n                processedYValue: processedYValue,\n                yName: yName,\n                color: color\n            };\n            if (tooltipFormat) {\n                return toTooltipHtml({\n                    content: interpolate(tooltipFormat, params)\n                }, defaults);\n            }\n            if (tooltipRenderer) {\n                return toTooltipHtml(tooltipRenderer(params), defaults);\n            }\n        }\n        return toTooltipHtml(defaults);\n    };\n    AreaSeries.prototype.listSeriesItems = function (legendData) {\n        var _a = this, data = _a.data, id = _a.id, xKey = _a.xKey, yKeys = _a.yKeys, yNames = _a.yNames, seriesItemEnabled = _a.seriesItemEnabled, marker = _a.marker, fills = _a.fills, strokes = _a.strokes, fillOpacity = _a.fillOpacity, strokeOpacity = _a.strokeOpacity;\n        if (data && data.length && xKey && yKeys.length) {\n            yKeys.forEach(function (yKey, index) {\n                legendData.push({\n                    id: id,\n                    itemId: yKey,\n                    enabled: seriesItemEnabled.get(yKey) || false,\n                    label: {\n                        text: yNames[index] || yKeys[index]\n                    },\n                    marker: {\n                        shape: marker.shape,\n                        fill: marker.fill || fills[index % fills.length],\n                        stroke: marker.stroke || strokes[index % strokes.length],\n                        fillOpacity: fillOpacity,\n                        strokeOpacity: strokeOpacity\n                    }\n                });\n            });\n        }\n    };\n    AreaSeries.prototype.toggleSeriesItem = function (itemId, enabled) {\n        this.seriesItemEnabled.set(itemId, enabled);\n        this.scheduleData();\n    };\n    AreaSeries.className = 'AreaSeries';\n    AreaSeries.type = 'area';\n    __decorate([\n        reactive('dataChange')\n    ], AreaSeries.prototype, \"fills\", void 0);\n    __decorate([\n        reactive('dataChange')\n    ], AreaSeries.prototype, \"strokes\", void 0);\n    __decorate([\n        reactive('update')\n    ], AreaSeries.prototype, \"fillOpacity\", void 0);\n    __decorate([\n        reactive('update')\n    ], AreaSeries.prototype, \"strokeOpacity\", void 0);\n    __decorate([\n        reactive('update')\n    ], AreaSeries.prototype, \"lineDash\", void 0);\n    __decorate([\n        reactive('update')\n    ], AreaSeries.prototype, \"lineDashOffset\", void 0);\n    __decorate([\n        reactive('update')\n    ], AreaSeries.prototype, \"xName\", void 0);\n    __decorate([\n        reactive('update')\n    ], AreaSeries.prototype, \"yNames\", void 0);\n    __decorate([\n        reactive('update')\n    ], AreaSeries.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        reactive('update')\n    ], AreaSeries.prototype, \"shadow\", void 0);\n    return AreaSeries;\n}(CartesianSeries));\nexport { AreaSeries };\n"]},"metadata":{},"sourceType":"module"}