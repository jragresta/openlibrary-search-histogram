{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Selection } from \"../../../scene/selection\";\nimport { HdpiCanvas } from \"../../../canvas/hdpiCanvas\";\nimport { reactive } from \"../../../util/observable\";\nimport { Label } from \"../../label\";\nimport { SeriesTooltip } from \"../series\";\nimport { HierarchySeries } from \"./hierarchySeries\";\nimport { toTooltipHtml } from \"../../chart\";\nimport { Group } from \"../../../scene/group\";\nimport { Text } from \"../../../scene/shape/text\";\nimport { Rect } from \"../../../scene/shape/rect\";\nimport { DropShadow } from \"../../../scene/dropShadow\";\nimport { LinearScale } from \"../../../scale/linearScale\";\nimport { Treemap } from \"../../../layout/treemap\";\nimport { hierarchy } from \"../../../layout/hierarchy\";\nimport { toFixed } from \"../../../util/number\";\n\nvar TreemapSeriesTooltip = function (_super) {\n  __extends(TreemapSeriesTooltip, _super);\n\n  function TreemapSeriesTooltip() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([reactive('change')], TreemapSeriesTooltip.prototype, \"renderer\", void 0);\n\n  return TreemapSeriesTooltip;\n}(SeriesTooltip);\n\nexport { TreemapSeriesTooltip };\n\nvar TreemapSeriesLabel = function (_super) {\n  __extends(TreemapSeriesLabel, _super);\n\n  function TreemapSeriesLabel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.padding = 10;\n    return _this;\n  }\n\n  __decorate([reactive('change')], TreemapSeriesLabel.prototype, \"padding\", void 0);\n\n  return TreemapSeriesLabel;\n}(Label);\n\nexport { TreemapSeriesLabel };\nvar TextNodeTag;\n\n(function (TextNodeTag) {\n  TextNodeTag[TextNodeTag[\"Name\"] = 0] = \"Name\";\n  TextNodeTag[TextNodeTag[\"Value\"] = 1] = \"Value\";\n})(TextNodeTag || (TextNodeTag = {}));\n\nvar TreemapSeries = function (_super) {\n  __extends(TreemapSeries, _super);\n\n  function TreemapSeries() {\n    var _this = _super.call(this) || this;\n\n    _this.groupSelection = Selection.select(_this.pickGroup).selectAll();\n    _this.labelMap = new Map();\n    _this.layout = new Treemap();\n\n    _this.title = function () {\n      var label = new TreemapSeriesLabel();\n      label.color = 'white';\n      label.fontWeight = 'bold';\n      label.fontSize = 12;\n      label.fontFamily = 'Verdana, sans-serif';\n      label.padding = 15;\n      return label;\n    }();\n\n    _this.subtitle = function () {\n      var label = new TreemapSeriesLabel();\n      label.color = 'white';\n      label.fontSize = 9;\n      label.fontFamily = 'Verdana, sans-serif';\n      label.padding = 13;\n      return label;\n    }();\n\n    _this.labels = {\n      large: function () {\n        var label = new Label();\n        label.color = 'white';\n        label.fontWeight = 'bold';\n        label.fontSize = 18;\n        return label;\n      }(),\n      medium: function () {\n        var label = new Label();\n        label.color = 'white';\n        label.fontWeight = 'bold';\n        label.fontSize = 14;\n        return label;\n      }(),\n      small: function () {\n        var label = new Label();\n        label.color = 'white';\n        label.fontWeight = 'bold';\n        label.fontSize = 10;\n        return label;\n      }(),\n      color: function () {\n        var label = new Label();\n        label.color = 'white';\n        return label;\n      }()\n    };\n    _this._nodePadding = 2;\n    _this.labelKey = 'label';\n    _this.sizeKey = 'size';\n    _this.colorKey = 'color';\n    _this.colorDomain = [-5, 5];\n    _this.colorRange = ['#cb4b3f', '#6acb64'];\n    _this.colorParents = false;\n    _this.gradient = true;\n    _this.colorName = 'Change';\n    _this.rootName = 'Root';\n\n    _this._shadow = function () {\n      var shadow = new DropShadow();\n      shadow.color = 'rgba(0, 0, 0, 0.4)';\n      shadow.xOffset = 1.5;\n      shadow.yOffset = 1.5;\n      return shadow;\n    }();\n\n    _this.tooltip = new TreemapSeriesTooltip();\n\n    _this.shadow.addEventListener('change', _this.update, _this);\n\n    _this.title.addEventListener('change', _this.update, _this);\n\n    _this.subtitle.addEventListener('change', _this.update, _this);\n\n    _this.labels.small.addEventListener('change', _this.update, _this);\n\n    _this.labels.medium.addEventListener('change', _this.update, _this);\n\n    _this.labels.large.addEventListener('change', _this.update, _this);\n\n    _this.labels.color.addEventListener('change', _this.update, _this);\n\n    return _this;\n  }\n\n  Object.defineProperty(TreemapSeries.prototype, \"nodePadding\", {\n    get: function get() {\n      return this._nodePadding;\n    },\n    set: function set(value) {\n      if (this._nodePadding !== value) {\n        this._nodePadding = value;\n        this.updateLayoutPadding();\n        this.update();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TreemapSeries.prototype, \"shadow\", {\n    get: function get() {\n      return this._shadow;\n    },\n    set: function set(value) {\n      if (this._shadow !== value) {\n        this._shadow = value;\n        this.update();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  TreemapSeries.prototype.onHighlightChange = function () {\n    this.updateNodes();\n  };\n\n  TreemapSeries.prototype.updateLayoutPadding = function () {\n    var _a = this,\n        title = _a.title,\n        subtitle = _a.subtitle,\n        nodePadding = _a.nodePadding,\n        labelKey = _a.labelKey;\n\n    this.layout.paddingRight = function (_) {\n      return nodePadding;\n    };\n\n    this.layout.paddingBottom = function (_) {\n      return nodePadding;\n    };\n\n    this.layout.paddingLeft = function (_) {\n      return nodePadding;\n    };\n\n    this.layout.paddingTop = function (node) {\n      var name = node.data[labelKey] || '';\n\n      if (node.children) {\n        name = name.toUpperCase();\n      }\n\n      var font = node.depth > 1 ? subtitle : title;\n      var textSize = HdpiCanvas.getTextSize(name, [font.fontWeight, font.fontSize + 'px', font.fontFamily].join(' ').trim());\n      var innerNodeWidth = node.x1 - node.x0 - nodePadding * 2;\n      var hasTitle = node.depth > 0 && node.children && textSize.width <= innerNodeWidth;\n      node.hasTitle = hasTitle;\n      return hasTitle ? textSize.height + nodePadding * 2 : nodePadding;\n    };\n  };\n\n  TreemapSeries.prototype.processData = function () {\n    if (!this.data) {\n      return false;\n    }\n\n    var _a = this,\n        data = _a.data,\n        sizeKey = _a.sizeKey,\n        labelKey = _a.labelKey,\n        colorKey = _a.colorKey,\n        colorDomain = _a.colorDomain,\n        colorRange = _a.colorRange,\n        colorParents = _a.colorParents;\n\n    var dataRoot;\n\n    if (sizeKey) {\n      dataRoot = hierarchy(data).sum(function (datum) {\n        return datum.children ? 1 : datum[sizeKey];\n      });\n    } else {\n      dataRoot = hierarchy(data).sum(function (datum) {\n        return datum.children ? 0 : 1;\n      });\n    }\n\n    this.dataRoot = dataRoot;\n    var colorScale = new LinearScale();\n    colorScale.domain = colorDomain;\n    colorScale.range = colorRange;\n    var series = this;\n\n    function traverse(root, depth) {\n      if (depth === void 0) {\n        depth = 0;\n      }\n\n      var children = root.children,\n          data = root.data;\n      var label = data[labelKey];\n      var colorValue = colorKey ? data[colorKey] : depth;\n      root.series = series;\n      root.fill = !children || colorParents ? colorScale.convert(colorValue) : '#272931';\n      root.colorValue = colorValue;\n\n      if (label) {\n        root.label = children ? label.toUpperCase() : label;\n      } else {\n        root.label = '';\n      }\n\n      if (children) {\n        children.forEach(function (child) {\n          return traverse(child, depth + 1);\n        });\n      }\n    }\n\n    traverse(this.dataRoot);\n    return true;\n  };\n\n  TreemapSeries.prototype.getLabelCenterX = function (datum) {\n    return (datum.x0 + datum.x1) / 2;\n  };\n\n  TreemapSeries.prototype.getLabelCenterY = function (datum) {\n    return (datum.y0 + datum.y1) / 2 + 2;\n  };\n\n  TreemapSeries.prototype.update = function () {\n    var _a = this,\n        chart = _a.chart,\n        dataRoot = _a.dataRoot;\n\n    if (!chart || !dataRoot) {\n      return;\n    }\n\n    var seriesRect = chart.getSeriesRect();\n\n    if (!seriesRect) {\n      return;\n    }\n\n    this.layout.size = [seriesRect.width, seriesRect.height];\n    this.updateLayoutPadding();\n    var descendants = this.layout.processData(dataRoot).descendants();\n    var updateGroups = this.groupSelection.setData(descendants);\n    updateGroups.exit.remove();\n    var enterGroups = updateGroups.enter.append(Group);\n    enterGroups.append(Rect);\n    enterGroups.append(Text).each(function (node) {\n      return node.tag = TextNodeTag.Name;\n    });\n    enterGroups.append(Text).each(function (node) {\n      return node.tag = TextNodeTag.Value;\n    });\n    this.groupSelection = updateGroups.merge(enterGroups);\n    this.updateNodes();\n  };\n\n  TreemapSeries.prototype.updateNodes = function () {\n    var _this = this;\n\n    var chart = this.chart;\n\n    if (!chart) {\n      return;\n    }\n\n    var highlightedDatum = chart.highlightedDatum;\n    var _a = this.highlightStyle,\n        highlightFill = _a.fill,\n        highlightStroke = _a.stroke;\n\n    var _b = this,\n        colorKey = _b.colorKey,\n        labelMap = _b.labelMap,\n        nodePadding = _b.nodePadding,\n        title = _b.title,\n        subtitle = _b.subtitle,\n        labels = _b.labels,\n        shadow = _b.shadow,\n        gradient = _b.gradient;\n\n    this.groupSelection.selectByClass(Rect).each(function (rect, datum) {\n      var highlighted = datum === highlightedDatum;\n      var fill = highlighted && highlightFill !== undefined ? highlightFill : datum.fill;\n      var stroke = highlighted && highlightStroke !== undefined ? highlightStroke : datum.depth < 2 ? undefined : 'black';\n      rect.fill = fill;\n      rect.stroke = stroke;\n      rect.strokeWidth = 1;\n      rect.crisp = true;\n      rect.gradient = gradient;\n      rect.x = datum.x0;\n      rect.y = datum.y0;\n      rect.width = datum.x1 - datum.x0;\n      rect.height = datum.y1 - datum.y0;\n    });\n    this.groupSelection.selectByTag(TextNodeTag.Name).each(function (text, datum, index) {\n      var isLeaf = !datum.children;\n      var innerNodeWidth = datum.x1 - datum.x0 - nodePadding * 2;\n      var innerNodeHeight = datum.y1 - datum.y0 - nodePadding * 2;\n      var hasTitle = datum.hasTitle;\n      var highlighted = datum === highlightedDatum;\n      var label;\n\n      if (isLeaf) {\n        if (innerNodeWidth > 40 && innerNodeHeight > 40) {\n          label = labels.large;\n        } else if (innerNodeWidth > 20 && innerNodeHeight > 20) {\n          label = labels.medium;\n        } else {\n          label = labels.small;\n        }\n      } else {\n        if (datum.depth > 1) {\n          label = subtitle;\n        } else {\n          label = title;\n        }\n      }\n\n      text.fontWeight = label.fontWeight;\n      text.fontSize = label.fontSize;\n      text.fontFamily = label.fontFamily;\n      text.textBaseline = isLeaf ? 'bottom' : hasTitle ? 'top' : 'middle';\n      text.textAlign = hasTitle ? 'left' : 'center';\n      text.text = datum.label;\n      var textBBox = text.computeBBox();\n      var hasLabel = isLeaf && !!textBBox && textBBox.width <= innerNodeWidth && textBBox.height * 2 + 8 <= innerNodeHeight;\n      labelMap.set(index, text);\n      text.fill = highlighted ? 'black' : label.color;\n      text.fillShadow = hasLabel && !highlighted ? shadow : undefined;\n      text.visible = hasTitle || hasLabel;\n\n      if (hasTitle) {\n        text.x = datum.x0 + nodePadding;\n        text.y = datum.y0 + nodePadding;\n      } else {\n        text.x = _this.getLabelCenterX(datum);\n        text.y = _this.getLabelCenterY(datum);\n      }\n    });\n    this.groupSelection.selectByTag(TextNodeTag.Value).each(function (text, datum, index) {\n      var isLeaf = !datum.children;\n      var innerNodeWidth = datum.x1 - datum.x0 - nodePadding * 2;\n      var highlighted = datum === highlightedDatum;\n      var value = datum.colorValue;\n      var label = labels.color;\n      text.fontSize = label.fontSize;\n      text.fontFamily = label.fontFamily;\n      text.fontStyle = label.fontStyle;\n      text.fontWeight = label.fontWeight;\n      text.textBaseline = 'top';\n      text.textAlign = 'center';\n      text.text = typeof value === 'number' && isFinite(value) ? String(toFixed(datum.colorValue)) + '%' : '';\n      var textBBox = text.computeBBox();\n      var nameNode = labelMap.get(index);\n      var hasLabel = !!nameNode && nameNode.visible;\n      var isVisible = isLeaf && !!colorKey && hasLabel && !!textBBox && textBBox.width < innerNodeWidth;\n      text.fill = highlighted ? 'black' : label.color;\n      text.fillShadow = highlighted ? undefined : shadow;\n      text.visible = isVisible;\n\n      if (isVisible) {\n        text.x = _this.getLabelCenterX(datum);\n        text.y = _this.getLabelCenterY(datum);\n      } else {\n        if (nameNode && !(datum.children && datum.children.length)) {\n          nameNode.textBaseline = 'middle';\n          nameNode.y = _this.getLabelCenterY(datum);\n        }\n      }\n    });\n  };\n\n  TreemapSeries.prototype.getDomain = function (direction) {\n    return [0, 1];\n  };\n\n  TreemapSeries.prototype.getTooltipHtml = function (datum) {\n    var _a = this,\n        tooltip = _a.tooltip,\n        sizeKey = _a.sizeKey,\n        labelKey = _a.labelKey,\n        colorKey = _a.colorKey,\n        colorName = _a.colorName,\n        rootName = _a.rootName;\n\n    var data = datum.data;\n    var tooltipRenderer = tooltip.renderer;\n    var title = datum.depth ? data[labelKey] : rootName || data[labelKey];\n    var content = undefined;\n    var color = datum.fill || 'gray';\n\n    if (colorKey && colorName) {\n      var colorValue = data[colorKey];\n\n      if (typeof colorValue === 'number' && isFinite(colorValue)) {\n        content = \"<b>\" + colorName + \"</b>: \" + toFixed(data[colorKey]);\n      }\n    }\n\n    var defaults = {\n      title: title,\n      backgroundColor: color,\n      content: content\n    };\n\n    if (tooltipRenderer) {\n      return toTooltipHtml(tooltipRenderer({\n        datum: datum,\n        sizeKey: sizeKey,\n        labelKey: labelKey,\n        colorKey: colorKey,\n        title: title,\n        color: color\n      }), defaults);\n    }\n\n    return toTooltipHtml(defaults);\n  };\n\n  TreemapSeries.prototype.listSeriesItems = function (legendData) {};\n\n  TreemapSeries.className = 'TreemapSeries';\n  TreemapSeries.type = 'treemap';\n\n  __decorate([reactive('dataChange')], TreemapSeries.prototype, \"labelKey\", void 0);\n\n  __decorate([reactive('dataChange')], TreemapSeries.prototype, \"sizeKey\", void 0);\n\n  __decorate([reactive('dataChange')], TreemapSeries.prototype, \"colorKey\", void 0);\n\n  __decorate([reactive('dataChange')], TreemapSeries.prototype, \"colorDomain\", void 0);\n\n  __decorate([reactive('dataChange')], TreemapSeries.prototype, \"colorRange\", void 0);\n\n  __decorate([reactive('dataChange')], TreemapSeries.prototype, \"colorParents\", void 0);\n\n  __decorate([reactive('update')], TreemapSeries.prototype, \"gradient\", void 0);\n\n  return TreemapSeries;\n}(HierarchySeries);\n\nexport { TreemapSeries };","map":{"version":3,"sources":["/Users/julianneagresta/Projects/openlibrary-search-histogram/node_modules/ag-charts-community/dist/es6/chart/series/hierarchy/treemapSeries.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Selection","HdpiCanvas","reactive","Label","SeriesTooltip","HierarchySeries","toTooltipHtml","Group","Text","Rect","DropShadow","LinearScale","Treemap","hierarchy","toFixed","TreemapSeriesTooltip","_super","apply","TreemapSeriesLabel","_this","padding","TextNodeTag","TreemapSeries","call","groupSelection","select","pickGroup","selectAll","labelMap","Map","layout","title","label","color","fontWeight","fontSize","fontFamily","subtitle","labels","large","medium","small","_nodePadding","labelKey","sizeKey","colorKey","colorDomain","colorRange","colorParents","gradient","colorName","rootName","_shadow","shadow","xOffset","yOffset","tooltip","addEventListener","update","get","set","value","updateLayoutPadding","enumerable","configurable","onHighlightChange","updateNodes","_a","nodePadding","paddingRight","_","paddingBottom","paddingLeft","paddingTop","node","name","data","children","toUpperCase","font","depth","textSize","getTextSize","join","trim","innerNodeWidth","x1","x0","hasTitle","width","height","processData","dataRoot","sum","datum","colorScale","domain","range","series","traverse","root","colorValue","fill","convert","forEach","child","getLabelCenterX","getLabelCenterY","y0","y1","chart","seriesRect","getSeriesRect","size","descendants","updateGroups","setData","exit","remove","enterGroups","enter","append","each","tag","Name","Value","merge","highlightedDatum","highlightStyle","highlightFill","highlightStroke","stroke","_b","selectByClass","rect","highlighted","undefined","strokeWidth","crisp","x","y","selectByTag","text","index","isLeaf","innerNodeHeight","textBaseline","textAlign","textBBox","computeBBox","hasLabel","fillShadow","visible","fontStyle","isFinite","String","nameNode","isVisible","getDomain","direction","getTooltipHtml","tooltipRenderer","renderer","content","defaults","backgroundColor","listSeriesItems","legendData","className","type"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Selection } from \"../../../scene/selection\";\nimport { HdpiCanvas } from \"../../../canvas/hdpiCanvas\";\nimport { reactive } from \"../../../util/observable\";\nimport { Label } from \"../../label\";\nimport { SeriesTooltip } from \"../series\";\nimport { HierarchySeries } from \"./hierarchySeries\";\nimport { toTooltipHtml } from \"../../chart\";\nimport { Group } from \"../../../scene/group\";\nimport { Text } from \"../../../scene/shape/text\";\nimport { Rect } from \"../../../scene/shape/rect\";\nimport { DropShadow } from \"../../../scene/dropShadow\";\nimport { LinearScale } from \"../../../scale/linearScale\";\nimport { Treemap } from \"../../../layout/treemap\";\nimport { hierarchy } from \"../../../layout/hierarchy\";\nimport { toFixed } from \"../../../util/number\";\nvar TreemapSeriesTooltip = /** @class */ (function (_super) {\n    __extends(TreemapSeriesTooltip, _super);\n    function TreemapSeriesTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        reactive('change')\n    ], TreemapSeriesTooltip.prototype, \"renderer\", void 0);\n    return TreemapSeriesTooltip;\n}(SeriesTooltip));\nexport { TreemapSeriesTooltip };\nvar TreemapSeriesLabel = /** @class */ (function (_super) {\n    __extends(TreemapSeriesLabel, _super);\n    function TreemapSeriesLabel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.padding = 10;\n        return _this;\n    }\n    __decorate([\n        reactive('change')\n    ], TreemapSeriesLabel.prototype, \"padding\", void 0);\n    return TreemapSeriesLabel;\n}(Label));\nexport { TreemapSeriesLabel };\nvar TextNodeTag;\n(function (TextNodeTag) {\n    TextNodeTag[TextNodeTag[\"Name\"] = 0] = \"Name\";\n    TextNodeTag[TextNodeTag[\"Value\"] = 1] = \"Value\";\n})(TextNodeTag || (TextNodeTag = {}));\nvar TreemapSeries = /** @class */ (function (_super) {\n    __extends(TreemapSeries, _super);\n    function TreemapSeries() {\n        var _this = _super.call(this) || this;\n        _this.groupSelection = Selection.select(_this.pickGroup).selectAll();\n        _this.labelMap = new Map();\n        _this.layout = new Treemap();\n        _this.title = (function () {\n            var label = new TreemapSeriesLabel();\n            label.color = 'white';\n            label.fontWeight = 'bold';\n            label.fontSize = 12;\n            label.fontFamily = 'Verdana, sans-serif';\n            label.padding = 15;\n            return label;\n        })();\n        _this.subtitle = (function () {\n            var label = new TreemapSeriesLabel();\n            label.color = 'white';\n            label.fontSize = 9;\n            label.fontFamily = 'Verdana, sans-serif';\n            label.padding = 13;\n            return label;\n        })();\n        _this.labels = {\n            large: (function () {\n                var label = new Label();\n                label.color = 'white';\n                label.fontWeight = 'bold';\n                label.fontSize = 18;\n                return label;\n            })(),\n            medium: (function () {\n                var label = new Label();\n                label.color = 'white';\n                label.fontWeight = 'bold';\n                label.fontSize = 14;\n                return label;\n            })(),\n            small: (function () {\n                var label = new Label();\n                label.color = 'white';\n                label.fontWeight = 'bold';\n                label.fontSize = 10;\n                return label;\n            })(),\n            color: (function () {\n                var label = new Label();\n                label.color = 'white';\n                return label;\n            })()\n        };\n        _this._nodePadding = 2;\n        _this.labelKey = 'label';\n        _this.sizeKey = 'size';\n        _this.colorKey = 'color';\n        _this.colorDomain = [-5, 5];\n        _this.colorRange = ['#cb4b3f', '#6acb64'];\n        _this.colorParents = false;\n        _this.gradient = true;\n        _this.colorName = 'Change';\n        _this.rootName = 'Root';\n        _this._shadow = (function () {\n            var shadow = new DropShadow();\n            shadow.color = 'rgba(0, 0, 0, 0.4)';\n            shadow.xOffset = 1.5;\n            shadow.yOffset = 1.5;\n            return shadow;\n        })();\n        _this.tooltip = new TreemapSeriesTooltip();\n        _this.shadow.addEventListener('change', _this.update, _this);\n        _this.title.addEventListener('change', _this.update, _this);\n        _this.subtitle.addEventListener('change', _this.update, _this);\n        _this.labels.small.addEventListener('change', _this.update, _this);\n        _this.labels.medium.addEventListener('change', _this.update, _this);\n        _this.labels.large.addEventListener('change', _this.update, _this);\n        _this.labels.color.addEventListener('change', _this.update, _this);\n        return _this;\n    }\n    Object.defineProperty(TreemapSeries.prototype, \"nodePadding\", {\n        get: function () {\n            return this._nodePadding;\n        },\n        set: function (value) {\n            if (this._nodePadding !== value) {\n                this._nodePadding = value;\n                this.updateLayoutPadding();\n                this.update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TreemapSeries.prototype, \"shadow\", {\n        get: function () {\n            return this._shadow;\n        },\n        set: function (value) {\n            if (this._shadow !== value) {\n                this._shadow = value;\n                this.update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TreemapSeries.prototype.onHighlightChange = function () {\n        this.updateNodes();\n    };\n    TreemapSeries.prototype.updateLayoutPadding = function () {\n        var _a = this, title = _a.title, subtitle = _a.subtitle, nodePadding = _a.nodePadding, labelKey = _a.labelKey;\n        this.layout.paddingRight = function (_) { return nodePadding; };\n        this.layout.paddingBottom = function (_) { return nodePadding; };\n        this.layout.paddingLeft = function (_) { return nodePadding; };\n        this.layout.paddingTop = function (node) {\n            var name = node.data[labelKey] || '';\n            if (node.children) {\n                name = name.toUpperCase();\n            }\n            var font = node.depth > 1 ? subtitle : title;\n            var textSize = HdpiCanvas.getTextSize(name, [font.fontWeight, font.fontSize + 'px', font.fontFamily].join(' ').trim());\n            var innerNodeWidth = node.x1 - node.x0 - nodePadding * 2;\n            var hasTitle = node.depth > 0 && node.children && textSize.width <= innerNodeWidth;\n            node.hasTitle = hasTitle;\n            return hasTitle ? textSize.height + nodePadding * 2 : nodePadding;\n        };\n    };\n    TreemapSeries.prototype.processData = function () {\n        if (!this.data) {\n            return false;\n        }\n        var _a = this, data = _a.data, sizeKey = _a.sizeKey, labelKey = _a.labelKey, colorKey = _a.colorKey, colorDomain = _a.colorDomain, colorRange = _a.colorRange, colorParents = _a.colorParents;\n        var dataRoot;\n        if (sizeKey) {\n            dataRoot = hierarchy(data).sum(function (datum) { return datum.children ? 1 : datum[sizeKey]; });\n        }\n        else {\n            dataRoot = hierarchy(data).sum(function (datum) { return datum.children ? 0 : 1; });\n        }\n        this.dataRoot = dataRoot;\n        var colorScale = new LinearScale();\n        colorScale.domain = colorDomain;\n        colorScale.range = colorRange;\n        var series = this;\n        function traverse(root, depth) {\n            if (depth === void 0) { depth = 0; }\n            var children = root.children, data = root.data;\n            var label = data[labelKey];\n            var colorValue = colorKey ? data[colorKey] : depth;\n            root.series = series;\n            root.fill = !children || colorParents ? colorScale.convert(colorValue) : '#272931';\n            root.colorValue = colorValue;\n            if (label) {\n                root.label = children ? label.toUpperCase() : label;\n            }\n            else {\n                root.label = '';\n            }\n            if (children) {\n                children.forEach(function (child) { return traverse(child, depth + 1); });\n            }\n        }\n        traverse(this.dataRoot);\n        return true;\n    };\n    TreemapSeries.prototype.getLabelCenterX = function (datum) {\n        return (datum.x0 + datum.x1) / 2;\n    };\n    TreemapSeries.prototype.getLabelCenterY = function (datum) {\n        return (datum.y0 + datum.y1) / 2 + 2;\n    };\n    TreemapSeries.prototype.update = function () {\n        var _a = this, chart = _a.chart, dataRoot = _a.dataRoot;\n        if (!chart || !dataRoot) {\n            return;\n        }\n        var seriesRect = chart.getSeriesRect();\n        if (!seriesRect) {\n            return;\n        }\n        this.layout.size = [seriesRect.width, seriesRect.height];\n        this.updateLayoutPadding();\n        var descendants = this.layout.processData(dataRoot).descendants();\n        var updateGroups = this.groupSelection.setData(descendants);\n        updateGroups.exit.remove();\n        var enterGroups = updateGroups.enter.append(Group);\n        enterGroups.append(Rect);\n        enterGroups.append(Text).each(function (node) { return node.tag = TextNodeTag.Name; });\n        enterGroups.append(Text).each(function (node) { return node.tag = TextNodeTag.Value; });\n        this.groupSelection = updateGroups.merge(enterGroups);\n        this.updateNodes();\n    };\n    TreemapSeries.prototype.updateNodes = function () {\n        var _this = this;\n        var chart = this.chart;\n        if (!chart) {\n            return;\n        }\n        var highlightedDatum = chart.highlightedDatum;\n        var _a = this.highlightStyle, highlightFill = _a.fill, highlightStroke = _a.stroke;\n        var _b = this, colorKey = _b.colorKey, labelMap = _b.labelMap, nodePadding = _b.nodePadding, title = _b.title, subtitle = _b.subtitle, labels = _b.labels, shadow = _b.shadow, gradient = _b.gradient;\n        this.groupSelection.selectByClass(Rect).each(function (rect, datum) {\n            var highlighted = datum === highlightedDatum;\n            var fill = highlighted && highlightFill !== undefined\n                ? highlightFill\n                : datum.fill;\n            var stroke = highlighted && highlightStroke !== undefined\n                ? highlightStroke\n                : datum.depth < 2 ? undefined : 'black';\n            rect.fill = fill;\n            rect.stroke = stroke;\n            rect.strokeWidth = 1;\n            rect.crisp = true;\n            rect.gradient = gradient;\n            rect.x = datum.x0;\n            rect.y = datum.y0;\n            rect.width = datum.x1 - datum.x0;\n            rect.height = datum.y1 - datum.y0;\n        });\n        this.groupSelection.selectByTag(TextNodeTag.Name).each(function (text, datum, index) {\n            var isLeaf = !datum.children;\n            var innerNodeWidth = datum.x1 - datum.x0 - nodePadding * 2;\n            var innerNodeHeight = datum.y1 - datum.y0 - nodePadding * 2;\n            var hasTitle = datum.hasTitle;\n            var highlighted = datum === highlightedDatum;\n            var label;\n            if (isLeaf) {\n                if (innerNodeWidth > 40 && innerNodeHeight > 40) {\n                    label = labels.large;\n                }\n                else if (innerNodeWidth > 20 && innerNodeHeight > 20) {\n                    label = labels.medium;\n                }\n                else {\n                    label = labels.small;\n                }\n            }\n            else {\n                if (datum.depth > 1) {\n                    label = subtitle;\n                }\n                else {\n                    label = title;\n                }\n            }\n            text.fontWeight = label.fontWeight;\n            text.fontSize = label.fontSize;\n            text.fontFamily = label.fontFamily;\n            text.textBaseline = isLeaf ? 'bottom' : (hasTitle ? 'top' : 'middle');\n            text.textAlign = hasTitle ? 'left' : 'center';\n            text.text = datum.label;\n            var textBBox = text.computeBBox();\n            var hasLabel = isLeaf && !!textBBox\n                && textBBox.width <= innerNodeWidth\n                && textBBox.height * 2 + 8 <= innerNodeHeight;\n            labelMap.set(index, text);\n            text.fill = highlighted ? 'black' : label.color;\n            text.fillShadow = hasLabel && !highlighted ? shadow : undefined;\n            text.visible = hasTitle || hasLabel;\n            if (hasTitle) {\n                text.x = datum.x0 + nodePadding;\n                text.y = datum.y0 + nodePadding;\n            }\n            else {\n                text.x = _this.getLabelCenterX(datum);\n                text.y = _this.getLabelCenterY(datum);\n            }\n        });\n        this.groupSelection.selectByTag(TextNodeTag.Value).each(function (text, datum, index) {\n            var isLeaf = !datum.children;\n            var innerNodeWidth = datum.x1 - datum.x0 - nodePadding * 2;\n            var highlighted = datum === highlightedDatum;\n            var value = datum.colorValue;\n            var label = labels.color;\n            text.fontSize = label.fontSize;\n            text.fontFamily = label.fontFamily;\n            text.fontStyle = label.fontStyle;\n            text.fontWeight = label.fontWeight;\n            text.textBaseline = 'top';\n            text.textAlign = 'center';\n            text.text = typeof value === 'number' && isFinite(value)\n                ? String(toFixed(datum.colorValue)) + '%'\n                : '';\n            var textBBox = text.computeBBox();\n            var nameNode = labelMap.get(index);\n            var hasLabel = !!nameNode && nameNode.visible;\n            var isVisible = isLeaf && !!colorKey && hasLabel && !!textBBox && textBBox.width < innerNodeWidth;\n            text.fill = highlighted ? 'black' : label.color;\n            text.fillShadow = highlighted ? undefined : shadow;\n            text.visible = isVisible;\n            if (isVisible) {\n                text.x = _this.getLabelCenterX(datum);\n                text.y = _this.getLabelCenterY(datum);\n            }\n            else {\n                if (nameNode && !(datum.children && datum.children.length)) {\n                    nameNode.textBaseline = 'middle';\n                    nameNode.y = _this.getLabelCenterY(datum);\n                }\n            }\n        });\n    };\n    TreemapSeries.prototype.getDomain = function (direction) {\n        return [0, 1];\n    };\n    TreemapSeries.prototype.getTooltipHtml = function (datum) {\n        var _a = this, tooltip = _a.tooltip, sizeKey = _a.sizeKey, labelKey = _a.labelKey, colorKey = _a.colorKey, colorName = _a.colorName, rootName = _a.rootName;\n        var data = datum.data;\n        var tooltipRenderer = tooltip.renderer;\n        var title = datum.depth ? data[labelKey] : (rootName || data[labelKey]);\n        var content = undefined;\n        var color = datum.fill || 'gray';\n        if (colorKey && colorName) {\n            var colorValue = data[colorKey];\n            if (typeof colorValue === 'number' && isFinite(colorValue)) {\n                content = \"<b>\" + colorName + \"</b>: \" + toFixed(data[colorKey]);\n            }\n        }\n        var defaults = {\n            title: title,\n            backgroundColor: color,\n            content: content\n        };\n        if (tooltipRenderer) {\n            return toTooltipHtml(tooltipRenderer({\n                datum: datum,\n                sizeKey: sizeKey,\n                labelKey: labelKey,\n                colorKey: colorKey,\n                title: title,\n                color: color\n            }), defaults);\n        }\n        return toTooltipHtml(defaults);\n    };\n    TreemapSeries.prototype.listSeriesItems = function (legendData) {\n    };\n    TreemapSeries.className = 'TreemapSeries';\n    TreemapSeries.type = 'treemap';\n    __decorate([\n        reactive('dataChange')\n    ], TreemapSeries.prototype, \"labelKey\", void 0);\n    __decorate([\n        reactive('dataChange')\n    ], TreemapSeries.prototype, \"sizeKey\", void 0);\n    __decorate([\n        reactive('dataChange')\n    ], TreemapSeries.prototype, \"colorKey\", void 0);\n    __decorate([\n        reactive('dataChange')\n    ], TreemapSeries.prototype, \"colorDomain\", void 0);\n    __decorate([\n        reactive('dataChange')\n    ], TreemapSeries.prototype, \"colorRange\", void 0);\n    __decorate([\n        reactive('dataChange')\n    ], TreemapSeries.prototype, \"colorParents\", void 0);\n    __decorate([\n        reactive('update')\n    ], TreemapSeries.prototype, \"gradient\", void 0);\n    return TreemapSeries;\n}(HierarchySeries));\nexport { TreemapSeries };\n"]},"metadata":{},"sourceType":"module"}