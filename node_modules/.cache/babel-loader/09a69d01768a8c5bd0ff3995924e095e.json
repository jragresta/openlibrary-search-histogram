{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {\n    s += arguments[i].length;\n  }\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) {\n    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {\n      r[k] = a[j];\n    }\n  }\n\n  return r;\n};\n\nimport { Group } from \"../../../scene/group\";\nimport { Selection } from \"../../../scene/selection\";\nimport { Rect } from \"../../../scene/shape/rect\";\nimport { Text } from \"../../../scene/shape/text\";\nimport { SeriesTooltip } from \"../series\";\nimport { Label } from \"../../label\";\nimport { PointerEvents } from \"../../../scene/node\";\nimport { CartesianSeries } from \"./cartesianSeries\";\nimport { ChartAxisDirection } from \"../../chartAxis\";\nimport { toTooltipHtml } from \"../../chart\";\nimport { numericExtent, finiteExtent } from \"../../../util/array\";\nimport { reactive } from \"../../../util/observable\";\nimport ticks, { tickStep } from \"../../../util/ticks\";\nimport { sanitizeHtml } from \"../../../util/sanitize\";\nvar HistogramSeriesNodeTag;\n\n(function (HistogramSeriesNodeTag) {\n  HistogramSeriesNodeTag[HistogramSeriesNodeTag[\"Bin\"] = 0] = \"Bin\";\n  HistogramSeriesNodeTag[HistogramSeriesNodeTag[\"Label\"] = 1] = \"Label\";\n})(HistogramSeriesNodeTag || (HistogramSeriesNodeTag = {}));\n\nvar HistogramSeriesLabel = function (_super) {\n  __extends(HistogramSeriesLabel, _super);\n\n  function HistogramSeriesLabel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([reactive('change')], HistogramSeriesLabel.prototype, \"formatter\", void 0);\n\n  return HistogramSeriesLabel;\n}(Label);\n\nvar defaultBinCount = 10;\nvar aggregationFunctions = {\n  count: function count(bin) {\n    return bin.data.length;\n  },\n  sum: function sum(bin, yKey) {\n    return bin.data.reduce(function (acc, datum) {\n      return acc + datum[yKey];\n    }, 0);\n  },\n  mean: function mean(bin, yKey) {\n    return aggregationFunctions.sum(bin, yKey) / aggregationFunctions.count(bin, yKey);\n  }\n};\n\nvar HistogramBin = function () {\n  function HistogramBin(_a) {\n    var domainMin = _a[0],\n        domainMax = _a[1];\n    this.data = [];\n    this.aggregatedValue = 0;\n    this.frequency = 0;\n    this.domain = [domainMin, domainMax];\n  }\n\n  ;\n\n  HistogramBin.prototype.addDatum = function (datum) {\n    this.data.push(datum);\n    this.frequency++;\n  };\n\n  Object.defineProperty(HistogramBin.prototype, \"domainWidth\", {\n    get: function get() {\n      var _a = this.domain,\n          domainMin = _a[0],\n          domainMax = _a[1];\n      return domainMax - domainMin;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(HistogramBin.prototype, \"relativeHeight\", {\n    get: function get() {\n      return this.aggregatedValue / this.domainWidth;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  HistogramBin.prototype.calculateAggregatedValue = function (aggregationName, yKey) {\n    if (!yKey) {\n      // not having a yKey forces us into a frequency plot\n      aggregationName = 'count';\n    }\n\n    var aggregationFunction = aggregationFunctions[aggregationName];\n    this.aggregatedValue = aggregationFunction(this, yKey);\n  };\n\n  HistogramBin.prototype.getY = function (areaPlot) {\n    return areaPlot ? this.relativeHeight : this.aggregatedValue;\n  };\n\n  return HistogramBin;\n}();\n\nexport { HistogramBin };\n\nvar HistogramSeriesTooltip = function (_super) {\n  __extends(HistogramSeriesTooltip, _super);\n\n  function HistogramSeriesTooltip() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([reactive('change')], HistogramSeriesTooltip.prototype, \"renderer\", void 0);\n\n  return HistogramSeriesTooltip;\n}(SeriesTooltip);\n\nexport { HistogramSeriesTooltip };\n\nvar HistogramSeries = function (_super) {\n  __extends(HistogramSeries, _super);\n\n  function HistogramSeries() {\n    var _a;\n\n    var _this = _super.call(this) || this; // Need to put column and label nodes into separate groups, because even though label nodes are\n    // created after the column nodes, this only guarantees that labels will always be on top of columns\n    // on the first run. If on the next run more columns are added, they might clip the labels\n    // rendered during the previous run.\n\n\n    _this.rectGroup = _this.pickGroup.appendChild(new Group());\n    _this.textGroup = _this.group.appendChild(new Group());\n    _this.rectSelection = Selection.select(_this.rectGroup).selectAll();\n    _this.textSelection = Selection.select(_this.textGroup).selectAll();\n    _this.binnedData = [];\n    _this.xDomain = [];\n    _this.yDomain = [];\n    _this.label = new HistogramSeriesLabel();\n    _this.seriesItemEnabled = true;\n    _this.tooltip = new HistogramSeriesTooltip();\n    _this.fill = undefined;\n    _this.stroke = undefined;\n    _this.fillOpacity = 1;\n    _this.strokeOpacity = 1;\n    _this.lineDash = undefined;\n    _this.lineDashOffset = 0;\n    _this.directionKeys = (_a = {}, _a[ChartAxisDirection.X] = ['xKey'], _a[ChartAxisDirection.Y] = ['yKey'], _a);\n    _this._xKey = '';\n    _this._areaPlot = false;\n    _this._bins = undefined;\n    _this._aggregation = 'count';\n    _this._binCount = undefined;\n    _this._xName = '';\n    _this._yKey = '';\n    _this._yName = '';\n    _this._strokeWidth = 1;\n    _this.label.enabled = false;\n\n    _this.label.addEventListener('change', _this.update, _this);\n\n    return _this;\n  }\n\n  HistogramSeries.prototype.getKeys = function (direction) {\n    var _this = this;\n\n    var directionKeys = this.directionKeys;\n    var keys = directionKeys && directionKeys[direction];\n    var values = [];\n\n    if (keys) {\n      keys.forEach(function (key) {\n        var value = _this[key];\n\n        if (value) {\n          if (Array.isArray(value)) {\n            values.push.apply(values, value);\n          } else {\n            values.push(value);\n          }\n        }\n      });\n    }\n\n    return values;\n  };\n\n  Object.defineProperty(HistogramSeries.prototype, \"xKey\", {\n    get: function get() {\n      return this._xKey;\n    },\n    set: function set(value) {\n      if (this._xKey !== value) {\n        this._xKey = value;\n        this.scheduleData();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(HistogramSeries.prototype, \"areaPlot\", {\n    get: function get() {\n      return this._areaPlot;\n    },\n    set: function set(c) {\n      this._areaPlot = c;\n      this.scheduleData();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(HistogramSeries.prototype, \"bins\", {\n    get: function get() {\n      return this._bins;\n    },\n    set: function set(bins) {\n      this._bins = bins;\n      this.scheduleData();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(HistogramSeries.prototype, \"aggregation\", {\n    get: function get() {\n      return this._aggregation;\n    },\n    set: function set(aggregation) {\n      this._aggregation = aggregation;\n      this.scheduleData();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(HistogramSeries.prototype, \"binCount\", {\n    get: function get() {\n      return this._binCount;\n    },\n    set: function set(binCount) {\n      this._binCount = binCount;\n      this.scheduleData();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(HistogramSeries.prototype, \"xName\", {\n    get: function get() {\n      return this._xName;\n    },\n    set: function set(value) {\n      if (this._xName !== value) {\n        this._xName = value;\n        this.update();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(HistogramSeries.prototype, \"yKey\", {\n    get: function get() {\n      return this._yKey;\n    },\n    set: function set(yKey) {\n      this._yKey = yKey;\n      this.seriesItemEnabled = true;\n      this.scheduleData();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(HistogramSeries.prototype, \"yName\", {\n    get: function get() {\n      return this._yName;\n    },\n    set: function set(values) {\n      this._yName = values;\n      this.scheduleData();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(HistogramSeries.prototype, \"strokeWidth\", {\n    get: function get() {\n      return this._strokeWidth;\n    },\n    set: function set(value) {\n      if (this._strokeWidth !== value) {\n        this._strokeWidth = value;\n        this.update();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(HistogramSeries.prototype, \"shadow\", {\n    get: function get() {\n      return this._shadow;\n    },\n    set: function set(value) {\n      if (this._shadow !== value) {\n        this._shadow = value;\n        this.update();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  HistogramSeries.prototype.onHighlightChange = function () {\n    this.updateRectNodes();\n  };\n\n  HistogramSeries.prototype.setColors = function (fills, strokes) {\n    this.fill = fills[0];\n    this.stroke = strokes[0];\n  }; // During processData phase, used to unify different ways of the user specifying\n  // the bins. Returns bins in format[[min1, max1], [min2, max2], ... ].\n\n\n  HistogramSeries.prototype.deriveBins = function () {\n    var _this = this;\n\n    var _a = this,\n        bins = _a.bins,\n        binCount = _a.binCount;\n\n    if (!this.data) {\n      return [];\n    }\n\n    if (bins) {\n      return bins;\n    }\n\n    var xData = this.data.map(function (datum) {\n      return datum[_this.xKey];\n    });\n    var xDomain = this.fixNumericExtent(finiteExtent(xData), 'x');\n    var binStarts = ticks(xDomain[0], xDomain[1], this.binCount || defaultBinCount);\n    var binSize = tickStep(xDomain[0], xDomain[1], this.binCount || defaultBinCount);\n    var firstBinEnd = binStarts[0];\n\n    var expandStartToBin = function expandStartToBin(n) {\n      return [n, n + binSize];\n    };\n\n    return __spreadArrays([[firstBinEnd - binSize, firstBinEnd]], binStarts.map(expandStartToBin));\n  };\n\n  HistogramSeries.prototype.placeDataInBins = function (data) {\n    var _this = this;\n\n    var xKey = this.xKey;\n    var derivedBins = this.deriveBins(); // creating a sorted copy allows binning in O(n) rather than O(n²)\n    // but at the expense of more temporary memory\n\n    var sortedData = data.slice().sort(function (a, b) {\n      if (a[xKey] < b[xKey]) {\n        return -1;\n      }\n\n      if (a[xKey] > b[xKey]) {\n        return 1;\n      }\n\n      return 0;\n    });\n    var currentBin = 0;\n    var bins = [new HistogramBin(derivedBins[0])];\n\n    loop: for (var i = 0, ln = sortedData.length; i < ln; i++) {\n      var datum = sortedData[i];\n\n      while (datum[xKey] > derivedBins[currentBin][1]) {\n        currentBin++;\n        var bin = derivedBins[currentBin];\n\n        if (!bin) {\n          break loop;\n        }\n\n        bins.push(new HistogramBin(bin));\n      }\n\n      bins[currentBin].addDatum(datum);\n    }\n\n    bins.forEach(function (b) {\n      return b.calculateAggregatedValue(_this._aggregation, _this.yKey);\n    });\n    return bins;\n  };\n\n  Object.defineProperty(HistogramSeries.prototype, \"xMax\", {\n    get: function get() {\n      var _this = this;\n\n      return this.data && this.data.reduce(function (acc, datum) {\n        return Math.max(acc, datum[_this.xKey]);\n      }, Number.NEGATIVE_INFINITY);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  HistogramSeries.prototype.processData = function () {\n    var _this = this;\n\n    var _a = this,\n        xKey = _a.xKey,\n        data = _a.data;\n\n    this.binnedData = this.placeDataInBins(xKey && data ? data : []);\n    var yData = this.binnedData.map(function (b) {\n      return b.getY(_this.areaPlot);\n    });\n    var yMinMax = numericExtent(yData);\n    this.yDomain = this.fixNumericExtent([0, yMinMax ? yMinMax[1] : 1], 'y');\n    var firstBin = this.binnedData[0];\n    var lastBin = this.binnedData[this.binnedData.length - 1];\n    var xMin = firstBin.domain[0];\n    var xMax = lastBin.domain[1];\n    this.xDomain = [xMin, xMax];\n    this.fireEvent({\n      type: 'dataProcessed'\n    });\n    return true;\n  };\n\n  HistogramSeries.prototype.getDomain = function (direction) {\n    if (direction === ChartAxisDirection.X) {\n      return this.xDomain;\n    } else {\n      return this.yDomain;\n    }\n  };\n\n  HistogramSeries.prototype.fireNodeClickEvent = function (event, datum) {\n    this.fireEvent({\n      type: 'nodeClick',\n      event: event,\n      series: this,\n      datum: datum.seriesDatum,\n      xKey: this.xKey\n    });\n  };\n\n  HistogramSeries.prototype.update = function () {\n    var _a = this,\n        visible = _a.visible,\n        chart = _a.chart,\n        xAxis = _a.xAxis,\n        yAxis = _a.yAxis;\n\n    this.group.visible = visible;\n\n    if (!xAxis || !yAxis || !visible || !chart || chart.layoutPending || chart.dataPending) {\n      return;\n    }\n\n    var nodeData = this.generateNodeData();\n    this.updateRectSelection(nodeData);\n    this.updateRectNodes();\n    this.updateTextSelection(nodeData);\n    this.updateTextNodes();\n  };\n\n  HistogramSeries.prototype.generateNodeData = function () {\n    var _this = this;\n\n    if (!this.seriesItemEnabled) {\n      return [];\n    }\n\n    var _a = this,\n        xScale = _a.xAxis.scale,\n        yScale = _a.yAxis.scale,\n        fill = _a.fill,\n        stroke = _a.stroke,\n        strokeWidth = _a.strokeWidth;\n\n    var nodeData = [];\n\n    var defaultLabelFormatter = function defaultLabelFormatter(params) {\n      return String(params.value);\n    };\n\n    var _b = this.label,\n        _c = _b.formatter,\n        labelFormatter = _c === void 0 ? defaultLabelFormatter : _c,\n        labelFontStyle = _b.fontStyle,\n        labelFontWeight = _b.fontWeight,\n        labelFontSize = _b.fontSize,\n        labelFontFamily = _b.fontFamily,\n        labelColor = _b.color;\n    this.binnedData.forEach(function (binOfData) {\n      var total = binOfData.aggregatedValue,\n          frequency = binOfData.frequency,\n          _a = binOfData.domain,\n          xDomainMin = _a[0],\n          xDomainMax = _a[1],\n          relativeHeight = binOfData.relativeHeight;\n      var xMinPx = xScale.convert(xDomainMin),\n          xMaxPx = xScale.convert(xDomainMax),\n          // note: assuming can't be negative:\n      y = _this.areaPlot ? relativeHeight : _this.yKey ? total : frequency,\n          yZeroPx = yScale.convert(0),\n          yMaxPx = yScale.convert(y),\n          w = xMaxPx - xMinPx,\n          h = Math.abs(yMaxPx - yZeroPx);\n      var selectionDatumLabel = y !== 0 ? {\n        text: labelFormatter({\n          value: binOfData.aggregatedValue\n        }),\n        fontStyle: labelFontStyle,\n        fontWeight: labelFontWeight,\n        fontSize: labelFontSize,\n        fontFamily: labelFontFamily,\n        fill: labelColor,\n        x: xMinPx + w / 2,\n        y: yMaxPx + h / 2\n      } : undefined;\n      nodeData.push({\n        series: _this,\n        seriesDatum: binOfData,\n        // since each selection is an aggregation of multiple data.\n        x: xMinPx,\n        y: yMaxPx,\n        width: w,\n        height: h,\n        fill: fill,\n        stroke: stroke,\n        strokeWidth: strokeWidth,\n        label: selectionDatumLabel\n      });\n    });\n    return nodeData;\n  };\n\n  HistogramSeries.prototype.updateRectSelection = function (nodeData) {\n    var updateRects = this.rectSelection.setData(nodeData);\n    updateRects.exit.remove();\n    var enterRects = updateRects.enter.append(Rect).each(function (rect) {\n      rect.tag = HistogramSeriesNodeTag.Bin;\n      rect.crisp = true;\n    });\n    this.rectSelection = updateRects.merge(enterRects);\n  };\n\n  HistogramSeries.prototype.updateRectNodes = function () {\n    var _this = this;\n\n    if (!this.chart) {\n      return;\n    }\n\n    var highlightedDatum = this.chart.highlightedDatum;\n\n    var _a = this,\n        fillOpacity = _a.fillOpacity,\n        strokeOpacity = _a.strokeOpacity,\n        shadow = _a.shadow,\n        _b = _a.highlightStyle,\n        fill = _b.fill,\n        stroke = _b.stroke;\n\n    this.rectSelection.each(function (rect, datum) {\n      var highlighted = datum === highlightedDatum;\n      rect.x = datum.x;\n      rect.y = datum.y;\n      rect.width = datum.width;\n      rect.height = datum.height;\n      rect.fill = highlighted && fill !== undefined ? fill : datum.fill;\n      rect.stroke = highlighted && stroke !== undefined ? stroke : datum.stroke;\n      rect.fillOpacity = fillOpacity;\n      rect.strokeOpacity = strokeOpacity;\n      rect.strokeWidth = datum.strokeWidth;\n      rect.lineDash = _this.lineDash;\n      rect.lineDashOffset = _this.lineDashOffset;\n      rect.fillShadow = shadow;\n      rect.visible = datum.height > 0; // prevent stroke from rendering for zero height columns\n    });\n  };\n\n  HistogramSeries.prototype.updateTextSelection = function (nodeData) {\n    var updateTexts = this.textSelection.setData(nodeData);\n    updateTexts.exit.remove();\n    var enterTexts = updateTexts.enter.append(Text).each(function (text) {\n      text.tag = HistogramSeriesNodeTag.Label;\n      text.pointerEvents = PointerEvents.None;\n      text.textAlign = 'center';\n      text.textBaseline = 'middle';\n    });\n    this.textSelection = updateTexts.merge(enterTexts);\n  };\n\n  HistogramSeries.prototype.updateTextNodes = function () {\n    var labelEnabled = this.label.enabled;\n    this.textSelection.each(function (text, datum) {\n      var label = datum.label;\n\n      if (label && labelEnabled) {\n        text.text = label.text;\n        text.x = label.x;\n        text.y = label.y;\n        text.fontStyle = label.fontStyle;\n        text.fontWeight = label.fontWeight;\n        text.fontSize = label.fontSize;\n        text.fontFamily = label.fontFamily;\n        text.fill = label.fill;\n        text.visible = true;\n      } else {\n        text.visible = false;\n      }\n    });\n  };\n\n  HistogramSeries.prototype.getTooltipHtml = function (nodeDatum) {\n    var _a = this,\n        xKey = _a.xKey,\n        yKey = _a.yKey,\n        xAxis = _a.xAxis,\n        yAxis = _a.yAxis;\n\n    if (!xKey) {\n      return '';\n    }\n\n    var _b = this,\n        xName = _b.xName,\n        yName = _b.yName,\n        color = _b.fill,\n        tooltip = _b.tooltip,\n        aggregation = _b.aggregation;\n\n    var tooltipRenderer = tooltip.renderer;\n    var bin = nodeDatum.seriesDatum;\n    var aggregatedValue = bin.aggregatedValue,\n        frequency = bin.frequency,\n        _c = bin.domain,\n        rangeMin = _c[0],\n        rangeMax = _c[1];\n    var title = sanitizeHtml(xName || xKey) + \": \" + xAxis.formatDatum(rangeMin) + \" - \" + xAxis.formatDatum(rangeMax);\n    var content = yKey ? \"<b>\" + sanitizeHtml(yName || yKey) + \" (\" + aggregation + \")</b>: \" + yAxis.formatDatum(aggregatedValue) + \"<br>\" : '';\n    content += \"<b>Frequency</b>: \" + frequency;\n    var defaults = {\n      title: title,\n      backgroundColor: color,\n      content: content\n    };\n\n    if (tooltipRenderer) {\n      return toTooltipHtml(tooltipRenderer({\n        datum: bin,\n        xKey: xKey,\n        xValue: bin.domain,\n        xName: xName,\n        yKey: yKey,\n        yValue: bin.aggregatedValue,\n        yName: yName,\n        color: color\n      }), defaults);\n    }\n\n    return toTooltipHtml(defaults);\n  };\n\n  HistogramSeries.prototype.listSeriesItems = function (legendData) {\n    var _a = this,\n        id = _a.id,\n        data = _a.data,\n        yKey = _a.yKey,\n        yName = _a.yName,\n        seriesItemEnabled = _a.seriesItemEnabled,\n        fill = _a.fill,\n        stroke = _a.stroke,\n        fillOpacity = _a.fillOpacity,\n        strokeOpacity = _a.strokeOpacity;\n\n    if (data && data.length) {\n      legendData.push({\n        id: id,\n        itemId: yKey,\n        enabled: seriesItemEnabled,\n        label: {\n          text: yName || yKey || 'Frequency'\n        },\n        marker: {\n          fill: fill || 'rgba(0, 0, 0, 0)',\n          stroke: stroke || 'rgba(0, 0, 0, 0)',\n          fillOpacity: fillOpacity,\n          strokeOpacity: strokeOpacity\n        }\n      });\n    }\n  };\n\n  HistogramSeries.prototype.toggleSeriesItem = function (itemId, enabled) {\n    if (itemId === this.yKey) {\n      this.seriesItemEnabled = enabled;\n    }\n\n    this.scheduleData();\n  };\n\n  HistogramSeries.className = 'HistogramSeries';\n  HistogramSeries.type = 'histogram';\n\n  __decorate([reactive('dataChange')], HistogramSeries.prototype, \"fill\", void 0);\n\n  __decorate([reactive('dataChange')], HistogramSeries.prototype, \"stroke\", void 0);\n\n  __decorate([reactive('layoutChange')], HistogramSeries.prototype, \"fillOpacity\", void 0);\n\n  __decorate([reactive('layoutChange')], HistogramSeries.prototype, \"strokeOpacity\", void 0);\n\n  __decorate([reactive('update')], HistogramSeries.prototype, \"lineDash\", void 0);\n\n  __decorate([reactive('update')], HistogramSeries.prototype, \"lineDashOffset\", void 0);\n\n  return HistogramSeries;\n}(CartesianSeries);\n\nexport { HistogramSeries };","map":{"version":3,"sources":["/Users/julianneagresta/Projects/openlibrary-search-histogram/node_modules/ag-charts-community/dist/es6/chart/series/cartesian/histogramSeries.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__spreadArrays","s","il","k","a","j","jl","Group","Selection","Rect","Text","SeriesTooltip","Label","PointerEvents","CartesianSeries","ChartAxisDirection","toTooltipHtml","numericExtent","finiteExtent","reactive","ticks","tickStep","sanitizeHtml","HistogramSeriesNodeTag","HistogramSeriesLabel","_super","apply","defaultBinCount","aggregationFunctions","count","bin","data","sum","yKey","reduce","acc","datum","mean","HistogramBin","_a","domainMin","domainMax","aggregatedValue","frequency","domain","addDatum","push","get","enumerable","configurable","domainWidth","calculateAggregatedValue","aggregationName","aggregationFunction","getY","areaPlot","relativeHeight","HistogramSeriesTooltip","HistogramSeries","_this","call","rectGroup","pickGroup","appendChild","textGroup","group","rectSelection","select","selectAll","textSelection","binnedData","xDomain","yDomain","label","seriesItemEnabled","tooltip","fill","undefined","stroke","fillOpacity","strokeOpacity","lineDash","lineDashOffset","directionKeys","X","Y","_xKey","_areaPlot","_bins","_aggregation","_binCount","_xName","_yKey","_yName","_strokeWidth","enabled","addEventListener","update","getKeys","direction","keys","values","forEach","value","isArray","set","scheduleData","bins","aggregation","binCount","_shadow","onHighlightChange","updateRectNodes","setColors","fills","strokes","deriveBins","xData","map","xKey","fixNumericExtent","binStarts","binSize","firstBinEnd","expandStartToBin","n","placeDataInBins","derivedBins","sortedData","slice","sort","currentBin","loop","ln","Math","max","Number","NEGATIVE_INFINITY","processData","yData","yMinMax","firstBin","lastBin","xMin","xMax","fireEvent","type","getDomain","fireNodeClickEvent","event","series","seriesDatum","visible","chart","xAxis","yAxis","layoutPending","dataPending","nodeData","generateNodeData","updateRectSelection","updateTextSelection","updateTextNodes","xScale","scale","yScale","strokeWidth","defaultLabelFormatter","params","String","_b","_c","formatter","labelFormatter","labelFontStyle","fontStyle","labelFontWeight","fontWeight","labelFontSize","fontSize","labelFontFamily","fontFamily","labelColor","color","binOfData","total","xDomainMin","xDomainMax","xMinPx","convert","xMaxPx","y","yZeroPx","yMaxPx","w","h","abs","selectionDatumLabel","text","x","width","height","updateRects","setData","exit","remove","enterRects","enter","append","each","rect","tag","Bin","crisp","merge","highlightedDatum","shadow","highlightStyle","highlighted","fillShadow","updateTexts","enterTexts","pointerEvents","None","textAlign","textBaseline","labelEnabled","getTooltipHtml","nodeDatum","xName","yName","tooltipRenderer","renderer","rangeMin","rangeMax","title","formatDatum","content","defaults","backgroundColor","xValue","yValue","listSeriesItems","legendData","id","itemId","marker","toggleSeriesItem","className"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { Group } from \"../../../scene/group\";\nimport { Selection } from \"../../../scene/selection\";\nimport { Rect } from \"../../../scene/shape/rect\";\nimport { Text } from \"../../../scene/shape/text\";\nimport { SeriesTooltip } from \"../series\";\nimport { Label } from \"../../label\";\nimport { PointerEvents } from \"../../../scene/node\";\nimport { CartesianSeries } from \"./cartesianSeries\";\nimport { ChartAxisDirection } from \"../../chartAxis\";\nimport { toTooltipHtml } from \"../../chart\";\nimport { numericExtent, finiteExtent } from \"../../../util/array\";\nimport { reactive } from \"../../../util/observable\";\nimport ticks, { tickStep } from \"../../../util/ticks\";\nimport { sanitizeHtml } from \"../../../util/sanitize\";\nvar HistogramSeriesNodeTag;\n(function (HistogramSeriesNodeTag) {\n    HistogramSeriesNodeTag[HistogramSeriesNodeTag[\"Bin\"] = 0] = \"Bin\";\n    HistogramSeriesNodeTag[HistogramSeriesNodeTag[\"Label\"] = 1] = \"Label\";\n})(HistogramSeriesNodeTag || (HistogramSeriesNodeTag = {}));\nvar HistogramSeriesLabel = /** @class */ (function (_super) {\n    __extends(HistogramSeriesLabel, _super);\n    function HistogramSeriesLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        reactive('change')\n    ], HistogramSeriesLabel.prototype, \"formatter\", void 0);\n    return HistogramSeriesLabel;\n}(Label));\nvar defaultBinCount = 10;\nvar aggregationFunctions = {\n    count: function (bin) { return bin.data.length; },\n    sum: function (bin, yKey) { return bin.data.reduce(function (acc, datum) { return acc + datum[yKey]; }, 0); },\n    mean: function (bin, yKey) { return aggregationFunctions.sum(bin, yKey) / aggregationFunctions.count(bin, yKey); }\n};\nvar HistogramBin = /** @class */ (function () {\n    function HistogramBin(_a) {\n        var domainMin = _a[0], domainMax = _a[1];\n        this.data = [];\n        this.aggregatedValue = 0;\n        this.frequency = 0;\n        this.domain = [domainMin, domainMax];\n    }\n    ;\n    HistogramBin.prototype.addDatum = function (datum) {\n        this.data.push(datum);\n        this.frequency++;\n    };\n    Object.defineProperty(HistogramBin.prototype, \"domainWidth\", {\n        get: function () {\n            var _a = this.domain, domainMin = _a[0], domainMax = _a[1];\n            return domainMax - domainMin;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HistogramBin.prototype, \"relativeHeight\", {\n        get: function () {\n            return this.aggregatedValue / this.domainWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    HistogramBin.prototype.calculateAggregatedValue = function (aggregationName, yKey) {\n        if (!yKey) {\n            // not having a yKey forces us into a frequency plot\n            aggregationName = 'count';\n        }\n        var aggregationFunction = aggregationFunctions[aggregationName];\n        this.aggregatedValue = aggregationFunction(this, yKey);\n    };\n    HistogramBin.prototype.getY = function (areaPlot) {\n        return areaPlot ? this.relativeHeight : this.aggregatedValue;\n    };\n    return HistogramBin;\n}());\nexport { HistogramBin };\nvar HistogramSeriesTooltip = /** @class */ (function (_super) {\n    __extends(HistogramSeriesTooltip, _super);\n    function HistogramSeriesTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        reactive('change')\n    ], HistogramSeriesTooltip.prototype, \"renderer\", void 0);\n    return HistogramSeriesTooltip;\n}(SeriesTooltip));\nexport { HistogramSeriesTooltip };\nvar HistogramSeries = /** @class */ (function (_super) {\n    __extends(HistogramSeries, _super);\n    function HistogramSeries() {\n        var _a;\n        var _this = _super.call(this) || this;\n        // Need to put column and label nodes into separate groups, because even though label nodes are\n        // created after the column nodes, this only guarantees that labels will always be on top of columns\n        // on the first run. If on the next run more columns are added, they might clip the labels\n        // rendered during the previous run.\n        _this.rectGroup = _this.pickGroup.appendChild(new Group());\n        _this.textGroup = _this.group.appendChild(new Group());\n        _this.rectSelection = Selection.select(_this.rectGroup).selectAll();\n        _this.textSelection = Selection.select(_this.textGroup).selectAll();\n        _this.binnedData = [];\n        _this.xDomain = [];\n        _this.yDomain = [];\n        _this.label = new HistogramSeriesLabel();\n        _this.seriesItemEnabled = true;\n        _this.tooltip = new HistogramSeriesTooltip();\n        _this.fill = undefined;\n        _this.stroke = undefined;\n        _this.fillOpacity = 1;\n        _this.strokeOpacity = 1;\n        _this.lineDash = undefined;\n        _this.lineDashOffset = 0;\n        _this.directionKeys = (_a = {},\n            _a[ChartAxisDirection.X] = ['xKey'],\n            _a[ChartAxisDirection.Y] = ['yKey'],\n            _a);\n        _this._xKey = '';\n        _this._areaPlot = false;\n        _this._bins = undefined;\n        _this._aggregation = 'count';\n        _this._binCount = undefined;\n        _this._xName = '';\n        _this._yKey = '';\n        _this._yName = '';\n        _this._strokeWidth = 1;\n        _this.label.enabled = false;\n        _this.label.addEventListener('change', _this.update, _this);\n        return _this;\n    }\n    HistogramSeries.prototype.getKeys = function (direction) {\n        var _this = this;\n        var directionKeys = this.directionKeys;\n        var keys = directionKeys && directionKeys[direction];\n        var values = [];\n        if (keys) {\n            keys.forEach(function (key) {\n                var value = _this[key];\n                if (value) {\n                    if (Array.isArray(value)) {\n                        values.push.apply(values, value);\n                    }\n                    else {\n                        values.push(value);\n                    }\n                }\n            });\n        }\n        return values;\n    };\n    Object.defineProperty(HistogramSeries.prototype, \"xKey\", {\n        get: function () {\n            return this._xKey;\n        },\n        set: function (value) {\n            if (this._xKey !== value) {\n                this._xKey = value;\n                this.scheduleData();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HistogramSeries.prototype, \"areaPlot\", {\n        get: function () {\n            return this._areaPlot;\n        },\n        set: function (c) {\n            this._areaPlot = c;\n            this.scheduleData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HistogramSeries.prototype, \"bins\", {\n        get: function () {\n            return this._bins;\n        },\n        set: function (bins) {\n            this._bins = bins;\n            this.scheduleData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HistogramSeries.prototype, \"aggregation\", {\n        get: function () {\n            return this._aggregation;\n        },\n        set: function (aggregation) {\n            this._aggregation = aggregation;\n            this.scheduleData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HistogramSeries.prototype, \"binCount\", {\n        get: function () {\n            return this._binCount;\n        },\n        set: function (binCount) {\n            this._binCount = binCount;\n            this.scheduleData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HistogramSeries.prototype, \"xName\", {\n        get: function () {\n            return this._xName;\n        },\n        set: function (value) {\n            if (this._xName !== value) {\n                this._xName = value;\n                this.update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HistogramSeries.prototype, \"yKey\", {\n        get: function () {\n            return this._yKey;\n        },\n        set: function (yKey) {\n            this._yKey = yKey;\n            this.seriesItemEnabled = true;\n            this.scheduleData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HistogramSeries.prototype, \"yName\", {\n        get: function () {\n            return this._yName;\n        },\n        set: function (values) {\n            this._yName = values;\n            this.scheduleData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HistogramSeries.prototype, \"strokeWidth\", {\n        get: function () {\n            return this._strokeWidth;\n        },\n        set: function (value) {\n            if (this._strokeWidth !== value) {\n                this._strokeWidth = value;\n                this.update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HistogramSeries.prototype, \"shadow\", {\n        get: function () {\n            return this._shadow;\n        },\n        set: function (value) {\n            if (this._shadow !== value) {\n                this._shadow = value;\n                this.update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    HistogramSeries.prototype.onHighlightChange = function () {\n        this.updateRectNodes();\n    };\n    HistogramSeries.prototype.setColors = function (fills, strokes) {\n        this.fill = fills[0];\n        this.stroke = strokes[0];\n    };\n    // During processData phase, used to unify different ways of the user specifying\n    // the bins. Returns bins in format[[min1, max1], [min2, max2], ... ].\n    HistogramSeries.prototype.deriveBins = function () {\n        var _this = this;\n        var _a = this, bins = _a.bins, binCount = _a.binCount;\n        if (!this.data) {\n            return [];\n        }\n        if (bins) {\n            return bins;\n        }\n        var xData = this.data.map(function (datum) { return datum[_this.xKey]; });\n        var xDomain = this.fixNumericExtent(finiteExtent(xData), 'x');\n        var binStarts = ticks(xDomain[0], xDomain[1], this.binCount || defaultBinCount);\n        var binSize = tickStep(xDomain[0], xDomain[1], this.binCount || defaultBinCount);\n        var firstBinEnd = binStarts[0];\n        var expandStartToBin = function (n) { return [n, n + binSize]; };\n        return __spreadArrays([\n            [firstBinEnd - binSize, firstBinEnd]\n        ], binStarts.map(expandStartToBin));\n    };\n    HistogramSeries.prototype.placeDataInBins = function (data) {\n        var _this = this;\n        var xKey = this.xKey;\n        var derivedBins = this.deriveBins();\n        // creating a sorted copy allows binning in O(n) rather than O(n²)\n        // but at the expense of more temporary memory\n        var sortedData = data.slice().sort(function (a, b) {\n            if (a[xKey] < b[xKey]) {\n                return -1;\n            }\n            if (a[xKey] > b[xKey]) {\n                return 1;\n            }\n            return 0;\n        });\n        var currentBin = 0;\n        var bins = [new HistogramBin(derivedBins[0])];\n        loop: for (var i = 0, ln = sortedData.length; i < ln; i++) {\n            var datum = sortedData[i];\n            while (datum[xKey] > derivedBins[currentBin][1]) {\n                currentBin++;\n                var bin = derivedBins[currentBin];\n                if (!bin) {\n                    break loop;\n                }\n                bins.push(new HistogramBin(bin));\n            }\n            bins[currentBin].addDatum(datum);\n        }\n        bins.forEach(function (b) { return b.calculateAggregatedValue(_this._aggregation, _this.yKey); });\n        return bins;\n    };\n    Object.defineProperty(HistogramSeries.prototype, \"xMax\", {\n        get: function () {\n            var _this = this;\n            return this.data && this.data.reduce(function (acc, datum) {\n                return Math.max(acc, datum[_this.xKey]);\n            }, Number.NEGATIVE_INFINITY);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    HistogramSeries.prototype.processData = function () {\n        var _this = this;\n        var _a = this, xKey = _a.xKey, data = _a.data;\n        this.binnedData = this.placeDataInBins(xKey && data ? data : []);\n        var yData = this.binnedData.map(function (b) { return b.getY(_this.areaPlot); });\n        var yMinMax = numericExtent(yData);\n        this.yDomain = this.fixNumericExtent([0, yMinMax ? yMinMax[1] : 1], 'y');\n        var firstBin = this.binnedData[0];\n        var lastBin = this.binnedData[this.binnedData.length - 1];\n        var xMin = firstBin.domain[0];\n        var xMax = lastBin.domain[1];\n        this.xDomain = [xMin, xMax];\n        this.fireEvent({ type: 'dataProcessed' });\n        return true;\n    };\n    HistogramSeries.prototype.getDomain = function (direction) {\n        if (direction === ChartAxisDirection.X) {\n            return this.xDomain;\n        }\n        else {\n            return this.yDomain;\n        }\n    };\n    HistogramSeries.prototype.fireNodeClickEvent = function (event, datum) {\n        this.fireEvent({\n            type: 'nodeClick',\n            event: event,\n            series: this,\n            datum: datum.seriesDatum,\n            xKey: this.xKey\n        });\n    };\n    HistogramSeries.prototype.update = function () {\n        var _a = this, visible = _a.visible, chart = _a.chart, xAxis = _a.xAxis, yAxis = _a.yAxis;\n        this.group.visible = visible;\n        if (!xAxis || !yAxis || !visible || !chart || chart.layoutPending || chart.dataPending) {\n            return;\n        }\n        var nodeData = this.generateNodeData();\n        this.updateRectSelection(nodeData);\n        this.updateRectNodes();\n        this.updateTextSelection(nodeData);\n        this.updateTextNodes();\n    };\n    HistogramSeries.prototype.generateNodeData = function () {\n        var _this = this;\n        if (!this.seriesItemEnabled) {\n            return [];\n        }\n        var _a = this, xScale = _a.xAxis.scale, yScale = _a.yAxis.scale, fill = _a.fill, stroke = _a.stroke, strokeWidth = _a.strokeWidth;\n        var nodeData = [];\n        var defaultLabelFormatter = function (params) { return String(params.value); };\n        var _b = this.label, _c = _b.formatter, labelFormatter = _c === void 0 ? defaultLabelFormatter : _c, labelFontStyle = _b.fontStyle, labelFontWeight = _b.fontWeight, labelFontSize = _b.fontSize, labelFontFamily = _b.fontFamily, labelColor = _b.color;\n        this.binnedData.forEach(function (binOfData) {\n            var total = binOfData.aggregatedValue, frequency = binOfData.frequency, _a = binOfData.domain, xDomainMin = _a[0], xDomainMax = _a[1], relativeHeight = binOfData.relativeHeight;\n            var xMinPx = xScale.convert(xDomainMin), xMaxPx = xScale.convert(xDomainMax), \n            // note: assuming can't be negative:\n            y = _this.areaPlot ? relativeHeight : (_this.yKey ? total : frequency), yZeroPx = yScale.convert(0), yMaxPx = yScale.convert(y), w = xMaxPx - xMinPx, h = Math.abs(yMaxPx - yZeroPx);\n            var selectionDatumLabel = y !== 0 ? {\n                text: labelFormatter({ value: binOfData.aggregatedValue }),\n                fontStyle: labelFontStyle,\n                fontWeight: labelFontWeight,\n                fontSize: labelFontSize,\n                fontFamily: labelFontFamily,\n                fill: labelColor,\n                x: xMinPx + w / 2,\n                y: yMaxPx + h / 2\n            } : undefined;\n            nodeData.push({\n                series: _this,\n                seriesDatum: binOfData,\n                // since each selection is an aggregation of multiple data.\n                x: xMinPx,\n                y: yMaxPx,\n                width: w,\n                height: h,\n                fill: fill,\n                stroke: stroke,\n                strokeWidth: strokeWidth,\n                label: selectionDatumLabel,\n            });\n        });\n        return nodeData;\n    };\n    HistogramSeries.prototype.updateRectSelection = function (nodeData) {\n        var updateRects = this.rectSelection.setData(nodeData);\n        updateRects.exit.remove();\n        var enterRects = updateRects.enter.append(Rect).each(function (rect) {\n            rect.tag = HistogramSeriesNodeTag.Bin;\n            rect.crisp = true;\n        });\n        this.rectSelection = updateRects.merge(enterRects);\n    };\n    HistogramSeries.prototype.updateRectNodes = function () {\n        var _this = this;\n        if (!this.chart) {\n            return;\n        }\n        var highlightedDatum = this.chart.highlightedDatum;\n        var _a = this, fillOpacity = _a.fillOpacity, strokeOpacity = _a.strokeOpacity, shadow = _a.shadow, _b = _a.highlightStyle, fill = _b.fill, stroke = _b.stroke;\n        this.rectSelection.each(function (rect, datum) {\n            var highlighted = datum === highlightedDatum;\n            rect.x = datum.x;\n            rect.y = datum.y;\n            rect.width = datum.width;\n            rect.height = datum.height;\n            rect.fill = highlighted && fill !== undefined ? fill : datum.fill;\n            rect.stroke = highlighted && stroke !== undefined ? stroke : datum.stroke;\n            rect.fillOpacity = fillOpacity;\n            rect.strokeOpacity = strokeOpacity;\n            rect.strokeWidth = datum.strokeWidth;\n            rect.lineDash = _this.lineDash;\n            rect.lineDashOffset = _this.lineDashOffset;\n            rect.fillShadow = shadow;\n            rect.visible = datum.height > 0; // prevent stroke from rendering for zero height columns\n        });\n    };\n    HistogramSeries.prototype.updateTextSelection = function (nodeData) {\n        var updateTexts = this.textSelection.setData(nodeData);\n        updateTexts.exit.remove();\n        var enterTexts = updateTexts.enter.append(Text).each(function (text) {\n            text.tag = HistogramSeriesNodeTag.Label;\n            text.pointerEvents = PointerEvents.None;\n            text.textAlign = 'center';\n            text.textBaseline = 'middle';\n        });\n        this.textSelection = updateTexts.merge(enterTexts);\n    };\n    HistogramSeries.prototype.updateTextNodes = function () {\n        var labelEnabled = this.label.enabled;\n        this.textSelection.each(function (text, datum) {\n            var label = datum.label;\n            if (label && labelEnabled) {\n                text.text = label.text;\n                text.x = label.x;\n                text.y = label.y;\n                text.fontStyle = label.fontStyle;\n                text.fontWeight = label.fontWeight;\n                text.fontSize = label.fontSize;\n                text.fontFamily = label.fontFamily;\n                text.fill = label.fill;\n                text.visible = true;\n            }\n            else {\n                text.visible = false;\n            }\n        });\n    };\n    HistogramSeries.prototype.getTooltipHtml = function (nodeDatum) {\n        var _a = this, xKey = _a.xKey, yKey = _a.yKey, xAxis = _a.xAxis, yAxis = _a.yAxis;\n        if (!xKey) {\n            return '';\n        }\n        var _b = this, xName = _b.xName, yName = _b.yName, color = _b.fill, tooltip = _b.tooltip, aggregation = _b.aggregation;\n        var tooltipRenderer = tooltip.renderer;\n        var bin = nodeDatum.seriesDatum;\n        var aggregatedValue = bin.aggregatedValue, frequency = bin.frequency, _c = bin.domain, rangeMin = _c[0], rangeMax = _c[1];\n        var title = sanitizeHtml(xName || xKey) + \": \" + xAxis.formatDatum(rangeMin) + \" - \" + xAxis.formatDatum(rangeMax);\n        var content = yKey ?\n            \"<b>\" + sanitizeHtml(yName || yKey) + \" (\" + aggregation + \")</b>: \" + yAxis.formatDatum(aggregatedValue) + \"<br>\" :\n            '';\n        content += \"<b>Frequency</b>: \" + frequency;\n        var defaults = {\n            title: title,\n            backgroundColor: color,\n            content: content\n        };\n        if (tooltipRenderer) {\n            return toTooltipHtml(tooltipRenderer({\n                datum: bin,\n                xKey: xKey,\n                xValue: bin.domain,\n                xName: xName,\n                yKey: yKey,\n                yValue: bin.aggregatedValue,\n                yName: yName,\n                color: color\n            }), defaults);\n        }\n        return toTooltipHtml(defaults);\n    };\n    HistogramSeries.prototype.listSeriesItems = function (legendData) {\n        var _a = this, id = _a.id, data = _a.data, yKey = _a.yKey, yName = _a.yName, seriesItemEnabled = _a.seriesItemEnabled, fill = _a.fill, stroke = _a.stroke, fillOpacity = _a.fillOpacity, strokeOpacity = _a.strokeOpacity;\n        if (data && data.length) {\n            legendData.push({\n                id: id,\n                itemId: yKey,\n                enabled: seriesItemEnabled,\n                label: {\n                    text: yName || yKey || 'Frequency'\n                },\n                marker: {\n                    fill: fill || 'rgba(0, 0, 0, 0)',\n                    stroke: stroke || 'rgba(0, 0, 0, 0)',\n                    fillOpacity: fillOpacity,\n                    strokeOpacity: strokeOpacity\n                }\n            });\n        }\n    };\n    HistogramSeries.prototype.toggleSeriesItem = function (itemId, enabled) {\n        if (itemId === this.yKey) {\n            this.seriesItemEnabled = enabled;\n        }\n        this.scheduleData();\n    };\n    HistogramSeries.className = 'HistogramSeries';\n    HistogramSeries.type = 'histogram';\n    __decorate([\n        reactive('dataChange')\n    ], HistogramSeries.prototype, \"fill\", void 0);\n    __decorate([\n        reactive('dataChange')\n    ], HistogramSeries.prototype, \"stroke\", void 0);\n    __decorate([\n        reactive('layoutChange')\n    ], HistogramSeries.prototype, \"fillOpacity\", void 0);\n    __decorate([\n        reactive('layoutChange')\n    ], HistogramSeries.prototype, \"strokeOpacity\", void 0);\n    __decorate([\n        reactive('update')\n    ], HistogramSeries.prototype, \"lineDash\", void 0);\n    __decorate([\n        reactive('update')\n    ], HistogramSeries.prototype, \"lineDashOffset\", void 0);\n    return HistogramSeries;\n}(CartesianSeries));\nexport { HistogramSeries };\n"]},"metadata":{},"sourceType":"module"}